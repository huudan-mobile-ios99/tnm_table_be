/// <reference types="node" />
export declare type ArrayLike = unknown[] | Buffer | string;
/**
 * Buffer formatting
 * @param buffer
 */
export declare function printBuffer(buffer: Buffer): string;
/**
 * Create a promise which resolves after the specified milliseconds.
 * @param ms
 */
export declare const delay: (ms: number) => Promise<void>;
/**
 * Performs an asynchronous operation sequentially on all elements of an array
 * @param array
 * @param action
 */
export declare function series<T, R>(array: ReadonlyArray<T>, action: (item: T, index: number, arr: ReadonlyArray<T>, results: ReadonlyArray<R>) => Promise<R>): Promise<R[]>;
/**
 * 'Not Empty' type guard
 * @param value
 */
export declare function notEmpty<TValue>(value: TValue | null | undefined | void): value is TValue;
