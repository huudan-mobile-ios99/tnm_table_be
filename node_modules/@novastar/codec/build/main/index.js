"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.encodeUIntLE = exports.decodeUIntLE = exports.ConnectionClosedError = exports.TimeoutError = exports.ResponseError = exports.Connection = exports.Request = void 0;
const buffer_1 = require("buffer");
__exportStar(require("./Packet"), exports);
var Request_1 = require("./Request");
Object.defineProperty(exports, "Request", { enumerable: true, get: function () { return __importDefault(Request_1).default; } });
__exportStar(require("./Session"), exports);
var Connection_1 = require("./Connection");
Object.defineProperty(exports, "Connection", { enumerable: true, get: function () { return __importDefault(Connection_1).default; } });
var ResponseError_1 = require("./ResponseError");
Object.defineProperty(exports, "ResponseError", { enumerable: true, get: function () { return __importDefault(ResponseError_1).default; } });
var TimeoutError_1 = require("./TimeoutError");
Object.defineProperty(exports, "TimeoutError", { enumerable: true, get: function () { return __importDefault(TimeoutError_1).default; } });
var ConnectionClosedError_1 = require("./ConnectionClosedError");
Object.defineProperty(exports, "ConnectionClosedError", { enumerable: true, get: function () { return __importDefault(ConnectionClosedError_1).default; } });
__exportStar(require("./helper"), exports);
/**
 * Converts a `data` property of type `Buffer` of length 1, 2, or 4 bytes to an unsigned integer.
 * @param data - Buffer 1, 2 or 4 bytes long to convert
 */
const decodeUIntLE = ({ data }) => {
    switch (data.length) {
        case 1:
            return data.readUInt8();
        case 2:
            return data.readUInt16LE();
        case 4:
            return data.readUInt32LE();
        default:
            throw new TypeError(`Invalid buffer length: ${data.length}`);
    }
};
exports.decodeUIntLE = decodeUIntLE;
/**
 * Stores a non-negative number in a buffer of the specified length
 * @param value - Non-negative integer
 * @param size - Buffer size (1, 2, 4 bytes)
 */
const encodeUIntLE = (value, size) => {
    const buffer = buffer_1.Buffer.alloc(size);
    switch (size) {
        case 1:
            buffer.writeUInt8(value);
            break;
        case 2:
            buffer.writeUInt16LE(value);
            break;
        case 4:
            buffer.writeUInt32LE(value);
            break;
        default:
            throw new TypeError(`Invalid buffer size: ${size}`);
    }
    return buffer;
};
exports.encodeUIntLE = encodeUIntLE;
//# sourceMappingURL=index.js.map