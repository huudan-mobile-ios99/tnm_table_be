/// <reference types="node" />
import { LEDDisplyTypeEnum } from '@novastar/native/LEDDisplyType';
import { SimpleLEDDisplayInfo } from '@novastar/native/SimpleLEDDisplayInfo';
import { VirtualModeTypeEnum } from '@novastar/native/VirtualModeType';
import { ExtractType } from 'typed-struct';
export declare const SimpleSingleScreen: import("typed-struct").StructConstructor<{
    Type: LEDDisplyTypeEnum.SimpleSingleType;
    VirtualModeType: VirtualModeTypeEnum;
    X: number;
    Y: number;
    SenderIndex: number;
    PortCols: number;
    PortRows: number;
    ScanBdCols: number;
    ScanBdRows: number;
    PixelColsInScanBd: number;
    PixelRowsInScanBd: number;
    readonly PortScanBdInfoList: {
        ConnectType: import("@novastar/native/ScanBoardConnectType").ScanBoardConnectTypeEnum;
        PortIndex: number;
        ScanBdBegColNo: number;
        ScanBdBegRowNo: number;
        ScanBdEndColNo: number;
        ScanBdEndRowNo: number;
    }[];
}, "SimpleSingleScreen">;
export type SimpleSingleScreen = ExtractType<typeof SimpleSingleScreen, false>;
export declare const decodeSimpleLEDDisplayInfo: (data: Buffer) => SimpleLEDDisplayInfo;
