/// <reference types="node" />
import { LEDDisplyTypeEnum } from '@novastar/native/LEDDisplyType';
import { StandardLEDDisplayInfo } from '@novastar/native/StandardLEDDisplayInfo';
import { VirtualModeTypeEnum } from '@novastar/native/VirtualModeType';
import { ExtractType } from 'typed-struct';
export declare const StandardScreen: import("typed-struct").StructConstructor<{
    Type: LEDDisplyTypeEnum.StandardType;
    VirtualMode: VirtualModeTypeEnum;
    X: number;
    Y: number;
    ScanBdCols: number;
    ScanBdRows: number;
    readonly ScannerRegionList: {
        SenderIndex: number;
        PortIndex: number;
        ConnectIndex: number;
        X: number;
        Y: number;
        XInPort: number;
        YInPort: number;
        Width: number;
        Height: number;
        DVIIndex: number;
    }[];
}, "StandardScreen">;
export type StandardScreen = ExtractType<typeof StandardScreen, false>;
export declare const decodeStandardLEDDisplayInfo: (data: Buffer) => StandardLEDDisplayInfo;
