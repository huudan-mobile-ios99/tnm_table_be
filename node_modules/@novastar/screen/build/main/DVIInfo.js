"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.decodeGraphicsDVIPortInfo = exports.DVIInfo = void 0;
const GraphicsDVIPortInfo_1 = require("@novastar/native/GraphicsDVIPortInfo");
const Either_1 = require("fp-ts/Either");
const PathReporter_1 = require("io-ts/PathReporter");
const typed_struct_1 = __importDefault(require("typed-struct"));
const common_1 = require("./common");
exports.DVIInfo = new typed_struct_1.default('DVIInfo')
    .UInt16LE('version')
    .UInt16LE('crc')
    .UInt8('DviPortCols')
    .UInt8('DviPortRows')
    .UInt8('GraphicsWidth')
    .UInt8('GraphicsHeight')
    .compile();
const decodeGraphicsDVIPortInfo = (data) => {
    const info = new exports.DVIInfo(data);
    if (info.crc !== (0, common_1.crc16)(data.slice(4), 0))
        throw new TypeError('Invalid dvi info crc');
    const validation = GraphicsDVIPortInfo_1.GraphicsDVIPortInfo.decode(info.toJSON());
    if ((0, Either_1.isLeft)(validation))
        throw new TypeError(`Invalid dvi info: ${PathReporter_1.PathReporter.report(validation)}`);
    return [validation.right, info.version];
};
exports.decodeGraphicsDVIPortInfo = decodeGraphicsDVIPortInfo;
//# sourceMappingURL=DVIInfo.js.map