/// <reference types="node" />
import { ComplexLEDDisplayInfo } from '@novastar/native/ComplexLEDDisplayInfo';
import { LEDDisplyTypeEnum } from '@novastar/native/LEDDisplyType';
import { VirtualModeTypeEnum } from '@novastar/native/VirtualModeType';
import { ExtractType } from 'typed-struct';
export declare const ComplexScreen: import("typed-struct").StructConstructor<{
    Type: LEDDisplyTypeEnum.ComplexType;
    VirtualMode: VirtualModeTypeEnum;
    ScannerCount: number;
    readonly ScanBoardRegionInfoList: {
        SenderIndex: number;
        PortIndex: number;
        ConnectIndex: number;
        X: number;
        Y: number;
        XInPort: number;
        YInPort: number;
        Width: number;
        Height: number;
    }[];
}, "ComplexScreen">;
export type ComplexScreen = ExtractType<typeof ComplexScreen, false>;
export declare const decodeComplexLEDDisplayInfo: (data: Buffer) => ComplexLEDDisplayInfo;
