import { DeviceType, Request } from '@novastar/codec';
import serial, { findSendingCards } from './serial';
describe('novastar', () => {
    test('serial', async () => {
        const [port] = await findSendingCards();
        console.log({ port });
        const session = await serial.open({
            path: port.path,
            baudRate: 115200,
        });
        try {
            const readReq = new Request(1);
            readReq.deviceType = DeviceType.ReceivingCard;
            readReq.address = 0x02000001;
            readReq.port = 0;
            const { data: [value] } = await session.connection.send(readReq);
            console.log({ value });
            // Close all serial sessions
            serial.release();
        }
        catch (err) {
            console.error(err);
        }
    });
    test('modelId', async () => {
        const [port] = await findSendingCards();
        console.log({ port });
        const session = await serial.open({
            path: port.path,
            baudRate: 115200,
        });
        try {
            const readReq = new Request(2);
            readReq.deviceType = DeviceType.SendingCard;
            readReq.address = 2;
            const { data } = await session.connection.send(readReq);
            console.log('modelId', data.readUInt16LE());
            // Close all serial sessions
            serial.release();
        }
        catch (err) {
            console.error(err);
        }
    });
});
//# sourceMappingURL=test.js.map