import * as t from 'io-ts';
import { Chip5152ExtendProperty } from './Chip5152ExtendProperty';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const Chip5152RGBVExtendPropeyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: Chip5152ExtendProperty,
        GreenProperty: Chip5152ExtendProperty,
        BlueProperty: Chip5152ExtendProperty,
        VRedProperty: Chip5152ExtendProperty,
    }),
], 'Chip5152RGBVExtendPropeyBase');
/**
 * @category Codecs
 * @desc Codec for {@link Chip5152RGBVExtendPropey}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:28065
 */
export const Chip5152RGBVExtendPropey = t.intersection([
    Chip5152RGBVExtendPropeyBase,
    t.partial({ '@_xsi:type': t.literal('Chip5152RGBVExtendPropey') }),
], 'Chip5152RGBVExtendPropey');
//# sourceMappingURL=Chip5152RGBVExtendPropey.js.map