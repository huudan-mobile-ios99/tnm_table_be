import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const CustomRegExtendPropertyBaseBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        RegValueConfigThird: common.UInt16_30976,
    }),
    t.partial({
        IsAdvancedMode: common.Bool,
        RegValueConfigFirst: common.UInt16,
        RegValueConfigSecond: common.UInt16,
    }),
], 'CustomRegExtendPropertyBaseBase');
/**
 * @category Codecs
 * @desc Codec for {@link CustomRegExtendPropertyBase}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:49222
 */
export const CustomRegExtendPropertyBase = t.intersection([
    CustomRegExtendPropertyBaseBase,
    t.partial({ '@_xsi:type': t.literal('CustomRegExtendPropertyBase') }),
], 'CustomRegExtendPropertyBase');
//# sourceMappingURL=CustomRegExtendPropertyBase.js.map