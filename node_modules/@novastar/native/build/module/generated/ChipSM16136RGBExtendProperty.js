import * as t from 'io-ts';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipSM16136ExtendProperty } from './ChipSM16136ExtendProperty';
export const ChipSM16136RGBExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: ChipSM16136ExtendProperty,
        GreenProperty: ChipSM16136ExtendProperty,
        BlueProperty: ChipSM16136ExtendProperty,
        VRedProperty: ChipSM16136ExtendProperty,
    }),
], 'ChipSM16136RGBExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16136RGBExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:48022
 */
export const ChipSM16136RGBExtendProperty = t.intersection([
    ChipSM16136RGBExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSM16136RGBExtendProperty') }),
], 'ChipSM16136RGBExtendProperty');
//# sourceMappingURL=ChipSM16136RGBExtendProperty.js.map