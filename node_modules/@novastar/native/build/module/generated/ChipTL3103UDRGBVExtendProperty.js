import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipTL3103UDExtendProperty } from './ChipTL3103UDExtendProperty';
export const ChipTL3103UDRGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        REG_LENGTH: common.Int32_11,
    }),
    t.partial({
        RedProperty: ChipTL3103UDExtendProperty,
        GreenProperty: ChipTL3103UDExtendProperty,
        BlueProperty: ChipTL3103UDExtendProperty,
        VRedProperty: ChipTL3103UDExtendProperty,
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
        GrayDepth: common.UInt8,
        SpecialDataLen: common.Int32,
        SpecialRegisterAddr: common.UInt32,
    }),
], 'ChipTL3103UDRGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipTL3103UDRGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipTL3103UD.decompiled.cs:1057
 */
export const ChipTL3103UDRGBVExtendProperty = t.intersection([
    ChipTL3103UDRGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipTL3103UDRGBVExtendProperty') }),
], 'ChipTL3103UDRGBVExtendProperty');
//# sourceMappingURL=ChipTL3103UDRGBVExtendProperty.js.map