import * as t from 'io-ts';
export declare const ChipMY9263ExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    EnResetAPDMOrPWM: t.Type<boolean, boolean, unknown>;
    EnManualSyc: t.Type<boolean, boolean, unknown>;
}>, t.PartialC<{
    ModeSelecte: t.Type<boolean, boolean, unknown>;
    PowerSavingMode: t.Type<boolean, boolean, unknown>;
    GclkMonitor: t.Type<boolean, boolean, unknown>;
    GclkPrivider: t.Type<boolean, boolean, unknown>;
    EnAutoCloseChannel: t.Type<boolean, boolean, unknown>;
    LedThreadType: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipMY9263ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:42081
 */
export declare const ChipMY9263ExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    EnResetAPDMOrPWM: t.Type<boolean, boolean, unknown>;
    EnManualSyc: t.Type<boolean, boolean, unknown>;
}>, t.PartialC<{
    ModeSelecte: t.Type<boolean, boolean, unknown>;
    PowerSavingMode: t.Type<boolean, boolean, unknown>;
    GclkMonitor: t.Type<boolean, boolean, unknown>;
    GclkPrivider: t.Type<boolean, boolean, unknown>;
    EnAutoCloseChannel: t.Type<boolean, boolean, unknown>;
    LedThreadType: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipMY9263ExtendProperty">;
}>]>;
export interface ChipMY9263ExtendProperty extends t.TypeOf<typeof ChipMY9263ExtendProperty> {
}
