import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipSCL8081ExtendProperty } from './ChipSCL8081ExtendProperty';
export const ChipSCL8081RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        REG_LENGTH: common.Int32_4,
    }),
    t.partial({
        RedProperty: ChipSCL8081ExtendProperty,
        GreenProperty: ChipSCL8081ExtendProperty,
        BlueProperty: ChipSCL8081ExtendProperty,
        VRedProperty: ChipSCL8081ExtendProperty,
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
        ScanCount: common.UInt8,
        SpecialDataLen: common.Int32,
        SpecialRegisterAddr: common.UInt32,
    }),
], 'ChipSCL8081RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSCL8081RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipSCL8081.decompiled.cs:908
 */
export const ChipSCL8081RGBVExtendProperty = t.intersection([
    ChipSCL8081RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSCL8081RGBVExtendProperty') }),
], 'ChipSCL8081RGBVExtendProperty');
//# sourceMappingURL=ChipSCL8081RGBVExtendProperty.js.map