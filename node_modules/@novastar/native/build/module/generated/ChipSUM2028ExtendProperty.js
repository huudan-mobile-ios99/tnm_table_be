import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipSUM2028ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        ColorCompensate: common.Int32_4,
        UpdataType: common.Bool_true,
        OEType: common.Bool_true,
        SetDisapparate: common.UInt8_1,
    }),
    t.partial({
        SetFrequency: common.UInt8,
        SetConstantCurrent: common.UInt8,
    }),
], 'ChipSUM2028ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSUM2028ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:47737
 */
export const ChipSUM2028ExtendProperty = t.intersection([
    ChipSUM2028ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSUM2028ExtendProperty') }),
], 'ChipSUM2028ExtendProperty');
//# sourceMappingURL=ChipSUM2028ExtendProperty.js.map