import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipMY9866ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        IsAdvancedMode: common.Bool,
        RActionSpeed: common.Int32,
        GActionSpeed: common.Int32,
        BActionSpeed: common.Int32,
        RedRegValueConfigFirst: common.UInt16,
        GreenRegValueConfigFirst: common.UInt16,
        BlueRegValueConfigFirst: common.UInt16,
        VRedRegValueConfigFirst: common.UInt16,
    }),
], 'ChipMY9866ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipMY9866ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:30990
 */
export const ChipMY9866ExtendProperty = t.intersection([
    ChipMY9866ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipMY9866ExtendProperty') }),
], 'ChipMY9866ExtendProperty');
//# sourceMappingURL=ChipMY9866ExtendProperty.js.map