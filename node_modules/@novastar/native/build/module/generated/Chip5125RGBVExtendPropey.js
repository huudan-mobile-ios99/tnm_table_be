import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipMBI525ExtendProperty } from './ChipMBI525ExtendProperty';
export const Chip5125RGBVExtendPropeyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        OEPlusWidth: common.Int32_1,
        HardwareResetOne: common.Bool_true,
    }),
    t.partial({
        RedProperty: ChipMBI525ExtendProperty,
        GreenProperty: ChipMBI525ExtendProperty,
        BlueProperty: ChipMBI525ExtendProperty,
        VRedProperty: ChipMBI525ExtendProperty,
        IsAdvancedMode: common.Bool,
        HardwareResetTwo: common.Int32,
        SoftwareReset: common.Int32,
    }),
], 'Chip5125RGBVExtendPropeyBase');
/**
 * @category Codecs
 * @desc Codec for {@link Chip5125RGBVExtendPropey}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:42974
 */
export const Chip5125RGBVExtendPropey = t.intersection([
    Chip5125RGBVExtendPropeyBase,
    t.partial({ '@_xsi:type': t.literal('Chip5125RGBVExtendPropey') }),
], 'Chip5125RGBVExtendPropey');
//# sourceMappingURL=Chip5125RGBVExtendPropey.js.map