import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipSM16388ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        RegisterArray: common.XMLArray(common.UInt16, 'ushort'),
    }),
    t.partial({
        ShadowEliminationLevel_1: common.UInt8,
        ShadowEliminationTime_1: common.UInt8,
        ShadowEliminationEnable_2: common.Bool,
        ShadowEliminationLevel_2: common.UInt8,
        ShadowEliminationEnable_3: common.Bool,
        ShadowEliminationLevel_3: common.UInt8,
        FirstLineDarkCompensationLevel: common.UInt8,
        FirstLineDarkCompensationTime: common.UInt8,
        LowGrayCompsention1: common.UInt8,
        LowGrayCompsention2: common.UInt8,
        LowGrayHorizontalStripesImproved: common.UInt8,
        CoupledEnhancementModeEn: common.Bool,
        CouplingOptimization_1: common.UInt8,
        CouplingOptimization_2: common.UInt16,
        EnergySavingMode: common.UInt8,
        GrayScaleUniformity: common.UInt8,
        CrossEliminationLevel: common.UInt8,
    }),
], 'ChipSM16388ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16388ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipSM16388.decompiled.cs:6657
 */
export const ChipSM16388ExtendProperty = t.intersection([
    ChipSM16388ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSM16388ExtendProperty') }),
], 'ChipSM16388ExtendProperty');
//# sourceMappingURL=ChipSM16388ExtendProperty.js.map