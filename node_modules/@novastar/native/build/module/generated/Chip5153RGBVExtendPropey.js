import * as t from 'io-ts';
import { Chip5153ExtendProperty } from './Chip5153ExtendProperty';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const Chip5153RGBVExtendPropeyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: Chip5153ExtendProperty,
        GreenProperty: Chip5153ExtendProperty,
        BlueProperty: Chip5153ExtendProperty,
        VRedProperty: Chip5153ExtendProperty,
    }),
], 'Chip5153RGBVExtendPropeyBase');
/**
 * @category Codecs
 * @desc Codec for {@link Chip5153RGBVExtendPropey}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:28577
 */
export const Chip5153RGBVExtendPropey = t.intersection([
    Chip5153RGBVExtendPropeyBase,
    t.partial({ '@_xsi:type': t.literal('Chip5153RGBVExtendPropey') }),
], 'Chip5153RGBVExtendPropey');
//# sourceMappingURL=Chip5153RGBVExtendPropey.js.map