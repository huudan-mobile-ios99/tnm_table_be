import * as t from 'io-ts';
import * as common from '../lib/common';
import { AudioControlMode } from './AudioControlMode';
import { DviSelectMode } from './DviSelectMode';
import { HDEnableMode } from './HDEnableMode';
import { SourceSelectLoadMode } from './SourceSelectLoadMode';
import { VedioSelectMode } from './VedioSelectMode';
/**
 * @category Codecs
 * @desc Codec for interface {@link SenderProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:53072
 */
export const SenderProperty = t.intersection([
    t.type({
        FieldRate: common.withDefault(common.Numeric, 60),
        DviSelect: common.withDefault(DviSelectMode, 'DVI'),
        AudioControl: common.withDefault(AudioControlMode, 'External'),
        HDEnable: common.withDefault(HDEnableMode, 'Bit8'),
        LoadSelect: common.withDefault(SourceSelectLoadMode, 'BackUpLoad'),
        VedioSelect: common.withDefault(VedioSelectMode, 'Manual'),
    }),
    t.partial({
        CompanyID: common.Int32,
        ModalID: common.Int32,
        SN: t.string,
        IsSerdes: common.Bool,
        Is3DEnable: common.Bool,
    }),
], 'SenderProperty');
//# sourceMappingURL=SenderProperty.js.map