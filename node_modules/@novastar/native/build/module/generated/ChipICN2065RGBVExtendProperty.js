import * as t from 'io-ts';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipICN2065ExtendProperty } from './ChipICN2065ExtendProperty';
export const ChipICN2065RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: ChipICN2065ExtendProperty,
        GreenProperty: ChipICN2065ExtendProperty,
        BlueProperty: ChipICN2065ExtendProperty,
        VRedProperty: ChipICN2065ExtendProperty,
    }),
], 'ChipICN2065RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipICN2065RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:36288
 */
export const ChipICN2065RGBVExtendProperty = t.intersection([
    ChipICN2065RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipICN2065RGBVExtendProperty') }),
], 'ChipICN2065RGBVExtendProperty');
//# sourceMappingURL=ChipICN2065RGBVExtendProperty.js.map