import * as t from 'io-ts';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipMBI524ExtendProperty } from './ChipMBI524ExtendProperty';
export const Chip5124RGBVExtendPropeyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: ChipMBI524ExtendProperty,
        GreenProperty: ChipMBI524ExtendProperty,
        BlueProperty: ChipMBI524ExtendProperty,
        VRedProperty: ChipMBI524ExtendProperty,
    }),
], 'Chip5124RGBVExtendPropeyBase');
/**
 * @category Codecs
 * @desc Codec for {@link Chip5124RGBVExtendPropey}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:43103
 */
export const Chip5124RGBVExtendPropey = t.intersection([
    Chip5124RGBVExtendPropeyBase,
    t.partial({ '@_xsi:type': t.literal('Chip5124RGBVExtendPropey') }),
], 'Chip5124RGBVExtendPropey');
//# sourceMappingURL=Chip5124RGBVExtendPropey.js.map