import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipFM6565ExtendProperty } from './ChipFM6565ExtendProperty';
export const ChipFM6565RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        REG_LENGTH: common.Int32_48,
    }),
    t.partial({
        RedProperty: ChipFM6565ExtendProperty,
        GreenProperty: ChipFM6565ExtendProperty,
        BlueProperty: ChipFM6565ExtendProperty,
        VRedProperty: ChipFM6565ExtendProperty,
        IsAdvancedMode: common.Bool,
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
        SpecialDataLen: common.Int32,
        SpecialRegisterAddr: common.UInt32,
    }),
], 'ChipFM6565RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipFM6565RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipFM6565.decompiled.cs:1329
 */
export const ChipFM6565RGBVExtendProperty = t.intersection([
    ChipFM6565RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipFM6565RGBVExtendProperty') }),
], 'ChipFM6565RGBVExtendProperty');
//# sourceMappingURL=ChipFM6565RGBVExtendProperty.js.map