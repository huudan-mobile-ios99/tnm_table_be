import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipFM6518ExtendProperty } from './ChipFM6518ExtendProperty';
export const ChipFM6518RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: ChipFM6518ExtendProperty,
        GreenProperty: ChipFM6518ExtendProperty,
        BlueProperty: ChipFM6518ExtendProperty,
        VRedProperty: ChipFM6518ExtendProperty,
        ScanCount: common.UInt8,
        IsStarSwipPoint: common.Bool,
        IsAdvancedModel: common.Bool,
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
    }),
], 'ChipFM6518RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipFM6518RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipFM6518.decompiled.cs:6602
 */
export const ChipFM6518RGBVExtendProperty = t.intersection([
    ChipFM6518RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipFM6518RGBVExtendProperty') }),
], 'ChipFM6518RGBVExtendProperty');
//# sourceMappingURL=ChipFM6518RGBVExtendProperty.js.map