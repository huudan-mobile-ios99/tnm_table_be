import * as t from 'io-ts';
import { AutoAdjustFreqTypeEnum } from './AutoAdjustFreqType';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
/**
 * @category Codecs
 * @desc Codec for interface {@link SingleRefreshRateParam}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:16999
 */
export declare const SingleRefreshRateParam: t.PartialC<{
    AutoAdjustFreqType: t.Type<AutoAdjustFreqTypeEnum, "Freq_50HZ" | "Freq_60HZ" | "Freq_75HZ" | "Freq_120HZ" | "Freq_48HZ" | "Freq_30HZ" | "Freq_85HZ" | "Freq_100HZ" | "Freq_24HZ" | "Freq_72HZ" | "Freq_25HZ" | "Freq_240HZ", unknown>;
    RefreshRateParam: t.PartialC<{}>;
    IsConfigCurrentField: t.Type<boolean, boolean, unknown>;
}>;
export interface SingleRefreshRateParam extends t.TypeOf<typeof SingleRefreshRateParam> {
    AutoAdjustFreqType?: AutoAdjustFreqTypeEnum;
    RefreshRateParam?: ChipBaseExtendPropey;
}
