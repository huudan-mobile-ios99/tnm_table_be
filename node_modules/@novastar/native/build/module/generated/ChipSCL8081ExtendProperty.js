import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipSCL8081ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        RegArray: common.XMLArray(common.UInt32, 'uint'),
    }),
    t.partial({
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
    }),
], 'ChipSCL8081ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSCL8081ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipSCL8081.decompiled.cs:863
 */
export const ChipSCL8081ExtendProperty = t.intersection([
    ChipSCL8081ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSCL8081ExtendProperty') }),
], 'ChipSCL8081ExtendProperty');
//# sourceMappingURL=ChipSCL8081ExtendProperty.js.map