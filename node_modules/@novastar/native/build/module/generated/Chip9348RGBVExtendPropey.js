import * as t from 'io-ts';
import * as common from '../lib/common';
import { Chip9348ExtendProperty } from './Chip9348ExtendProperty';
/**
 * @category Codecs
 * @desc Codec for interface {@link Chip9348RGBVExtendPropey}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:39881
 */
export const Chip9348RGBVExtendPropey = t.intersection([
    t.type({
        GrayscaleSelect: common.UInt8_2,
        LastGhostAbatement2: common.UInt8_2,
    }),
    t.partial({
        RedProperty: Chip9348ExtendProperty,
        GreenProperty: Chip9348ExtendProperty,
        BlueProperty: Chip9348ExtendProperty,
        VRedProperty: Chip9348ExtendProperty,
        DummyGclkEn: common.Bool,
        LastGhostAbatement1: common.UInt8,
        FailureLEDElimination: common.Bool,
        RedGain: common.Int32,
        BlueGain: common.Int32,
        GreenGain: common.Int32,
        RedRegValueConfigThird: common.UInt16,
        GreenRegValueConfigThird: common.UInt16,
        BlueRegValueConfigThird: common.UInt16,
        VRedRegValueConfigThird: common.UInt16,
        RedRegValueConfigSpecial: common.UInt16,
        GreenRegValueConfigSpecial: common.UInt16,
        BlueRegValueConfigSpecial: common.UInt16,
        VRedRegValueConfigSpecial: common.UInt16,
    }),
], 'Chip9348RGBVExtendPropey');
//# sourceMappingURL=Chip9348RGBVExtendPropey.js.map