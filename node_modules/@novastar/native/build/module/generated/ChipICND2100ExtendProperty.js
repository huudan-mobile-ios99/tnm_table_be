import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipICND2100ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        TurningPointVoltage: common.withDefault(common.Int32, 7),
        RedRegValueConfigFirst: common.UInt16_23,
        GreenRegValueConfigFirst: common.UInt16_23,
        BlueRegValueConfigFirst: common.UInt16_23,
        VRedRegValueConfigFirst: common.UInt16_23,
    }),
    t.partial({
        IsAdvanceModel: common.Bool,
        IsEliminateShadow: common.Bool,
    }),
], 'ChipICND2100ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipICND2100ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipICND2100.decompiled.cs:745
 */
export const ChipICND2100ExtendProperty = t.intersection([
    ChipICND2100ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipICND2100ExtendProperty') }),
], 'ChipICND2100ExtendProperty');
//# sourceMappingURL=ChipICND2100ExtendProperty.js.map