import * as t from 'io-ts';
export declare const ChipSM16359ExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    IsShadowsEnable: t.Type<boolean, boolean, unknown>;
    RegValueConfigFirst: t.Type<number, number, unknown>;
    BlankingMode: t.Type<number, number, unknown>;
    RegValueConfigSecond: t.Type<number, number, unknown>;
    RegValueConfigThird: t.Type<number, number, unknown>;
}>, t.PartialC<{
    LowAshCompensationTwo: t.Type<number, number, unknown>;
    LowAshCompensationOne: t.Type<number, number, unknown>;
    IsOpenTest: t.Type<boolean, boolean, unknown>;
    OpenTestVoltageGrade: t.Type<number, number, unknown>;
    IsEnergySaving: t.Type<boolean, boolean, unknown>;
    ShadowVoltageOne: t.Type<number, number, unknown>;
    ShadowVoltageTwo: t.Type<number, number, unknown>;
    RegValueConfigForth: t.Type<number, number, unknown>;
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
    PWMModle: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16359ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:51352
 */
export declare const ChipSM16359ExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    IsShadowsEnable: t.Type<boolean, boolean, unknown>;
    RegValueConfigFirst: t.Type<number, number, unknown>;
    BlankingMode: t.Type<number, number, unknown>;
    RegValueConfigSecond: t.Type<number, number, unknown>;
    RegValueConfigThird: t.Type<number, number, unknown>;
}>, t.PartialC<{
    LowAshCompensationTwo: t.Type<number, number, unknown>;
    LowAshCompensationOne: t.Type<number, number, unknown>;
    IsOpenTest: t.Type<boolean, boolean, unknown>;
    OpenTestVoltageGrade: t.Type<number, number, unknown>;
    IsEnergySaving: t.Type<boolean, boolean, unknown>;
    ShadowVoltageOne: t.Type<number, number, unknown>;
    ShadowVoltageTwo: t.Type<number, number, unknown>;
    RegValueConfigForth: t.Type<number, number, unknown>;
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
    PWMModle: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipSM16359ExtendProperty">;
}>]>;
export interface ChipSM16359ExtendProperty extends t.TypeOf<typeof ChipSM16359ExtendProperty> {
}
