import * as t from 'io-ts';
import * as common from '../lib/common';
import { CabinetType } from './CabinetType';
import { ModuleInIrRegularCabinet } from './ModuleInIrRegularCabinet';
/**
 * @category Codecs
 * @desc Codec for interface {@link IrRegularCabinetProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:15275
 */
export const IrRegularCabinetProperty = t.intersection([
    t.type({
        Name: common.string_empty,
        CabinetVersion: common.string_20,
        ModuleListInCabinet: common.XMLArray(ModuleInIrRegularCabinet, 'ModuleInIrRegularCabinet'),
    }),
    t.partial({
        PhysicalDataGroupNum: common.Int32,
        CabinetType,
        Width: common.Int32,
        Height: common.Int32,
        MaxSumOfScanPointInGroup: common.Int32,
        PointTableData: common.Base64,
        PumpModel: common.Int32,
        pumpGroupsLines: common.Base64,
        PumpWidthReduction: common.Int32,
        PumpHeightReduction: common.Int32,
    }),
], 'IrRegularCabinetProperty');
//# sourceMappingURL=IrRegularCabinetProperty.js.map