import * as t from 'io-ts';
export declare const ChipMY9866ExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
    RActionSpeed: t.Type<number, number, unknown>;
    GActionSpeed: t.Type<number, number, unknown>;
    BActionSpeed: t.Type<number, number, unknown>;
    RedRegValueConfigFirst: t.Type<number, number, unknown>;
    GreenRegValueConfigFirst: t.Type<number, number, unknown>;
    BlueRegValueConfigFirst: t.Type<number, number, unknown>;
    VRedRegValueConfigFirst: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipMY9866ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:30990
 */
export declare const ChipMY9866ExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
    RActionSpeed: t.Type<number, number, unknown>;
    GActionSpeed: t.Type<number, number, unknown>;
    BActionSpeed: t.Type<number, number, unknown>;
    RedRegValueConfigFirst: t.Type<number, number, unknown>;
    GreenRegValueConfigFirst: t.Type<number, number, unknown>;
    BlueRegValueConfigFirst: t.Type<number, number, unknown>;
    VRedRegValueConfigFirst: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipMY9866ExtendProperty">;
}>]>;
export interface ChipMY9866ExtendProperty extends t.TypeOf<typeof ChipMY9866ExtendProperty> {
}
