import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipSM16259ExtendProperty } from './ChipSM16259ExtendProperty';
export const ChipSM16259RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: ChipSM16259ExtendProperty,
        GreenProperty: ChipSM16259ExtendProperty,
        BlueProperty: ChipSM16259ExtendProperty,
        VRedProperty: ChipSM16259ExtendProperty,
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
        FirstDataLen: common.Int32,
        FirstStartIndex: common.Int32,
        FirstRegisterAddr: common.Int32,
    }),
], 'ChipSM16259RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16259RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipSM16259.decompiled.cs:432
 */
export const ChipSM16259RGBVExtendProperty = t.intersection([
    ChipSM16259RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSM16259RGBVExtendProperty') }),
], 'ChipSM16259RGBVExtendProperty');
//# sourceMappingURL=ChipSM16259RGBVExtendProperty.js.map