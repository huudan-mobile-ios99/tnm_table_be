import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipMBI6033ExtendProperty } from './ChipMBI6033ExtendProperty';
export const ChipMBI6033RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: ChipMBI6033ExtendProperty,
        GreenProperty: ChipMBI6033ExtendProperty,
        BlueProperty: ChipMBI6033ExtendProperty,
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
        ICNumber: common.UInt16,
        GclkUnitCycle: common.UInt8,
        FirstDataLen: common.Int32,
        FirstStartIndex: common.Int32,
        FirstRegisterAddr: common.Int32,
        SecondDataLen: common.Int32,
        SecondStartIndex: common.Int32,
        SecondRegisterAddr: common.Int32,
        ThirdDataLen: common.Int32,
        ThirdDataStartIndex: common.Int32,
        ThirdRegisterAddr: common.Int32,
    }),
], 'ChipMBI6033RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipMBI6033RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipMBI6033.decompiled.cs:87
 */
export const ChipMBI6033RGBVExtendProperty = t.intersection([
    ChipMBI6033RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipMBI6033RGBVExtendProperty') }),
], 'ChipMBI6033RGBVExtendProperty');
//# sourceMappingURL=ChipMBI6033RGBVExtendProperty.js.map