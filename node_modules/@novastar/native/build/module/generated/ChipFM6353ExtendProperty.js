import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipFM6353ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        RegFirst: common.withDefault(common.UInt16, 7536),
        RegSecond: common.withDefault(common.UInt16, 64853),
        RegThird: common.withDefault(common.UInt16, 16391),
        RegFourth: common.withDefault(common.UInt16, 64),
    }),
    t.partial({
        LowAshPitsImprove: common.UInt8,
        IsElimateShadow: common.Bool,
        Gain: common.UInt16,
        LowGrayAdjustGrade: common.UInt8,
        IsLowGrayAdjust: common.Bool,
        IsLowGrayCompensate: common.Bool,
        LowGrayCompensateGrade: common.UInt8,
        IsFirstLineSlantsDark: common.Bool,
        FirstLineSlantsDarkOptimization: common.UInt8,
        IsUseNewModule: common.Bool,
    }),
], 'ChipFM6353ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipFM6353ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipFM6353.decompiled.cs:946
 */
export const ChipFM6353ExtendProperty = t.intersection([
    ChipFM6353ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipFM6353ExtendProperty') }),
], 'ChipFM6353ExtendProperty');
//# sourceMappingURL=ChipFM6353ExtendProperty.js.map