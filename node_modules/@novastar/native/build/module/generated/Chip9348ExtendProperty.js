import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const Chip9348ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        CurrentSet1: common.UInt8,
        CurrentSet2: common.UInt8,
        CurrentGain: common.UInt8,
        LowGrayscaleCompensation: common.UInt8,
        FirstScanCompensation: common.UInt8,
        CompensationMode: common.UInt8,
        CurrentSet3: common.UInt8,
        NextGhostAbatement: common.UInt8,
        Adjustment: common.UInt8,
    }),
], 'Chip9348ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link Chip9348ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:39711
 */
export const Chip9348ExtendProperty = t.intersection([Chip9348ExtendPropertyBase, t.partial({ '@_xsi:type': t.literal('Chip9348ExtendProperty') })], 'Chip9348ExtendProperty');
//# sourceMappingURL=Chip9348ExtendProperty.js.map