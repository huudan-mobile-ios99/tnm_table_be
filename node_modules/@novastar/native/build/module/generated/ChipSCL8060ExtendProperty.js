import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipSCL8060ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        EnLEDOpenShortDet: common.UInt8_3,
        LongWaitB: common.Bool_true,
    }),
    t.partial({
        RedDtVoltage: common.Bool,
        GreenDtVoltage: common.Bool,
        BlueDtVoltage: common.Bool,
        AnodeSideFastCharge: common.UInt8,
        DeadTimeGCLKVsync: common.UInt8,
        SLowFrame: common.Bool,
        OutPutCurRange: common.Bool,
        F50_25Hz: common.Bool,
        Dtbig: common.Bool,
        GclkSkewValue: common.UInt8,
        EnLEDShortProtect: common.Bool,
        GclkE1A0A2Source: common.Bool,
        EnOverTemprDect: common.Bool,
        GrayScaleMode: common.Bool,
    }),
], 'ChipSCL8060ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSCL8060ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:45870
 */
export const ChipSCL8060ExtendProperty = t.intersection([
    ChipSCL8060ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSCL8060ExtendProperty') }),
], 'ChipSCL8060ExtendProperty');
//# sourceMappingURL=ChipSCL8060ExtendProperty.js.map