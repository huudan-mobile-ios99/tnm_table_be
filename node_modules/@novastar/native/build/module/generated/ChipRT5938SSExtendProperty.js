import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipRT5938SSExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        RegisterArray: common.XMLArray(common.UInt16, 'ushort'),
    }),
    t.partial({
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
        EliminationLevel: common.UInt8,
        EliminateEnable: common.Bool,
        OpenCircuitLevel: common.UInt8,
        ShortCircuitLevel: common.UInt8,
        SlowOpen: common.Bool,
        PowerSavingModeEn: common.Bool,
        CurrentGain: common.UInt16,
    }),
], 'ChipRT5938SSExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipRT5938SSExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipRT5938SS.decompiled.cs:6143
 */
export const ChipRT5938SSExtendProperty = t.intersection([
    ChipRT5938SSExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipRT5938SSExtendProperty') }),
], 'ChipRT5938SSExtendProperty');
//# sourceMappingURL=ChipRT5938SSExtendProperty.js.map