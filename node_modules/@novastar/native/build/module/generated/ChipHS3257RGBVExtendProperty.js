import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipHS3257ExtendProperty } from './ChipHS3257ExtendProperty';
export const ChipHS3257RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        ModeSelect: common.UInt8_0,
    }),
    t.partial({
        RedProperty: ChipHS3257ExtendProperty,
        GreenProperty: ChipHS3257ExtendProperty,
        BlueProperty: ChipHS3257ExtendProperty,
        VRedProperty: ChipHS3257ExtendProperty,
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
        IsAdvancedMode: common.Bool,
        ThirdDataLen: common.Int32,
        ThirdDataStartIndex: common.Int32,
        ThirdRegisterAddr: common.Int32,
        FourthDataLen: common.Int32,
        FourthStartIndex: common.Int32,
        FourthRegisterAddr: common.Int32,
    }),
], 'ChipHS3257RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipHS3257RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipHS3257.decompiled.cs:995
 */
export const ChipHS3257RGBVExtendProperty = t.intersection([
    ChipHS3257RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipHS3257RGBVExtendProperty') }),
], 'ChipHS3257RGBVExtendProperty');
//# sourceMappingURL=ChipHS3257RGBVExtendProperty.js.map