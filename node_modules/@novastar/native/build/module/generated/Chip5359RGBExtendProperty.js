import * as t from 'io-ts';
import * as common from '../lib/common';
import { Chip5359ExtendProperty } from './Chip5359ExtendProperty';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const Chip5359RGBExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        Global1_Register1: common.withDefault(common.UInt16, 16448),
        Global1_Register2: common.withDefault(common.UInt16, 8252),
        Global1_Register3: common.withDefault(common.UInt16, 3132),
        Global2_Register2: common.UInt16_4096,
        Global2_Register3: common.withDefault(common.UInt16, 16319),
        R1_Register1: common.UInt16_16384,
        G1_Register1: common.UInt16_16384,
        B1_Register1: common.UInt16_16384,
        R2_Register1: common.UInt16_508,
        R2_Register3: common.UInt16_15872,
        G2_Register1: common.UInt16_508,
        G2_Register3: common.UInt16_15872,
        B2_Register1: common.UInt16_508,
        B2_Register3: common.UInt16_15872,
        IsAmplifyCurrent: common.Bool_true,
        M: common.withDefault(common.Int32, 127),
        N: common.Int32_15,
        Dvi: common.Int32_3,
        ExcessiveTime: common.Int32_60,
    }),
    t.partial({
        RextendProperty: Chip5359ExtendProperty,
        GextendProperty: Chip5359ExtendProperty,
        BextendProperty: Chip5359ExtendProperty,
        IsAdvancedMode: common.Bool,
        Global2_Register1: common.UInt16,
        Global3_Register1: common.UInt16,
        Global3_Register2: common.UInt16,
        Global3_Register3: common.UInt16,
        R1_Register2: common.UInt16,
        R1_Register3: common.UInt16,
        G1_Register2: common.UInt16,
        G1_Register3: common.UInt16,
        B1_Register2: common.UInt16,
        B1_Register3: common.UInt16,
        R2_Register2: common.UInt16,
        G2_Register2: common.UInt16,
        B2_Register2: common.UInt16,
        IstwoWayTransmission: common.Bool,
        IsGhostRemovalEnhance: common.Bool,
        IsSavePower: common.Bool,
        IsSavePowerPlus: common.Bool,
        FineGrade: common.Int32,
        GlobalGain: common.Int32,
        Gclk: common.Int32,
        EnDoubleRefresh: common.Bool,
        IsDoublePower: common.Bool,
        RowChangePoint5359: common.UInt16,
    }),
], 'Chip5359RGBExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link Chip5359RGBExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:32687
 */
export const Chip5359RGBExtendProperty = t.intersection([
    Chip5359RGBExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('Chip5359RGBExtendProperty') }),
], 'Chip5359RGBExtendProperty');
//# sourceMappingURL=Chip5359RGBExtendProperty.js.map