import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipSM16158ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        IsAdvancedMode: common.Bool,
        RLowAshImprovement: common.UInt8,
        GLowAshImprovement: common.UInt8,
        BLowAshImprovement: common.UInt8,
        OpenDetection: common.Bool,
        REnableOpenInspection: common.Bool,
        GEnableOpenInspection: common.Bool,
        BEnableOpenInspection: common.Bool,
        RLowAshPitsImprove: common.UInt8,
        GLowAshPitsImprove: common.UInt8,
        BLowAshPitsImprove: common.UInt8,
        RDimInterval: common.UInt8,
        GDimInterval: common.UInt8,
        BDimInterval: common.UInt8,
        RDimCompensation: common.UInt8,
        GDimCompensation: common.UInt8,
        BDimCompensation: common.UInt8,
        RedRegValueConfigFirst: common.UInt16,
        GreenRegValueConfigFirst: common.UInt16,
        BlueRegValueConfigFirst: common.UInt16,
        VRedRegValueConfigFirst: common.UInt16,
        RedRegValueConfigSecond: common.UInt16,
        GreenRegValueConfigSecond: common.UInt16,
        BlueRegValueConfigSecond: common.UInt16,
        VRedRegValueConfigSecond: common.UInt16,
    }),
], 'ChipSM16158ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16158ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:45009
 */
export const ChipSM16158ExtendProperty = t.intersection([
    ChipSM16158ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSM16158ExtendProperty') }),
], 'ChipSM16158ExtendProperty');
//# sourceMappingURL=ChipSM16158ExtendProperty.js.map