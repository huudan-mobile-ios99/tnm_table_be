import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipFM6356ExtendProperty } from './ChipFM6356ExtendProperty';
export const ChipFM6356RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: ChipFM6356ExtendProperty,
        GreenProperty: ChipFM6356ExtendProperty,
        BlueProperty: ChipFM6356ExtendProperty,
        VRedProperty: ChipFM6356ExtendProperty,
        IsAdvancedModel: common.Bool,
        EnhancedModeGrade: common.UInt8,
        ScanCount: common.UInt8,
        SubFields: common.UInt8,
        IsAberrationOptimize: common.Bool,
        LowAshPitsImprove: common.UInt8,
        IsStarSwipPoint: common.Bool,
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
        ThirdDataLen: common.Int32,
        ThirdDataStartIndex: common.Int32,
        ThirdRegisterAddr: common.Int32,
        FourthDataLen: common.Int32,
        FourthStartIndex: common.Int32,
        FourthRegisterAddr: common.Int32,
        FifthDataLen: common.Int32,
        FifthStartIndex: common.Int32,
        FifthRegisterAddr: common.Int32,
    }),
], 'ChipFM6356RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipFM6356RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipFM6356.decompiled.cs:313
 */
export const ChipFM6356RGBVExtendProperty = t.intersection([
    ChipFM6356RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipFM6356RGBVExtendProperty') }),
], 'ChipFM6356RGBVExtendProperty');
//# sourceMappingURL=ChipFM6356RGBVExtendProperty.js.map