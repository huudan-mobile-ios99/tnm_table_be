import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipIT1505ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        RedRegValueConfigFirst: common.UInt16_60543,
        GreenRegValueConfigFirst: common.UInt16_60543,
        BlueRegValueConfigFirst: common.UInt16_60543,
        VRedRegValueConfigFirst: common.UInt16_60543,
    }),
    t.partial({
        IsAdvancedMode: common.Bool,
        CureentRedGain: common.UInt16,
        CureentGreenGain: common.UInt16,
        CureentBlueGain: common.UInt16,
        RedShortCirult: common.Int32,
        GreenShortCirult: common.Int32,
        BlueShortCirult: common.Int32,
        PowerSavingMode: common.Int32,
        PWMAlgorithm: common.Int32,
    }),
], 'ChipIT1505ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipIT1505ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:50395
 */
export const ChipIT1505ExtendProperty = t.intersection([
    ChipIT1505ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipIT1505ExtendProperty') }),
], 'ChipIT1505ExtendProperty');
//# sourceMappingURL=ChipIT1505ExtendProperty.js.map