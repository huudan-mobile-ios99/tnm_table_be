import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipTLC6983ExtendProperty } from './ChipTLC6983ExtendProperty';
export const ChipTLC6983RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        REG_LENGTH: common.Int32_12,
    }),
    t.partial({
        ExtendProperty: ChipTLC6983ExtendProperty,
        TempSubField: common.UInt8,
        TempICNum: common.UInt8,
        TempGclkFreqR: common.UInt8,
        TempBit3: common.UInt8,
        SubField: common.UInt8,
        GclkFreqR: common.UInt8,
        Bit3: common.UInt8,
        ICNum: common.UInt8,
        PWMNum: common.UInt16,
        HHGCLKNum: common.UInt8,
        IsAdvancedMode: common.Bool,
        IsUseNewModule: common.Bool,
        SpecialDataLen: common.Int32,
        SpecialRegisterAddr: common.UInt32,
    }),
], 'ChipTLC6983RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipTLC6983RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipTLC6983.decompiled.cs:4847
 */
export const ChipTLC6983RGBVExtendProperty = t.intersection([
    ChipTLC6983RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipTLC6983RGBVExtendProperty') }),
], 'ChipTLC6983RGBVExtendProperty');
//# sourceMappingURL=ChipTLC6983RGBVExtendProperty.js.map