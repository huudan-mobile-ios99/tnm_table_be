import * as t from 'io-ts';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipMY9862ExtendProperty } from './ChipMY9862ExtendProperty';
export const ChipMY9862RGBExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: ChipMY9862ExtendProperty,
        GreenProperty: ChipMY9862ExtendProperty,
        BlueProperty: ChipMY9862ExtendProperty,
        VRedProperty: ChipMY9862ExtendProperty,
    }),
], 'ChipMY9862RGBExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipMY9862RGBExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:41886
 */
export const ChipMY9862RGBExtendProperty = t.intersection([
    ChipMY9862RGBExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipMY9862RGBExtendProperty') }),
], 'ChipMY9862RGBExtendProperty');
//# sourceMappingURL=ChipMY9862RGBExtendProperty.js.map