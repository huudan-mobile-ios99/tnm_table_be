import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const Chip5253BExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        FirstSweepElimination: common.UInt8_31,
        UnderEliminateGhost: common.UInt8_31,
        UnderEliminateGhostingEnhancedMode: common.Bool_true,
        LowAshEnhanceUniformity: common.Bool_true,
        AdvancedRLowAshColorCastCompensation1: common.UInt8_31,
        AdvancedRLowAshColorCastCompensation3: common.UInt8_31,
        DislodgeBadPointsGrade: common.UInt8_1,
        TextGhostElimination: common.UInt8_31,
        CrossCouplingOptimization: common.UInt8_31,
        BrightBlockCouplingOptimization: common.UInt8_31,
        FirstSweepBiasElimination: common.UInt8_31,
    }),
    t.partial({
        GrayHorizontalStripesEliminateLow: common.Bool,
        LowAshColorCastCompensation: common.UInt8,
        AdvancedRLowAshColorCastCompensation2: common.UInt8,
        GradientCompensation: common.UInt8,
        GradientCompensationOne: common.UInt8,
    }),
], 'Chip5253BExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link Chip5253BExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:32405
 */
export const Chip5253BExtendProperty = t.intersection([Chip5253BExtendPropertyBase, t.partial({ '@_xsi:type': t.literal('Chip5253BExtendProperty') })], 'Chip5253BExtendProperty');
//# sourceMappingURL=Chip5253BExtendProperty.js.map