import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipUCS5603RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        IsOpenChannelCheck: common.Bool_false,
    }),
    t.partial({
        RedFirstReg: common.UInt16,
        GreenFirstReg: common.UInt16,
        BlueFirstReg: common.UInt16,
        VRedFirstReg: common.UInt16,
        IsUseNewModule: common.Bool,
        FirstDataLen: common.Int32,
        FirstStartIndex: common.Int32,
        FirstRegisterAddr: common.Int32,
        SecondDataLen: common.Int32,
    }),
], 'ChipUCS5603RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipUCS5603RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipUCS5603.decompiled.cs:868
 */
export const ChipUCS5603RGBVExtendProperty = t.intersection([
    ChipUCS5603RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipUCS5603RGBVExtendProperty') }),
], 'ChipUCS5603RGBVExtendProperty');
//# sourceMappingURL=ChipUCS5603RGBVExtendProperty.js.map