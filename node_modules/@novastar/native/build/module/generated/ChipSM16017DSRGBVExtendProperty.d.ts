import * as t from 'io-ts';
export declare const ChipSM16017DSRGBVExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RedRegValue: t.Type<number, number, unknown>;
    GreenRegValue: t.Type<number, number, unknown>;
    BlueRegValue: t.Type<number, number, unknown>;
    VRedRegValue: t.Type<number, number, unknown>;
    IsUseNewModule: t.Type<boolean, boolean, unknown>;
    FirstDataLen: t.Type<number, number, unknown>;
    FirstStartIndex: t.Type<number, number, unknown>;
    FirstRegisterAddr: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16017DSRGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipSM16017DS.decompiled.cs:5053
 */
export declare const ChipSM16017DSRGBVExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RedRegValue: t.Type<number, number, unknown>;
    GreenRegValue: t.Type<number, number, unknown>;
    BlueRegValue: t.Type<number, number, unknown>;
    VRedRegValue: t.Type<number, number, unknown>;
    IsUseNewModule: t.Type<boolean, boolean, unknown>;
    FirstDataLen: t.Type<number, number, unknown>;
    FirstStartIndex: t.Type<number, number, unknown>;
    FirstRegisterAddr: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipSM16017DSRGBVExtendProperty">;
}>]>;
export interface ChipSM16017DSRGBVExtendProperty extends t.TypeOf<typeof ChipSM16017DSRGBVExtendProperty> {
}
