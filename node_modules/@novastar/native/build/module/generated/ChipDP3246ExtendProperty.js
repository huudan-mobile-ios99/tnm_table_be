import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipDP3246ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
        FirstRegValue: common.UInt16,
        SecondRegValue: common.UInt16,
        ThirdRegValue: common.UInt16,
        FourthRegValue: common.UInt16,
        GammaSmoothingLevel: common.UInt8,
        CurrentGain: common.UInt16,
        ConstantCurrentOutputInflectionPointGrade: common.UInt8,
        ShadowEliminationLevelEnable: common.Bool,
        ShadowEliminationLevel: common.UInt8,
        ErrorCurrentGain: common.UInt16,
    }),
], 'ChipDP3246ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipDP3246ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipDP3246.decompiled.cs:6475
 */
export const ChipDP3246ExtendProperty = t.intersection([
    ChipDP3246ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipDP3246ExtendProperty') }),
], 'ChipDP3246ExtendProperty');
//# sourceMappingURL=ChipDP3246ExtendProperty.js.map