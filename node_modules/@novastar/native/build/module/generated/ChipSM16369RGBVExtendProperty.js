import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipSM16369ExtendProperty } from './ChipSM16369ExtendProperty';
export const ChipSM16369RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        IsAdvancedMode: common.Bool_true,
        CurrentGainGrade: common.UInt8_2,
    }),
    t.partial({
        RedExtendProperty: ChipSM16369ExtendProperty,
        GreenExtendProperty: ChipSM16369ExtendProperty,
        BlueExtendProperty: ChipSM16369ExtendProperty,
        VRedExtendProperty: ChipSM16369ExtendProperty,
        IsUseNewModule: common.Bool,
        ScanCount: common.UInt8,
        MutiRate: common.UInt8,
        FailureEliminationEn: common.Bool,
        SpecialDataLen: common.Int32,
        SpecialRegisterAddr: common.UInt32,
    }),
], 'ChipSM16369RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16369RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipSM16369.decompiled.cs:1251
 */
export const ChipSM16369RGBVExtendProperty = t.intersection([
    ChipSM16369RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSM16369RGBVExtendProperty') }),
], 'ChipSM16369RGBVExtendProperty');
//# sourceMappingURL=ChipSM16369RGBVExtendProperty.js.map