import * as t from 'io-ts';
import * as common from '../lib/common';
import { CabinetCorrectLocationSize } from './CabinetCorrectLocationSize';
import { DviSelectMode } from './DviSelectMode';
/**
 * @category Codecs
 * @desc Codec for interface {@link ScanBoardRegionInfo}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:53392
 */
export const ScanBoardRegionInfo = t.intersection([
    t.type({
        DviSelect: common.withDefault(DviSelectMode, 'DVI'),
        DVIIndex: common.UInt8_255,
        Width: common.UInt16_32,
        Height: common.UInt16_32,
        TagInfoColor: common.withDefault(t.string, 'get_Red()'),
    }),
    t.partial({
        XInPort: common.UInt16,
        YInPort: common.UInt16,
        SenderIndex: common.UInt8,
        PortIndex: common.UInt8,
        ConnectIndex: common.UInt16,
        X: common.UInt16,
        Y: common.UInt16,
        IsHasMrvID: common.Bool,
        MrvID: t.string,
        FreeRoutConnect: common.UInt16,
        MrvIDObject: t.UnknownRecord,
        CabinetCorrectLocationSize,
        RowIndexInScreen: common.Int32,
        ColIndexInScreen: common.Int32,
        TagInfo: common.Bool,
    }),
], 'ScanBoardRegionInfo');
//# sourceMappingURL=ScanBoardRegionInfo.js.map