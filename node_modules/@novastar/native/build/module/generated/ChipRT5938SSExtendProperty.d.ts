import * as t from 'io-ts';
export declare const ChipRT5938SSExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    RegisterArray: t.ArrayC<t.Type<number, number, unknown>>;
}>, t.PartialC<{
    IsUseNewModule: t.Type<boolean, boolean, unknown>;
    ChipLibVersion: t.Type<number, number, unknown>;
    EliminationLevel: t.Type<number, number, unknown>;
    EliminateEnable: t.Type<boolean, boolean, unknown>;
    OpenCircuitLevel: t.Type<number, number, unknown>;
    ShortCircuitLevel: t.Type<number, number, unknown>;
    SlowOpen: t.Type<boolean, boolean, unknown>;
    PowerSavingModeEn: t.Type<boolean, boolean, unknown>;
    CurrentGain: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipRT5938SSExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipRT5938SS.decompiled.cs:6143
 */
export declare const ChipRT5938SSExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    RegisterArray: t.ArrayC<t.Type<number, number, unknown>>;
}>, t.PartialC<{
    IsUseNewModule: t.Type<boolean, boolean, unknown>;
    ChipLibVersion: t.Type<number, number, unknown>;
    EliminationLevel: t.Type<number, number, unknown>;
    EliminateEnable: t.Type<boolean, boolean, unknown>;
    OpenCircuitLevel: t.Type<number, number, unknown>;
    ShortCircuitLevel: t.Type<number, number, unknown>;
    SlowOpen: t.Type<boolean, boolean, unknown>;
    PowerSavingModeEn: t.Type<boolean, boolean, unknown>;
    CurrentGain: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipRT5938SSExtendProperty">;
}>]>;
export interface ChipRT5938SSExtendProperty extends t.TypeOf<typeof ChipRT5938SSExtendProperty> {
}
