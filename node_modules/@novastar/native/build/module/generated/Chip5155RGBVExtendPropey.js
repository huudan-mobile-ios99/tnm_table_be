import * as t from 'io-ts';
import { Chip5155ExtendProperty } from './Chip5155ExtendProperty';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const Chip5155RGBVExtendPropeyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: Chip5155ExtendProperty,
        GreenProperty: Chip5155ExtendProperty,
        BlueProperty: Chip5155ExtendProperty,
        VRedProperty: Chip5155ExtendProperty,
    }),
], 'Chip5155RGBVExtendPropeyBase');
/**
 * @category Codecs
 * @desc Codec for {@link Chip5155RGBVExtendPropey}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:41777
 */
export const Chip5155RGBVExtendPropey = t.intersection([
    Chip5155RGBVExtendPropeyBase,
    t.partial({ '@_xsi:type': t.literal('Chip5155RGBVExtendPropey') }),
], 'Chip5155RGBVExtendPropey');
//# sourceMappingURL=Chip5155RGBVExtendPropey.js.map