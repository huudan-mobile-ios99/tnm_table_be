import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const Chip5051BExtendPropeyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        EliminateAfterLow: common.UInt8,
        FirstSweepElimination: common.UInt8,
    }),
], 'Chip5051BExtendPropeyBase');
/**
 * @category Codecs
 * @desc Codec for {@link Chip5051BExtendPropey}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:28519
 */
export const Chip5051BExtendPropey = t.intersection([Chip5051BExtendPropeyBase, t.partial({ '@_xsi:type': t.literal('Chip5051BExtendPropey') })], 'Chip5051BExtendPropey');
//# sourceMappingURL=Chip5051BExtendPropey.js.map