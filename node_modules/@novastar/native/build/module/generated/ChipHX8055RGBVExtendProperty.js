import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipHX8055ExtendProperty } from './ChipHX8055ExtendProperty';
export const ChipHX8055RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        IsAdvancedMode: common.Bool_true,
    }),
    t.partial({
        RedProperty: ChipHX8055ExtendProperty,
        GreenProperty: ChipHX8055ExtendProperty,
        BlueProperty: ChipHX8055ExtendProperty,
        VRedProperty: ChipHX8055ExtendProperty,
        IsUseNewModule: common.Bool,
    }),
], 'ChipHX8055RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipHX8055RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipHX8055.decompiled.cs:1973
 */
export const ChipHX8055RGBVExtendProperty = t.intersection([
    ChipHX8055RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipHX8055RGBVExtendProperty') }),
], 'ChipHX8055RGBVExtendProperty');
//# sourceMappingURL=ChipHX8055RGBVExtendProperty.js.map