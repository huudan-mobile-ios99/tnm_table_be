import * as t from 'io-ts';
import * as common from '../lib/common';
/**
 * @category Codecs
 * @desc Codec for interface {@link LS9930Data}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:12409
 */
export const LS9930Data = t.intersection([
    t.type({
        BitsNum: common.Int32_2,
        SubFrameNum: common.Int32_3,
        FriedFreuquance: common.Int32_60,
        ShiftClockList: common.XMLArray(common.Numeric, 'double'),
        StarRefreshRateList: common.XMLArray(common.Int32, 'int'),
        MaxRefreshRateList: common.XMLArray(common.Int32, 'int'),
        HighNumberList: common.XMLArray(common.Int32, 'int'),
        GammaValue: common.Numeric_28,
        ModeList: common.XMLArray(t.string, 'string'),
        DutyRationList: common.XMLArray(common.Numeric, 'double'),
        BankPresetList: common.XMLArray(t.string, 'string'),
        BankPresetStr: common.string_empty,
        LineDutyCycleList: common.XMLArray(common.Numeric, 'double'),
        Value3DMax: common.Int32_4559,
    }),
    t.partial({
        RGBSQ: common.Int32,
        PmData: common.Base64,
        DmFirstData: common.Base64,
        DmSecondData: common.Base64,
        DmThridData: common.Base64,
        LS9930OEData: common.Base64,
        Factor: common.Int32,
        FrequenceDivsion: common.Int32,
        SystemClock: common.Int32,
        ShiftClock: common.Numeric,
        StarRefreshRate: common.Int32,
        MaxRefreshRate: common.Int32,
        HighNumber: common.Int32,
        PositiveScan: common.Int32,
        NegetiveScan: common.Int32,
        BrightnessEfficiency: common.Int32,
        ShiftLenth: common.Int32,
        ScanType: common.Int32,
        GammaStartValue: common.Int32,
        GammaMaxValue: common.Int32,
        GammaShift: common.Int32,
        GameTable: common.Base64,
        ContrastValue: common.Int32,
        MaxBrightness: common.Int32,
        RedJumpOne: common.Numeric,
        RedJumpTwo: common.Numeric,
        RedJumpThree: common.Numeric,
        RedJumpFour: common.Numeric,
        GreenJumpOne: common.Numeric,
        GreenJumpTwo: common.Numeric,
        GreenJumpThree: common.Numeric,
        GreenJumpFour: common.Numeric,
        BlueJumpOne: common.Numeric,
        BlueJumpTwo: common.Numeric,
        BlueJumpThree: common.Numeric,
        BlueJumpFour: common.Numeric,
        CompensateValue: common.Numeric,
        MinWidth: common.Int32,
        OEHiLevel: common.Int32,
        OELoLevel: common.Int32,
        ClockPhase: common.Int32,
        ShadowZone: common.Int32,
        ShadowZeroVal0: common.Int32,
        ShadowZeroVal1: common.Int32,
        ShadowZeroVal2: common.Int32,
        RowShadow: common.Int32,
        LineCharge: common.Int32,
        ShadowThree: common.Int32,
        ErrorBegin: common.Int32,
        ModeValue: common.Int32,
        IsLineShadowOK: common.Bool,
        IsRowSwitch: common.Bool,
        SelectRowSwitch: common.Int32,
        Select32Port: common.Int32,
        FirstLineRed: common.Int32,
        FirstLineGreen: common.Int32,
        FirstLineBlue: common.Int32,
        CurrentRed: common.Int32,
        CurrentGreen: common.Int32,
        CurrentBlue: common.Int32,
        RDataPhase: common.Int32,
        GDataPhase: common.Int32,
        BDataPhase: common.Int32,
        HighFrequenceStatus: common.Int32,
        Mode9739: common.Int32,
        PassThroughMode: common.Int32,
        FixValue: common.Int32,
        ROScale: common.Numeric,
        ColEliminateUpPointOne: common.Int32,
        ColEliminateUpPointTwo: common.Int32,
        ColEliminateUpPointThree: common.Int32,
        ColUpVoltageOne: common.Int32,
        ColUpVoltageTwo: common.Int32,
        ColUpVoltageThree: common.Int32,
        CurrentThresholdVoltateOne: common.Int32,
        CurrentThresholdVoltateTwo: common.Int32,
        CurrentThresholdVoltateThree: common.Int32,
        ColUpDriveOne: common.Int32,
        ColUpDriveTwo: common.Int32,
        ColUpDriveThree: common.Int32,
        ModePinControlOne: common.Int32,
        ModePinControlTwo: common.Int32,
        ModePinControlThree: common.Int32,
        RowEliminateModeOne: common.Int32,
        RowEliminateModeTwo: common.Int32,
        RowEliminateModeThree: common.Int32,
        RowDownVoltagePointOne: common.Int32,
        RowDownVoltagePointTwo: common.Int32,
        RowDownVoltagePointThree: common.Int32,
        RowDownVoltageClampPointOne: common.Int32,
        RowDownVoltageClampPointTwo: common.Int32,
        RowDownVoltageClampPointThree: common.Int32,
        StartColorOne: common.Int32,
        StartColorTwo: common.Int32,
        StartColorThree: common.Int32,
        StartColorFour: common.Int32,
        StartScanOne: common.Int32,
        StartScanTwo: common.Int32,
        StartScanThree: common.Int32,
        StartScanFour: common.Int32,
        DutyRation: common.Int32,
        RowMergeMode: common.Int32,
        BankPreset: common.Int32,
        RowBankVoltageRed: common.Int32,
        RowBankVoltageGreen: common.Int32,
        RowBankVoltageBlue: common.Int32,
        BackMode: common.Int32,
        LineClockPhase: common.Int32,
        LineDutyCycle: common.Int32,
        LineOutPutDalay: common.Int32,
        TotalNumber: common.Int32,
        RowJiangPing: common.Int32,
        IsLowPower: common.Bool,
        CurLeakageIndex: common.Int32,
        CurLeakageTotal: common.Int32,
        CurGrayIndex: common.Int32,
        CurGrayTotal: common.Int32,
        Value3D: common.Int32,
        IsSimplyfy: common.Bool,
        CurFlashIndex: common.Int32,
        CurFlashTotal: common.Int32,
    }),
], 'LS9930Data');
//# sourceMappingURL=LS9930Data.js.map