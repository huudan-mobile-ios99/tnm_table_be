import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipRT5965ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        FirstReg: common.UInt16,
        SecondReg: common.UInt16,
        ThirdReg: common.UInt16,
        CurrentGain: common.UInt8,
        CouplingEliminationLevel: common.UInt8,
        CouplingEliminationEn: common.Bool,
        FirstScanDarkEliminationLevel: common.UInt8,
        LowCompsentionOne: common.UInt8,
        LowCompsentionTwo: common.UInt8,
        GhostEliminationLevel: common.UInt8,
        ShadowEhancedModeEn: common.Bool,
        SlowOpen: common.Bool,
        OpenCircuitDetectionLevel: common.UInt8,
        PowerSavingModeEn: common.Bool,
        ChannelPowerSavingModeEn: common.Bool,
    }),
], 'ChipRT5965ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipRT5965ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipRT5965.decompiled.cs:1017
 */
export const ChipRT5965ExtendProperty = t.intersection([
    ChipRT5965ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipRT5965ExtendProperty') }),
], 'ChipRT5965ExtendProperty');
//# sourceMappingURL=ChipRT5965ExtendProperty.js.map