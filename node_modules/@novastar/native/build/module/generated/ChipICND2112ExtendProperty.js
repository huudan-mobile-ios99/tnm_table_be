import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipICND2112ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        RegFirst: common.withDefault(common.UInt16, 32512),
        RegSecond: common.withDefault(common.UInt16, 14626),
        RegThird: common.withDefault(common.UInt16, 32752),
    }),
    t.partial({}),
], 'ChipICND2112ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipICND2112ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipICND2112.decompiled.cs:47
 */
export const ChipICND2112ExtendProperty = t.intersection([
    ChipICND2112ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipICND2112ExtendProperty') }),
], 'ChipICND2112ExtendProperty');
//# sourceMappingURL=ChipICND2112ExtendProperty.js.map