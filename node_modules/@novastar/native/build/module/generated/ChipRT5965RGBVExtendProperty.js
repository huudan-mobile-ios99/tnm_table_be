import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipRT5965ExtendProperty } from './ChipRT5965ExtendProperty';
export const ChipRT5965RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: ChipRT5965ExtendProperty,
        GreenProperty: ChipRT5965ExtendProperty,
        BlueProperty: ChipRT5965ExtendProperty,
        VRedProperty: ChipRT5965ExtendProperty,
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
        ScanCount: common.UInt8,
        SubField: common.UInt8,
        BitMode: common.Bool,
        OpenCircuitDetectionEn: common.Bool,
        IsAdvancedMode: common.Bool,
        FirstDataLen: common.Int32,
        FirstStartIndex: common.Int32,
        FirstRegisterAddr: common.Int32,
        SecondDataLen: common.Int32,
        SecondStartIndex: common.Int32,
        SecondRegisterAddr: common.Int32,
        ThirdDataLen: common.Int32,
        ThirdDataStartIndex: common.Int32,
        ThirdRegisterAddr: common.Int32,
    }),
], 'ChipRT5965RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipRT5965RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipRT5965.decompiled.cs:1202
 */
export const ChipRT5965RGBVExtendProperty = t.intersection([
    ChipRT5965RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipRT5965RGBVExtendProperty') }),
], 'ChipRT5965RGBVExtendProperty');
//# sourceMappingURL=ChipRT5965RGBVExtendProperty.js.map