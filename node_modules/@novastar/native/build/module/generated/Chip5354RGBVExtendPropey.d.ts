import * as t from 'io-ts';
import { Chip5354ExtendProperty } from './Chip5354ExtendProperty';
/**
 * @category Codecs
 * @desc Codec for interface {@link Chip5354RGBVExtendPropey}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:41467
 */
export declare const Chip5354RGBVExtendPropey: t.IntersectionC<[t.TypeC<{
    GlobalCurrentGainAdjust: t.Type<number, number, unknown>;
}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        DeGhostLevel: t.Type<number, number, unknown>;
        FirstSweepEliminateFirst: t.Type<number, number, unknown>;
        FirstSweepEliminateTwo: t.Type<number, number, unknown>;
        LowAshImprovementFirst: t.Type<number, number, unknown>;
        LowAshImprovementTwo: t.Type<number, number, unknown>;
        LowAshImprovementThrid: t.Type<boolean, boolean, unknown>;
        EnhancedMode: t.Type<boolean, boolean, unknown>;
        LowAshdimLineConpensentionY: t.Type<boolean, boolean, unknown>;
        OpenDetectPower: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"Chip5354ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        DeGhostLevel: t.Type<number, number, unknown>;
        FirstSweepEliminateFirst: t.Type<number, number, unknown>;
        FirstSweepEliminateTwo: t.Type<number, number, unknown>;
        LowAshImprovementFirst: t.Type<number, number, unknown>;
        LowAshImprovementTwo: t.Type<number, number, unknown>;
        LowAshImprovementThrid: t.Type<boolean, boolean, unknown>;
        EnhancedMode: t.Type<boolean, boolean, unknown>;
        LowAshdimLineConpensentionY: t.Type<boolean, boolean, unknown>;
        OpenDetectPower: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"Chip5354ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        DeGhostLevel: t.Type<number, number, unknown>;
        FirstSweepEliminateFirst: t.Type<number, number, unknown>;
        FirstSweepEliminateTwo: t.Type<number, number, unknown>;
        LowAshImprovementFirst: t.Type<number, number, unknown>;
        LowAshImprovementTwo: t.Type<number, number, unknown>;
        LowAshImprovementThrid: t.Type<boolean, boolean, unknown>;
        EnhancedMode: t.Type<boolean, boolean, unknown>;
        LowAshdimLineConpensentionY: t.Type<boolean, boolean, unknown>;
        OpenDetectPower: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"Chip5354ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        DeGhostLevel: t.Type<number, number, unknown>;
        FirstSweepEliminateFirst: t.Type<number, number, unknown>;
        FirstSweepEliminateTwo: t.Type<number, number, unknown>;
        LowAshImprovementFirst: t.Type<number, number, unknown>;
        LowAshImprovementTwo: t.Type<number, number, unknown>;
        LowAshImprovementThrid: t.Type<boolean, boolean, unknown>;
        EnhancedMode: t.Type<boolean, boolean, unknown>;
        LowAshdimLineConpensentionY: t.Type<boolean, boolean, unknown>;
        OpenDetectPower: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"Chip5354ExtendProperty">;
    }>]>;
    GlobalCurrentGainConst: t.Type<number, number, unknown>;
    FailureLEDElimination: t.Type<boolean, boolean, unknown>;
    EnableLowImprovement: t.Type<boolean, boolean, unknown>;
    LowImprovementFirst: t.Type<number, number, unknown>;
    LowImprovementTwo: t.Type<number, number, unknown>;
    EnableLowAshUniformity: t.Type<boolean, boolean, unknown>;
    EnableEnergyConserve: t.Type<boolean, boolean, unknown>;
    EnableGCLKMutiplier: t.Type<boolean, boolean, unknown>;
    RedRegValueConfigThird: t.Type<number, number, unknown>;
    GreenRegValueConfigThird: t.Type<number, number, unknown>;
    BlueRegValueConfigThird: t.Type<number, number, unknown>;
    VRedRegValueConfigThird: t.Type<number, number, unknown>;
    RedRegValueConfigSpecial: t.Type<number, number, unknown>;
    GreenRegValueConfigSpecial: t.Type<number, number, unknown>;
    BlueRegValueConfigSpecial: t.Type<number, number, unknown>;
    VRedRegValueConfigSpecial: t.Type<number, number, unknown>;
}>]>;
export interface Chip5354RGBVExtendPropey extends t.TypeOf<typeof Chip5354RGBVExtendPropey> {
    RedProperty?: Chip5354ExtendProperty;
    GreenProperty?: Chip5354ExtendProperty;
    BlueProperty?: Chip5354ExtendProperty;
    VRedProperty?: Chip5354ExtendProperty;
}
