import * as t from 'io-ts';
import * as common from '../lib/common';
import { Chip5354ExtendProperty } from './Chip5354ExtendProperty';
/**
 * @category Codecs
 * @desc Codec for interface {@link Chip5354RGBVExtendPropey}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:41467
 */
export const Chip5354RGBVExtendPropey = t.intersection([
    t.type({
        GlobalCurrentGainAdjust: common.UInt8_5,
    }),
    t.partial({
        RedProperty: Chip5354ExtendProperty,
        GreenProperty: Chip5354ExtendProperty,
        BlueProperty: Chip5354ExtendProperty,
        VRedProperty: Chip5354ExtendProperty,
        GlobalCurrentGainConst: common.UInt8,
        FailureLEDElimination: common.Bool,
        EnableLowImprovement: common.Bool,
        LowImprovementFirst: common.UInt8,
        LowImprovementTwo: common.UInt8,
        EnableLowAshUniformity: common.Bool,
        EnableEnergyConserve: common.Bool,
        EnableGCLKMutiplier: common.Bool,
        RedRegValueConfigThird: common.UInt16,
        GreenRegValueConfigThird: common.UInt16,
        BlueRegValueConfigThird: common.UInt16,
        VRedRegValueConfigThird: common.UInt16,
        RedRegValueConfigSpecial: common.UInt16,
        GreenRegValueConfigSpecial: common.UInt16,
        BlueRegValueConfigSpecial: common.UInt16,
        VRedRegValueConfigSpecial: common.UInt16,
    }),
], 'Chip5354RGBVExtendPropey');
//# sourceMappingURL=Chip5354RGBVExtendPropey.js.map