import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipXM11201GRGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        RegisterArray: common.XMLArray(common.UInt64, 'ulong'),
        ConfigRegisterNum: common.Int32_16,
        IsAdvancedMode: common.Bool_true,
    }),
    t.partial({
        IsUseNewModule: common.Bool,
        SpecialDataLen: common.Int32,
        SpecialRegisterAddr: common.UInt32,
    }),
], 'ChipXM11201GRGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipXM11201GRGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipXM11201G.decompiled.cs:1002
 */
export const ChipXM11201GRGBVExtendProperty = t.intersection([
    ChipXM11201GRGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipXM11201GRGBVExtendProperty') }),
], 'ChipXM11201GRGBVExtendProperty');
//# sourceMappingURL=ChipXM11201GRGBVExtendProperty.js.map