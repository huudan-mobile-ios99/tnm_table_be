import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipMY9862ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        CompensationMode: common.Bool,
        LowAshImprovement: common.UInt8,
        FirstSweepCompensation: common.UInt8,
        EliminateGhostingSet: common.UInt8,
    }),
], 'ChipMY9862ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipMY9862ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:43519
 */
export const ChipMY9862ExtendProperty = t.intersection([
    ChipMY9862ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipMY9862ExtendProperty') }),
], 'ChipMY9862ExtendProperty');
//# sourceMappingURL=ChipMY9862ExtendProperty.js.map