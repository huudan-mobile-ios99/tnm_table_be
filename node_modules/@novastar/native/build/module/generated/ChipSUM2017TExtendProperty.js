import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipSUM2017TExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        IsAdvancedMode: common.Bool,
        RSetVanishingCompensation: common.UInt8,
        GSetVanishingCompensation: common.UInt8,
        BSetVanishingCompensation: common.UInt8,
        RSetVanishing: common.UInt8,
        GSetVanishing: common.UInt8,
        BSetVanishing: common.UInt8,
        RConstantSettings: common.UInt8,
        GConstantSettings: common.UInt8,
        BConstantSettings: common.UInt8,
        RedRegValueConfigFirst: common.UInt16,
        GreenRegValueConfigFirst: common.UInt16,
        BlueRegValueConfigFirst: common.UInt16,
        VRedRegValueConfigFirst: common.UInt16,
    }),
], 'ChipSUM2017TExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSUM2017TExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:49789
 */
export const ChipSUM2017TExtendProperty = t.intersection([
    ChipSUM2017TExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSUM2017TExtendProperty') }),
], 'ChipSUM2017TExtendProperty');
//# sourceMappingURL=ChipSUM2017TExtendProperty.js.map