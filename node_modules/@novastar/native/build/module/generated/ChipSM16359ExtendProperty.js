import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipSM16359ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        IsShadowsEnable: common.Bool_true,
        RegValueConfigFirst: common.UInt16_65337,
        BlankingMode: common.UInt8_2,
        RegValueConfigSecond: common.UInt16_11,
        RegValueConfigThird: common.UInt16_3072,
    }),
    t.partial({
        LowAshCompensationTwo: common.UInt8,
        LowAshCompensationOne: common.UInt8,
        IsOpenTest: common.Bool,
        OpenTestVoltageGrade: common.UInt8,
        IsEnergySaving: common.Bool,
        ShadowVoltageOne: common.UInt8,
        ShadowVoltageTwo: common.UInt8,
        RegValueConfigForth: common.UInt16,
        IsAdvancedMode: common.Bool,
        PWMModle: common.UInt8,
    }),
], 'ChipSM16359ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16359ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:51352
 */
export const ChipSM16359ExtendProperty = t.intersection([
    ChipSM16359ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSM16359ExtendProperty') }),
], 'ChipSM16359ExtendProperty');
//# sourceMappingURL=ChipSM16359ExtendProperty.js.map