import * as t from 'io-ts';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipMBI5043ExtendProperty } from './ChipMBI5043ExtendProperty';
export const Chip5043RGBVExtendPropeyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: ChipMBI5043ExtendProperty,
        GreenProperty: ChipMBI5043ExtendProperty,
        BlueProperty: ChipMBI5043ExtendProperty,
        VRedProperty: ChipMBI5043ExtendProperty,
    }),
], 'Chip5043RGBVExtendPropeyBase');
/**
 * @category Codecs
 * @desc Codec for {@link Chip5043RGBVExtendPropey}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:42235
 */
export const Chip5043RGBVExtendPropey = t.intersection([
    Chip5043RGBVExtendPropeyBase,
    t.partial({ '@_xsi:type': t.literal('Chip5043RGBVExtendPropey') }),
], 'Chip5043RGBVExtendPropey');
//# sourceMappingURL=Chip5043RGBVExtendPropey.js.map