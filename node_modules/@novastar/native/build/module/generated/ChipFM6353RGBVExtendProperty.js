import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipFM6353ExtendProperty } from './ChipFM6353ExtendProperty';
export const ChipFM6353RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        IsAdvancedModel: common.Bool_true,
        EnhancedModeGrade: common.UInt8_0,
    }),
    t.partial({
        ScanNumber: common.UInt8,
        PartNumRef: common.UInt8,
        IsAberrationOptimize: common.Bool,
        LowAshPitsImprove: common.UInt8,
        IsStarSwipPoint: common.Bool,
        RedProperty: ChipFM6353ExtendProperty,
        GreenProperty: ChipFM6353ExtendProperty,
        BlueProperty: ChipFM6353ExtendProperty,
        IsUseNewModule: common.Bool,
        ThirdDataLen: common.Int32,
        ThirdDataStartIndex: common.Int32,
        ThirdRegisterAddr: common.Int32,
        FourthDataLen: common.Int32,
        FourthStartIndex: common.Int32,
        FourthRegisterAddr: common.Int32,
    }),
], 'ChipFM6353RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipFM6353RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipFM6353.decompiled.cs:1199
 */
export const ChipFM6353RGBVExtendProperty = t.intersection([
    ChipFM6353RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipFM6353RGBVExtendProperty') }),
], 'ChipFM6353RGBVExtendProperty');
//# sourceMappingURL=ChipFM6353RGBVExtendProperty.js.map