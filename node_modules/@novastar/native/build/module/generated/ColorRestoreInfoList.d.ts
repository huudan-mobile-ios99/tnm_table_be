import * as t from 'io-ts';
/**
 * @category Codecs
 * @desc Codec for interface {@link ColorRestoreInfoList}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:57522
 */
export declare const ColorRestoreInfoList: t.IntersectionC<[t.TypeC<{
    SelectedPortName: t.StringC;
    AddColorRestoreInfo: t.ArrayC<t.IntersectionC<[t.TypeC<{
        TagetCIEType: t.Type<import("./RGBCIEType").RGBCIETypeEnum, "Custom" | "PAL" | "NTSC", unknown>;
        ColorRestoreName: t.StringC;
    }>, t.PartialC<{
        ColorTempertureValue: t.Type<number, number, unknown>;
        OriganalCIE: t.PartialC<{
            BLed: t.PartialC<{
                Cx: t.Type<number, number, unknown>;
                Cy: t.Type<number, number, unknown>;
                Y: t.Type<number, number, unknown>;
            }>;
            GLed: t.PartialC<{
                Cx: t.Type<number, number, unknown>;
                Cy: t.Type<number, number, unknown>;
                Y: t.Type<number, number, unknown>;
            }>;
            RLed: t.PartialC<{
                Cx: t.Type<number, number, unknown>;
                Cy: t.Type<number, number, unknown>;
                Y: t.Type<number, number, unknown>;
            }>;
            WLed: t.PartialC<{
                Cx: t.Type<number, number, unknown>;
                Cy: t.Type<number, number, unknown>;
                Y: t.Type<number, number, unknown>;
            }>;
        }>;
        TagetCIE: t.PartialC<{
            BLed: t.PartialC<{
                Cx: t.Type<number, number, unknown>;
                Cy: t.Type<number, number, unknown>;
                Y: t.Type<number, number, unknown>;
            }>;
            GLed: t.PartialC<{
                Cx: t.Type<number, number, unknown>;
                Cy: t.Type<number, number, unknown>;
                Y: t.Type<number, number, unknown>;
            }>;
            RLed: t.PartialC<{
                Cx: t.Type<number, number, unknown>;
                Cy: t.Type<number, number, unknown>;
                Y: t.Type<number, number, unknown>;
            }>;
            WLed: t.PartialC<{
                Cx: t.Type<number, number, unknown>;
                Cy: t.Type<number, number, unknown>;
                Y: t.Type<number, number, unknown>;
            }>;
        }>;
    }>]>>;
}>, t.PartialC<{
    ScreenIndex: t.Type<number, number, unknown>;
}>]>;
export interface ColorRestoreInfoList extends t.TypeOf<typeof ColorRestoreInfoList> {
}
