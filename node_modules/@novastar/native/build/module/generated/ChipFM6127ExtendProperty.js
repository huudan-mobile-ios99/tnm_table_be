import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipFM6127ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        RedRegValueConfigFirst: common.UInt16_65474,
        GreenRegValueConfigFirst: common.UInt16_65474,
        BlueRegValueConfigFirst: common.UInt16_65474,
        VRedRegValueConfigFirst: common.UInt16_65474,
        RedRegValueConfigSecond: common.UInt16_30818,
        GreenRegValueConfigSecond: common.UInt16_28770,
        BlueRegValueConfigSecond: common.UInt16_26722,
        VRedRegValueConfigSecond: common.UInt16_30818,
        RedRegValueConfigThird: common.UInt16_3841,
        GreenRegValueConfigThird: common.UInt16_3841,
        BlueRegValueConfigThird: common.UInt16_3841,
        VRedRegValueConfigThird: common.UInt16_3841,
        RedRegValueConfigFourth: common.UInt16_65474,
        GreenRegValueConfigFourth: common.UInt16_65474,
        BlueRegValueConfigFourth: common.UInt16_65474,
        VRedRegValueConfigFourth: common.UInt16_65474,
        IsAdvancedMode: common.Bool_true,
    }),
    t.partial({
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
    }),
], 'ChipFM6127ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipFM6127ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipFM6127.decompiled.cs:6135
 */
export const ChipFM6127ExtendProperty = t.intersection([
    ChipFM6127ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipFM6127ExtendProperty') }),
], 'ChipFM6127ExtendProperty');
//# sourceMappingURL=ChipFM6127ExtendProperty.js.map