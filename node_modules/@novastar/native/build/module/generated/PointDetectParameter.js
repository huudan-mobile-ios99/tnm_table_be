import * as t from 'io-ts';
import * as common from '../lib/common';
import { DetectPointType } from './DetectPointType';
import { RegisterGroupType } from './RegisterGroupType';
import { ThresholdType } from './ThresholdType';
/**
 * @category Codecs
 * @desc Codec for interface {@link PointDetectParameter}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:741
 */
export const PointDetectParameter = t.partial({
    DetectType: DetectPointType,
    IsUseThreshold: common.Bool,
    Threshold: ThresholdType,
    ThresholdGradeCount: common.Int32,
    IsNeedConfigRegister: common.Bool,
    ConfigGroupType: RegisterGroupType,
    TheTallyMode: common.UInt8,
    DetectTypeValue: common.Int32,
}, 'PointDetectParameter');
//# sourceMappingURL=PointDetectParameter.js.map