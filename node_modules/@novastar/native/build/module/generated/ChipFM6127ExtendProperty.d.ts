import * as t from 'io-ts';
export declare const ChipFM6127ExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    RedRegValueConfigFirst: t.Type<number, number, unknown>;
    GreenRegValueConfigFirst: t.Type<number, number, unknown>;
    BlueRegValueConfigFirst: t.Type<number, number, unknown>;
    VRedRegValueConfigFirst: t.Type<number, number, unknown>;
    RedRegValueConfigSecond: t.Type<number, number, unknown>;
    GreenRegValueConfigSecond: t.Type<number, number, unknown>;
    BlueRegValueConfigSecond: t.Type<number, number, unknown>;
    VRedRegValueConfigSecond: t.Type<number, number, unknown>;
    RedRegValueConfigThird: t.Type<number, number, unknown>;
    GreenRegValueConfigThird: t.Type<number, number, unknown>;
    BlueRegValueConfigThird: t.Type<number, number, unknown>;
    VRedRegValueConfigThird: t.Type<number, number, unknown>;
    RedRegValueConfigFourth: t.Type<number, number, unknown>;
    GreenRegValueConfigFourth: t.Type<number, number, unknown>;
    BlueRegValueConfigFourth: t.Type<number, number, unknown>;
    VRedRegValueConfigFourth: t.Type<number, number, unknown>;
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
}>, t.PartialC<{
    IsUseNewModule: t.Type<boolean, boolean, unknown>;
    ChipLibVersion: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipFM6127ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipFM6127.decompiled.cs:6135
 */
export declare const ChipFM6127ExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    RedRegValueConfigFirst: t.Type<number, number, unknown>;
    GreenRegValueConfigFirst: t.Type<number, number, unknown>;
    BlueRegValueConfigFirst: t.Type<number, number, unknown>;
    VRedRegValueConfigFirst: t.Type<number, number, unknown>;
    RedRegValueConfigSecond: t.Type<number, number, unknown>;
    GreenRegValueConfigSecond: t.Type<number, number, unknown>;
    BlueRegValueConfigSecond: t.Type<number, number, unknown>;
    VRedRegValueConfigSecond: t.Type<number, number, unknown>;
    RedRegValueConfigThird: t.Type<number, number, unknown>;
    GreenRegValueConfigThird: t.Type<number, number, unknown>;
    BlueRegValueConfigThird: t.Type<number, number, unknown>;
    VRedRegValueConfigThird: t.Type<number, number, unknown>;
    RedRegValueConfigFourth: t.Type<number, number, unknown>;
    GreenRegValueConfigFourth: t.Type<number, number, unknown>;
    BlueRegValueConfigFourth: t.Type<number, number, unknown>;
    VRedRegValueConfigFourth: t.Type<number, number, unknown>;
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
}>, t.PartialC<{
    IsUseNewModule: t.Type<boolean, boolean, unknown>;
    ChipLibVersion: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipFM6127ExtendProperty">;
}>]>;
export interface ChipFM6127ExtendProperty extends t.TypeOf<typeof ChipFM6127ExtendProperty> {
}
