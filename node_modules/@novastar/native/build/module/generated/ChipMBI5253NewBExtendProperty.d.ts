import * as t from 'io-ts';
export declare const ChipMBI5253NewBExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    REG_LENGTH: t.Type<number, number, unknown>;
    RegisterArray: t.ArrayC<t.Type<number, number, unknown>>;
}>, t.PartialC<{
    DarkBlockCompensationOne: t.Type<number, number, unknown>;
    DarkBlockCompensationTwo: t.Type<number, number, unknown>;
    DarkBlockCompensationThree: t.Type<number, number, unknown>;
    FirstSweepElimination: t.Type<number, number, unknown>;
    UnderEliminateGhost: t.Type<number, number, unknown>;
    GrayHorizontalStripesEliminateEn: t.Type<boolean, boolean, unknown>;
    LowAshColorCastCompensation: t.Type<number, number, unknown>;
    AdvancedRLowAshColorCastCompensation1: t.Type<number, number, unknown>;
    AdvancedRLowAshColorCastCompensation2: t.Type<number, number, unknown>;
    AdvancedRLowAshColorCastCompensation3: t.Type<number, number, unknown>;
    GradientCompensation: t.Type<number, number, unknown>;
    GradientCompensation1: t.Type<number, number, unknown>;
    DislodgeBadPointsGrade: t.Type<number, number, unknown>;
    CurrentGain: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipMBI5253NewBExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipMBI5253NewB.decompiled.cs:1235
 */
export declare const ChipMBI5253NewBExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    REG_LENGTH: t.Type<number, number, unknown>;
    RegisterArray: t.ArrayC<t.Type<number, number, unknown>>;
}>, t.PartialC<{
    DarkBlockCompensationOne: t.Type<number, number, unknown>;
    DarkBlockCompensationTwo: t.Type<number, number, unknown>;
    DarkBlockCompensationThree: t.Type<number, number, unknown>;
    FirstSweepElimination: t.Type<number, number, unknown>;
    UnderEliminateGhost: t.Type<number, number, unknown>;
    GrayHorizontalStripesEliminateEn: t.Type<boolean, boolean, unknown>;
    LowAshColorCastCompensation: t.Type<number, number, unknown>;
    AdvancedRLowAshColorCastCompensation1: t.Type<number, number, unknown>;
    AdvancedRLowAshColorCastCompensation2: t.Type<number, number, unknown>;
    AdvancedRLowAshColorCastCompensation3: t.Type<number, number, unknown>;
    GradientCompensation: t.Type<number, number, unknown>;
    GradientCompensation1: t.Type<number, number, unknown>;
    DislodgeBadPointsGrade: t.Type<number, number, unknown>;
    CurrentGain: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipMBI5253NewBExtendProperty">;
}>]>;
export interface ChipMBI5253NewBExtendProperty extends t.TypeOf<typeof ChipMBI5253NewBExtendProperty> {
}
