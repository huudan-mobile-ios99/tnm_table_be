import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipCFD555AExtendProperty } from './ChipCFD555AExtendProperty';
export const ChipCFD555ARGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: ChipCFD555AExtendProperty,
        GreenProperty: ChipCFD555AExtendProperty,
        BlueProperty: ChipCFD555AExtendProperty,
        VRedProperty: ChipCFD555AExtendProperty,
        SubField: common.UInt8,
        GrayDepth: common.UInt8,
        IsAdvancedMode: common.Bool,
        IsUseNewModule: common.Bool,
        PLLFreqDivision: common.UInt8,
        PLLFreqDoubling: common.UInt8,
        SpecialDataLen: common.Int32,
        SpecialRegisterAddr: common.UInt32,
    }),
], 'ChipCFD555ARGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipCFD555ARGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipCFD555A.decompiled.cs:8408
 */
export const ChipCFD555ARGBVExtendProperty = t.intersection([
    ChipCFD555ARGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipCFD555ARGBVExtendProperty') }),
], 'ChipCFD555ARGBVExtendProperty');
//# sourceMappingURL=ChipCFD555ARGBVExtendProperty.js.map