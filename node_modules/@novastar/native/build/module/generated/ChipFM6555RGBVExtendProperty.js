import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipFM6555ExtendProperty } from './ChipFM6555ExtendProperty';
export const ChipFM6555RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        REG_LENGTH: common.Int32_48,
    }),
    t.partial({
        RedProperty: ChipFM6555ExtendProperty,
        GreenProperty: ChipFM6555ExtendProperty,
        BlueProperty: ChipFM6555ExtendProperty,
        VRedProperty: ChipFM6555ExtendProperty,
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
    }),
], 'ChipFM6555RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipFM6555RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipFM6555.decompiled.cs:1319
 */
export const ChipFM6555RGBVExtendProperty = t.intersection([
    ChipFM6555RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipFM6555RGBVExtendProperty') }),
], 'ChipFM6555RGBVExtendProperty');
//# sourceMappingURL=ChipFM6555RGBVExtendProperty.js.map