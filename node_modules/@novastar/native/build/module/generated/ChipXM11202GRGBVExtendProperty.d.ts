import * as t from 'io-ts';
export declare const ChipXM11202GRGBVExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    RegisterArray: t.ArrayC<t.Type<bigint, bigint, unknown>>;
    ConfigRegisterNum: t.Type<number, number, unknown>;
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
}>, t.PartialC<{
    IsUseNewModule: t.Type<boolean, boolean, unknown>;
    SpecialDataLen: t.Type<number, number, unknown>;
    SpecialRegisterAddr: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipXM11202GRGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipXM11202G.decompiled.cs:1003
 */
export declare const ChipXM11202GRGBVExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    RegisterArray: t.ArrayC<t.Type<bigint, bigint, unknown>>;
    ConfigRegisterNum: t.Type<number, number, unknown>;
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
}>, t.PartialC<{
    IsUseNewModule: t.Type<boolean, boolean, unknown>;
    SpecialDataLen: t.Type<number, number, unknown>;
    SpecialRegisterAddr: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipXM11202GRGBVExtendProperty">;
}>]>;
export interface ChipXM11202GRGBVExtendProperty extends t.TypeOf<typeof ChipXM11202GRGBVExtendProperty> {
}
