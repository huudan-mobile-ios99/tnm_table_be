import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSerialColorNum(addr, portAddr, scanBoardAddr, bBroadcast, serialColorNum) {
    const $data = encodeUIntLE(serialColorNum, AddressMapping.SerialColorNumOccupancy);
    const req = new Request($data, bBroadcast, 'SetSerialColorNum');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.SerialColorNumAddr;
    return req;
}
Session.prototype.SetSerialColorNum = async function SetSerialColorNum(addr, portAddr, scanBoardAddr, bBroadcast, serialColorNum) {
    const req = createSetSerialColorNum(addr, portAddr, scanBoardAddr, bBroadcast, serialColorNum);
    await this.connection.send(req);
};
Session.prototype.trySetSerialColorNum = async function trySetSerialColorNum(addr, portAddr, scanBoardAddr, serialColorNum) {
    const req = createSetSerialColorNum(addr, portAddr, scanBoardAddr, false, serialColorNum);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSerialColorNum.js.map