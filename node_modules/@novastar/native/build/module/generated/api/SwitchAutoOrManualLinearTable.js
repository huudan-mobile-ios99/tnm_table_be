import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSwitchAutoOrManualLinearTable(addr, portAddr, scanBoardAddr, bBroadcast, switchAutoOrManualEnable) {
    const $data = encodeUIntLE(switchAutoOrManualEnable ? 1 : 0, AddressMapping.SwitchAutoOrManualLinearTableOccupancy);
    const req = new Request($data, bBroadcast, 'SwitchAutoOrManualLinearTable');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.SwitchAutoOrManualLinearTableAddr;
    return req;
}
Session.prototype.SwitchAutoOrManualLinearTable = async function SwitchAutoOrManualLinearTable(addr, portAddr, scanBoardAddr, bBroadcast, switchAutoOrManualEnable) {
    const req = createSwitchAutoOrManualLinearTable(addr, portAddr, scanBoardAddr, bBroadcast, switchAutoOrManualEnable);
    await this.connection.send(req);
};
Session.prototype.trySwitchAutoOrManualLinearTable =
    async function trySwitchAutoOrManualLinearTable(addr, portAddr, scanBoardAddr, switchAutoOrManualEnable) {
        const req = createSwitchAutoOrManualLinearTable(addr, portAddr, scanBoardAddr, false, switchAutoOrManualEnable);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SwitchAutoOrManualLinearTable.js.map