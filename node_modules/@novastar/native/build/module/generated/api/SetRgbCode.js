import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetRgbCode(addr, portAddr, scanBoardAddr, bBroadcast, red, green, blue, virtualRed) {
    const $data = encodeUIntLE(red | (green << 2) | (blue << 4) | (virtualRed << 6), AddressMapping.RgbCodeOccupancy);
    const req = new Request($data, bBroadcast, 'SetRgbCode');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.RgbCodeAddr;
    return req;
}
Session.prototype.SetRgbCode = async function SetRgbCode(addr, portAddr, scanBoardAddr, bBroadcast, red, green, blue, virtualRed) {
    const req = createSetRgbCode(addr, portAddr, scanBoardAddr, bBroadcast, red, green, blue, virtualRed);
    await this.connection.send(req);
};
Session.prototype.trySetRgbCode = async function trySetRgbCode(addr, portAddr, scanBoardAddr, red, green, blue, virtualRed) {
    const req = createSetRgbCode(addr, portAddr, scanBoardAddr, false, red, green, blue, virtualRed);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetRgbCode.js.map