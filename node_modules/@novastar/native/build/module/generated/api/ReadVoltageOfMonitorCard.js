import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadVoltageOfMonitorCard(addr, portAddr, scanBoardAddr, readCountOfValtage, beginIdnexOfValtage) {
    const req = new Request(AddressMapping.Scanner_VoltageOfMonitorCardOccupancy * readCountOfValtage, 'ReadVoltageOfMonitorCard');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address =
        AddressMapping.Scanner_VoltageOfMonitorCardAddr +
            AddressMapping.Scanner_VoltageOfMonitorCardOccupancy * beginIdnexOfValtage;
    return req;
}
Session.prototype.ReadVoltageOfMonitorCard = async function ReadVoltageOfMonitorCard(addr, portAddr, scanBoardAddr, readCountOfValtage, beginIdnexOfValtage) {
    const req = createReadVoltageOfMonitorCard(addr, portAddr, scanBoardAddr, readCountOfValtage, beginIdnexOfValtage);
    return (await this.connection.send(req)).data;
};
Session.prototype.tryReadVoltageOfMonitorCard = async function tryReadVoltageOfMonitorCard(addr, portAddr, scanBoardAddr, readCountOfValtage, beginIdnexOfValtage) {
    const req = createReadVoltageOfMonitorCard(addr, portAddr, scanBoardAddr, readCountOfValtage, beginIdnexOfValtage);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadVoltageOfMonitorCard.js.map