import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetMirrorMode(addr, bBroadcast, mirrorModeData, isPreposition) {
    const req = new Request([mirrorModeData], bBroadcast, 'SetMirrorMode');
    req.destination = addr;
    if (isPreposition) {
        req.address = AddressMapping.MirrorModeFirAddr;
    }
    else {
        req.address = AddressMapping.MirrorModeSecAddr;
    }
    return req;
}
Session.prototype.SetMirrorMode = async function SetMirrorMode(addr, bBroadcast, mirrorModeData, isPreposition) {
    const req = createSetMirrorMode(addr, bBroadcast, mirrorModeData, isPreposition);
    await this.connection.send(req);
};
Session.prototype.trySetMirrorMode = async function trySetMirrorMode(addr, mirrorModeData, isPreposition) {
    const req = createSetMirrorMode(addr, false, mirrorModeData, isPreposition);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetMirrorMode.js.map