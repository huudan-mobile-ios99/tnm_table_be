import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetMasterOrSlaveNew32Addr(addr, bBroadcast, masterOrSlaveBytes) {
    const req = new Request(masterOrSlaveBytes, bBroadcast, 'SetMasterOrSlaveNew32Addr');
    req.destination = addr;
    req.address = AddressMapping.MasterOrSlaveNew32Addr;
    return req;
}
Session.prototype.SetMasterOrSlaveNew32Addr = async function SetMasterOrSlaveNew32Addr(addr, bBroadcast, masterOrSlaveBytes) {
    const req = createSetMasterOrSlaveNew32Addr(addr, bBroadcast, masterOrSlaveBytes);
    await this.connection.send(req);
};
Session.prototype.trySetMasterOrSlaveNew32Addr = async function trySetMasterOrSlaveNew32Addr(addr, masterOrSlaveBytes) {
    const req = createSetMasterOrSlaveNew32Addr(addr, false, masterOrSlaveBytes);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetMasterOrSlaveNew32Addr.js.map