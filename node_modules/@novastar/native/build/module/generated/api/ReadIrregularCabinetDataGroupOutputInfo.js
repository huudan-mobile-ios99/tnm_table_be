import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadIrregularCabinetDataGroupOutputInfo(addr, portAddr, scanBoardAddr, dataLength) {
    const req = new Request(dataLength, 'ReadIrregularCabinetDataGroupOutputInfo');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.IrRegular_DataGroupOutputInfoAddr;
    return req;
}
Session.prototype.ReadIrregularCabinetDataGroupOutputInfo =
    async function ReadIrregularCabinetDataGroupOutputInfo(addr, portAddr, scanBoardAddr, dataLength) {
        const req = createReadIrregularCabinetDataGroupOutputInfo(addr, portAddr, scanBoardAddr, dataLength);
        return (await this.connection.send(req)).data;
    };
Session.prototype.tryReadIrregularCabinetDataGroupOutputInfo =
    async function tryReadIrregularCabinetDataGroupOutputInfo(addr, portAddr, scanBoardAddr, dataLength) {
        const req = createReadIrregularCabinetDataGroupOutputInfo(addr, portAddr, scanBoardAddr, dataLength);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=ReadIrregularCabinetDataGroupOutputInfo.js.map