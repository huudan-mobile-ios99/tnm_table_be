import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetCtrlEndPoint(addr, portAddr, scanBoardAddr, bBroadcast, ctrlEndPoint) {
    const $data = encodeUIntLE(ctrlEndPoint, AddressMapping.CtrlEndPointOccupancy);
    const req = new Request($data, bBroadcast, 'SetCtrlEndPoint');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.CtrlEndPointAddr;
    return req;
}
Session.prototype.SetCtrlEndPoint = async function SetCtrlEndPoint(addr, portAddr, scanBoardAddr, bBroadcast, ctrlEndPoint) {
    const req = createSetCtrlEndPoint(addr, portAddr, scanBoardAddr, bBroadcast, ctrlEndPoint);
    await this.connection.send(req);
};
Session.prototype.trySetCtrlEndPoint = async function trySetCtrlEndPoint(addr, portAddr, scanBoardAddr, ctrlEndPoint) {
    const req = createSetCtrlEndPoint(addr, portAddr, scanBoardAddr, false, ctrlEndPoint);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetCtrlEndPoint.js.map