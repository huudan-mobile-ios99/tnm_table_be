import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_HWProBrightSegemntCnt(addr, bBroadcast, segementCnt) {
    const $data = encodeUIntLE(segementCnt, AddressMapping.Sender_BrightSegemntCntOccupancy);
    const req = new Request($data, bBroadcast, 'SetSender_HWProBrightSegemntCnt');
    req.destination = addr;
    req.address = AddressMapping.Sender_BrightSegemntCntAddr;
    return req;
}
Session.prototype.SetSender_HWProBrightSegemntCnt = async function SetSender_HWProBrightSegemntCnt(addr, bBroadcast, segementCnt) {
    const req = createSetSender_HWProBrightSegemntCnt(addr, bBroadcast, segementCnt);
    await this.connection.send(req);
};
Session.prototype.trySetSender_HWProBrightSegemntCnt =
    async function trySetSender_HWProBrightSegemntCnt(addr, segementCnt) {
        const req = createSetSender_HWProBrightSegemntCnt(addr, false, segementCnt);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetSender_HWProBrightSegemntCnt.js.map