import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetRefNumPerVs(addr, portAddr, scanBoardAddr, bBroadcast, refNumPerVs) {
    const $data = encodeUIntLE(refNumPerVs, AddressMapping.RefNumPerVsOccupancy);
    const req = new Request($data, bBroadcast, 'SetRefNumPerVs');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.RefNumPerVsAddr;
    return req;
}
Session.prototype.SetRefNumPerVs = async function SetRefNumPerVs(addr, portAddr, scanBoardAddr, bBroadcast, refNumPerVs) {
    const req = createSetRefNumPerVs(addr, portAddr, scanBoardAddr, bBroadcast, refNumPerVs);
    await this.connection.send(req);
};
Session.prototype.trySetRefNumPerVs = async function trySetRefNumPerVs(addr, portAddr, scanBoardAddr, refNumPerVs) {
    const req = createSetRefNumPerVs(addr, portAddr, scanBoardAddr, false, refNumPerVs);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetRefNumPerVs.js.map