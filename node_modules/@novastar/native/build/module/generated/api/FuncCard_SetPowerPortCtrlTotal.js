import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createFuncCard_SetPowerPortCtrlTotal(addr, bBroadcast, operType) {
    const $data = encodeUIntLE(operType, AddressMapping.FuncCard_PowerPortCtrlTotalOccupancy);
    const req = new Request($data, bBroadcast, 'FuncCard_SetPowerPortCtrlTotal');
    req.destination = addr;
    req.address = AddressMapping.FuncCard_PowerPortCtrlTotalAddr;
    return req;
}
Session.prototype.FuncCard_SetPowerPortCtrlTotal = async function FuncCard_SetPowerPortCtrlTotal(addr, bBroadcast, operType) {
    const req = createFuncCard_SetPowerPortCtrlTotal(addr, bBroadcast, operType);
    await this.connection.send(req);
};
Session.prototype.tryFuncCard_SetPowerPortCtrlTotal =
    async function tryFuncCard_SetPowerPortCtrlTotal(addr, operType) {
        const req = createFuncCard_SetPowerPortCtrlTotal(addr, false, operType);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=FuncCard_SetPowerPortCtrlTotal.js.map