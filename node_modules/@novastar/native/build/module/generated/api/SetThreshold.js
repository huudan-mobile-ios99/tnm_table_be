import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetThreshold(addr, portAddr, scanBoardAddr, bBroadcast, threshold) {
    const $data = encodeUIntLE(threshold, AddressMapping.ThresholdOccupancy);
    const req = new Request($data, bBroadcast, 'SetThreshold');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ThresholdAddr;
    return req;
}
Session.prototype.SetThreshold = async function SetThreshold(addr, portAddr, scanBoardAddr, bBroadcast, threshold) {
    const req = createSetThreshold(addr, portAddr, scanBoardAddr, bBroadcast, threshold);
    await this.connection.send(req);
};
Session.prototype.trySetThreshold = async function trySetThreshold(addr, portAddr, scanBoardAddr, threshold) {
    const req = createSetThreshold(addr, portAddr, scanBoardAddr, false, threshold);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetThreshold.js.map