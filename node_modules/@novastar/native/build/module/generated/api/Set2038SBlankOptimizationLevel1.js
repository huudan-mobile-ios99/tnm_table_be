import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSet2038SBlankOptimizationLevel1(addr, portAddr, scanBoardAddr, bBroadcast, blankLevelValue) {
    const req = new Request([blankLevelValue], bBroadcast, 'Set2038SBlankOptimizationLevel1');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Scanner_2038SBlankOptimizationLevelAddr1;
    return req;
}
Session.prototype.Set2038SBlankOptimizationLevel1 = async function Set2038SBlankOptimizationLevel1(addr, portAddr, scanBoardAddr, bBroadcast, blankLevelValue) {
    const req = createSet2038SBlankOptimizationLevel1(addr, portAddr, scanBoardAddr, bBroadcast, blankLevelValue);
    await this.connection.send(req);
};
Session.prototype.trySet2038SBlankOptimizationLevel1 =
    async function trySet2038SBlankOptimizationLevel1(addr, portAddr, scanBoardAddr, blankLevelValue) {
        const req = createSet2038SBlankOptimizationLevel1(addr, portAddr, scanBoardAddr, false, blankLevelValue);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=Set2038SBlankOptimizationLevel1.js.map