import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetModuelRows(addr, portAddr, scanBoardAddr, bBroadcast, moduleRows) {
    const $data = encodeUIntLE(moduleRows, AddressMapping.ModuleRowsOccupancy);
    const req = new Request($data, bBroadcast, 'SetModuelRows');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ModuleRowsAddr;
    return req;
}
Session.prototype.SetModuelRows = async function SetModuelRows(addr, portAddr, scanBoardAddr, bBroadcast, moduleRows) {
    const req = createSetModuelRows(addr, portAddr, scanBoardAddr, bBroadcast, moduleRows);
    await this.connection.send(req);
};
Session.prototype.trySetModuelRows = async function trySetModuelRows(addr, portAddr, scanBoardAddr, moduleRows) {
    const req = createSetModuelRows(addr, portAddr, scanBoardAddr, false, moduleRows);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetModuelRows.js.map