import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadMasterOrSlaveState(addr) {
    const req = new Request(AddressMapping.MasterOrSlaveDeviceStateOccupancy, 'ReadMasterOrSlaveState');
    req.destination = addr;
    req.address = AddressMapping.MasterOrSlaveDeviceStateAddr;
    return req;
}
Session.prototype.ReadMasterOrSlaveState = async function ReadMasterOrSlaveState(addr) {
    const req = createReadMasterOrSlaveState(addr);
    return decodeUIntLE(await this.connection.send(req));
};
Session.prototype.tryReadMasterOrSlaveState = async function tryReadMasterOrSlaveState(addr) {
    const req = createReadMasterOrSlaveState(addr);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadMasterOrSlaveState.js.map