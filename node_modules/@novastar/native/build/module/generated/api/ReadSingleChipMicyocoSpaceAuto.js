import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadSingleChipMicyocoSpaceAuto(addr, portAddr, scanBoardAddr) {
    const req = new Request(AddressMapping.SingleChipMicyocoSpaceAutoOccupancy, 'ReadSingleChipMicyocoSpaceAuto');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.SingleChipMicyocoSpaceAutoAddr;
    return req;
}
Session.prototype.ReadSingleChipMicyocoSpaceAuto = async function ReadSingleChipMicyocoSpaceAuto(addr, portAddr, scanBoardAddr) {
    const req = createReadSingleChipMicyocoSpaceAuto(addr, portAddr, scanBoardAddr);
    return (await this.connection.send(req)).data;
};
Session.prototype.tryReadSingleChipMicyocoSpaceAuto =
    async function tryReadSingleChipMicyocoSpaceAuto(addr, portAddr, scanBoardAddr) {
        const req = createReadSingleChipMicyocoSpaceAuto(addr, portAddr, scanBoardAddr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=ReadSingleChipMicyocoSpaceAuto.js.map