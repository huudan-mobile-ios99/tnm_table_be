import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadDeviceExtendType(addr) {
    const req = new Request(AddressMapping.DeviceExtendTypeOccupancy, 'ReadDeviceExtendType');
    req.destination = addr;
    req.address = AddressMapping.DeviceExtendTypeAddr;
    return req;
}
Session.prototype.ReadDeviceExtendType = async function ReadDeviceExtendType(addr) {
    const req = createReadDeviceExtendType(addr);
    return decodeUIntLE(await this.connection.send(req));
};
Session.prototype.tryReadDeviceExtendType = async function tryReadDeviceExtendType(addr) {
    const req = createReadDeviceExtendType(addr);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadDeviceExtendType.js.map