import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSet2038SDelayTime(addr, portAddr, scanBoardAddr, bBroadcast, delayTime) {
    const $data = encodeUIntLE(delayTime, AddressMapping.DelayTimeOccupancy);
    const req = new Request($data, bBroadcast, 'Set2038SDelayTime');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.DelayTimeAddr;
    return req;
}
Session.prototype.Set2038SDelayTime = async function Set2038SDelayTime(addr, portAddr, scanBoardAddr, bBroadcast, delayTime) {
    const req = createSet2038SDelayTime(addr, portAddr, scanBoardAddr, bBroadcast, delayTime);
    await this.connection.send(req);
};
Session.prototype.trySet2038SDelayTime = async function trySet2038SDelayTime(addr, portAddr, scanBoardAddr, delayTime) {
    const req = createSet2038SDelayTime(addr, portAddr, scanBoardAddr, false, delayTime);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=Set2038SDelayTime.js.map