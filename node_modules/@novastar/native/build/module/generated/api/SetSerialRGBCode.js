import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSerialRGBCode(addr, portAddr, scanBoardAddr, bBroadcast, red, green, blue, virtualRed) {
    const $data = encodeUIntLE(red | (green << 2) | (blue << 4) | (virtualRed << 6), AddressMapping.SerialRGBCodeOccupancy);
    const req = new Request($data, bBroadcast, 'SetSerialRGBCode');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.SerialRGBCodeAddr;
    return req;
}
Session.prototype.SetSerialRGBCode = async function SetSerialRGBCode(addr, portAddr, scanBoardAddr, bBroadcast, red, green, blue, virtualRed) {
    const req = createSetSerialRGBCode(addr, portAddr, scanBoardAddr, bBroadcast, red, green, blue, virtualRed);
    await this.connection.send(req);
};
Session.prototype.trySetSerialRGBCode = async function trySetSerialRGBCode(addr, portAddr, scanBoardAddr, red, green, blue, virtualRed) {
    const req = createSetSerialRGBCode(addr, portAddr, scanBoardAddr, false, red, green, blue, virtualRed);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSerialRGBCode.js.map