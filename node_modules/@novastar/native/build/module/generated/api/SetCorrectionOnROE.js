import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetCorrectionOnROE(addr, portAddr, scanBoardAddr, bBroadcast, isOpenCorrect, type, retainClrInfo) {
    const req = new Request(isOpenCorrect
        ? [0 | 128]
        : [0, 0 | (isOpenCorrect ? 1 : 0), 0 | (type << 1), 0 | (!retainClrInfo ? 4 : 0)], bBroadcast, 'SetCorrectionOnROE');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.CorrectionOnAddr;
    return req;
}
Session.prototype.SetCorrectionOnROE = async function SetCorrectionOnROE(addr, portAddr, scanBoardAddr, bBroadcast, isOpenCorrect, type, retainClrInfo) {
    const req = createSetCorrectionOnROE(addr, portAddr, scanBoardAddr, bBroadcast, isOpenCorrect, type, retainClrInfo);
    await this.connection.send(req);
};
Session.prototype.trySetCorrectionOnROE = async function trySetCorrectionOnROE(addr, portAddr, scanBoardAddr, isOpenCorrect, type, retainClrInfo) {
    const req = createSetCorrectionOnROE(addr, portAddr, scanBoardAddr, false, isOpenCorrect, type, retainClrInfo);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetCorrectionOnROE.js.map