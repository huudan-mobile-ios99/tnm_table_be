import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetLightTimePerSubFieldRatio(addr, portAddr, scanBoardAddr, bBroadcast, lightTimePerSubFieldRatio) {
    const $data = encodeUIntLE(lightTimePerSubFieldRatio, AddressMapping.LightTimePerSubFieldRatioOccupancy);
    const req = new Request($data, bBroadcast, 'SetLightTimePerSubFieldRatio');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.LightTimePerSubFieldRatioAddr;
    return req;
}
Session.prototype.SetLightTimePerSubFieldRatio = async function SetLightTimePerSubFieldRatio(addr, portAddr, scanBoardAddr, bBroadcast, lightTimePerSubFieldRatio) {
    const req = createSetLightTimePerSubFieldRatio(addr, portAddr, scanBoardAddr, bBroadcast, lightTimePerSubFieldRatio);
    await this.connection.send(req);
};
Session.prototype.trySetLightTimePerSubFieldRatio = async function trySetLightTimePerSubFieldRatio(addr, portAddr, scanBoardAddr, lightTimePerSubFieldRatio) {
    const req = createSetLightTimePerSubFieldRatio(addr, portAddr, scanBoardAddr, false, lightTimePerSubFieldRatio);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetLightTimePerSubFieldRatio.js.map