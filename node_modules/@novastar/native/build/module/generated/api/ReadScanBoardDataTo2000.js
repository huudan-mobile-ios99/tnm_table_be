import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadScanBoardDataTo2000(addr, portAddr, scanBoardAddr, length) {
    const req = new Request(length, 'ReadScanBoardDataTo2000');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.SDKReadOrWriteAddr;
    return req;
}
Session.prototype.ReadScanBoardDataTo2000 = async function ReadScanBoardDataTo2000(addr, portAddr, scanBoardAddr, length) {
    const req = createReadScanBoardDataTo2000(addr, portAddr, scanBoardAddr, length);
    return (await this.connection.send(req)).data;
};
Session.prototype.tryReadScanBoardDataTo2000 = async function tryReadScanBoardDataTo2000(addr, portAddr, scanBoardAddr, length) {
    const req = createReadScanBoardDataTo2000(addr, portAddr, scanBoardAddr, length);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadScanBoardDataTo2000.js.map