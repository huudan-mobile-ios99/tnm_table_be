import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetCorrectionOnEx(addr, portAddr, scanBoardAddr, bBroadcast, bCorrectionOn) {
    const req = new Request(bCorrectionOn ? [5] : [0], bBroadcast, 'SetCorrectionOnEx');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.CorrectionOnExAddr;
    return req;
}
Session.prototype.SetCorrectionOnEx = async function SetCorrectionOnEx(addr, portAddr, scanBoardAddr, bBroadcast, bCorrectionOn) {
    const req = createSetCorrectionOnEx(addr, portAddr, scanBoardAddr, bBroadcast, bCorrectionOn);
    await this.connection.send(req);
};
Session.prototype.trySetCorrectionOnEx = async function trySetCorrectionOnEx(addr, portAddr, scanBoardAddr, bCorrectionOn) {
    const req = createSetCorrectionOnEx(addr, portAddr, scanBoardAddr, false, bCorrectionOn);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetCorrectionOnEx.js.map