import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetRedBrightness(addr, portAddr, scanBoardAddr, bBroadcast, redBrightness) {
    const $data = encodeUIntLE(redBrightness, AddressMapping.RedBrightnessOccupancy);
    const req = new Request($data, bBroadcast, 'SetRedBrightness');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.RedBrightnessAddr;
    return req;
}
Session.prototype.SetRedBrightness = async function SetRedBrightness(addr, portAddr, scanBoardAddr, bBroadcast, redBrightness) {
    const req = createSetRedBrightness(addr, portAddr, scanBoardAddr, bBroadcast, redBrightness);
    await this.connection.send(req);
};
Session.prototype.trySetRedBrightness = async function trySetRedBrightness(addr, portAddr, scanBoardAddr, redBrightness) {
    const req = createSetRedBrightness(addr, portAddr, scanBoardAddr, false, redBrightness);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetRedBrightness.js.map