import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetvCabinetSerialNum(addr, portAddr, scanBoardAddr, bBroadcast, cabinetSerialNum) {
    const $data = encodeUIntLE(cabinetSerialNum, AddressMapping.CabinetSerialNumOccupancy);
    const req = new Request($data, bBroadcast, 'SetvCabinetSerialNum');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.CabinetSerialNumAddr;
    return req;
}
Session.prototype.SetvCabinetSerialNum = async function SetvCabinetSerialNum(addr, portAddr, scanBoardAddr, bBroadcast, cabinetSerialNum) {
    const req = createSetvCabinetSerialNum(addr, portAddr, scanBoardAddr, bBroadcast, cabinetSerialNum);
    await this.connection.send(req);
};
Session.prototype.trySetvCabinetSerialNum = async function trySetvCabinetSerialNum(addr, portAddr, scanBoardAddr, cabinetSerialNum) {
    const req = createSetvCabinetSerialNum(addr, portAddr, scanBoardAddr, false, cabinetSerialNum);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetvCabinetSerialNum.js.map