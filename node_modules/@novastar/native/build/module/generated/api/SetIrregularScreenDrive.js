import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetIrregularScreenDrive(addr, portAddr, scanBoardAddr, bBroadcast, isIrregularScreenDrive) {
    const req = new Request(isIrregularScreenDrive ? [1] : [0], bBroadcast, 'SetIrregularScreenDrive');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.IrregularScreenDriveAddr;
    return req;
}
Session.prototype.SetIrregularScreenDrive = async function SetIrregularScreenDrive(addr, portAddr, scanBoardAddr, bBroadcast, isIrregularScreenDrive) {
    const req = createSetIrregularScreenDrive(addr, portAddr, scanBoardAddr, bBroadcast, isIrregularScreenDrive);
    await this.connection.send(req);
};
Session.prototype.trySetIrregularScreenDrive = async function trySetIrregularScreenDrive(addr, portAddr, scanBoardAddr, isIrregularScreenDrive) {
    const req = createSetIrregularScreenDrive(addr, portAddr, scanBoardAddr, false, isIrregularScreenDrive);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetIrregularScreenDrive.js.map