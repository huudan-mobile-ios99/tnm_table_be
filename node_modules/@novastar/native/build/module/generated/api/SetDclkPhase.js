import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetDclkPhase(addr, portAddr, scanBoardAddr, bBroadcast, dclkPhase) {
    const $data = encodeUIntLE(dclkPhase, AddressMapping.DclkPhaseOccupancy);
    const req = new Request($data, bBroadcast, 'SetDclkPhase');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.DclkPhaseAddr;
    return req;
}
Session.prototype.SetDclkPhase = async function SetDclkPhase(addr, portAddr, scanBoardAddr, bBroadcast, dclkPhase) {
    const req = createSetDclkPhase(addr, portAddr, scanBoardAddr, bBroadcast, dclkPhase);
    await this.connection.send(req);
};
Session.prototype.trySetDclkPhase = async function trySetDclkPhase(addr, portAddr, scanBoardAddr, dclkPhase) {
    const req = createSetDclkPhase(addr, portAddr, scanBoardAddr, false, dclkPhase);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetDclkPhase.js.map