import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetReturnFactoryValues(addr, bBroadcast, returnFactoryValues) {
    const $data = encodeUIntLE(returnFactoryValues, AddressMapping.SortOrderOccupancy);
    const req = new Request($data, bBroadcast, 'SetReturnFactoryValues');
    req.destination = addr;
    req.address = AddressMapping.ReturnFactoryValuesAddr;
    return req;
}
Session.prototype.SetReturnFactoryValues = async function SetReturnFactoryValues(addr, bBroadcast, returnFactoryValues) {
    const req = createSetReturnFactoryValues(addr, bBroadcast, returnFactoryValues);
    await this.connection.send(req);
};
Session.prototype.trySetReturnFactoryValues = async function trySetReturnFactoryValues(addr, returnFactoryValues) {
    const req = createSetReturnFactoryValues(addr, false, returnFactoryValues);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetReturnFactoryValues.js.map