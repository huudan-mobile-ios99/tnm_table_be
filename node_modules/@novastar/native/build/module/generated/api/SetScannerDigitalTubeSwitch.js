import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScannerDigitalTubeSwitch(addr, portAddr, scanBoardAddr, bBroadcast, isOpen) {
    const req = new Request(isOpen ? [22] : [0], bBroadcast, 'SetScannerDigitalTubeSwitch');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScannerDigitalTubeSwitchAddr;
    return req;
}
Session.prototype.SetScannerDigitalTubeSwitch = async function SetScannerDigitalTubeSwitch(addr, portAddr, scanBoardAddr, bBroadcast, isOpen) {
    const req = createSetScannerDigitalTubeSwitch(addr, portAddr, scanBoardAddr, bBroadcast, isOpen);
    await this.connection.send(req);
};
Session.prototype.trySetScannerDigitalTubeSwitch = async function trySetScannerDigitalTubeSwitch(addr, portAddr, scanBoardAddr, isOpen) {
    const req = createSetScannerDigitalTubeSwitch(addr, portAddr, scanBoardAddr, false, isOpen);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScannerDigitalTubeSwitch.js.map