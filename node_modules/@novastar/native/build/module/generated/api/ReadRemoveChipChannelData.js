import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadRemoveChipChannelData(addr, portAddr, scanBoardAddr, dataLength) {
    const req = new Request(dataLength, 'ReadRemoveChipChannelData');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Module_RemoveChipChannelAddr;
    return req;
}
Session.prototype.ReadRemoveChipChannelData = async function ReadRemoveChipChannelData(addr, portAddr, scanBoardAddr, dataLength) {
    const req = createReadRemoveChipChannelData(addr, portAddr, scanBoardAddr, dataLength);
    return (await this.connection.send(req)).data;
};
Session.prototype.tryReadRemoveChipChannelData = async function tryReadRemoveChipChannelData(addr, portAddr, scanBoardAddr, dataLength) {
    const req = createReadRemoveChipChannelData(addr, portAddr, scanBoardAddr, dataLength);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadRemoveChipChannelData.js.map