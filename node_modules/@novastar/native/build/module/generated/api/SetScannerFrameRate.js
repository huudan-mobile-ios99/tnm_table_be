import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScannerFrameRate(addr, portAddr, scanBoardAddr, bBroadcast, frameRate) {
    const $data = encodeUIntLE(frameRate, AddressMapping.DoubleModelCardSpaceRecordFreOccupancy);
    const req = new Request($data, bBroadcast, 'SetScannerFrameRate');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.DoubleModelCardSpaceRecordFre;
    return req;
}
Session.prototype.SetScannerFrameRate = async function SetScannerFrameRate(addr, portAddr, scanBoardAddr, bBroadcast, frameRate) {
    const req = createSetScannerFrameRate(addr, portAddr, scanBoardAddr, bBroadcast, frameRate);
    await this.connection.send(req);
};
Session.prototype.trySetScannerFrameRate = async function trySetScannerFrameRate(addr, portAddr, scanBoardAddr, frameRate) {
    const req = createSetScannerFrameRate(addr, portAddr, scanBoardAddr, false, frameRate);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScannerFrameRate.js.map