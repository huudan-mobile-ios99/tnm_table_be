import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createRead9868ABlankOptimizationLevel2(addr, portAddr, scanBoardAddr) {
    const req = new Request(AddressMapping.Scanner_BlankOptimizationLevelOccupancy, 'Read9868ABlankOptimizationLevel2');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Scanner_9868ABlankOptimizationLevelAddr2;
    return req;
}
Session.prototype.Read9868ABlankOptimizationLevel2 =
    async function Read9868ABlankOptimizationLevel2(addr, portAddr, scanBoardAddr) {
        const req = createRead9868ABlankOptimizationLevel2(addr, portAddr, scanBoardAddr);
        return decodeUIntLE(await this.connection.send(req));
    };
Session.prototype.tryRead9868ABlankOptimizationLevel2 =
    async function tryRead9868ABlankOptimizationLevel2(addr, portAddr, scanBoardAddr) {
        const req = createRead9868ABlankOptimizationLevel2(addr, portAddr, scanBoardAddr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=Read9868ABlankOptimizationLevel2.js.map