import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetParameterSender3D(addr, portAddr, scanBoardAddr, bBroadcast, parameterSender3D) {
    const $data = encodeUIntLE(parameterSender3D, AddressMapping.ParameterStore2SpiFlashOccupancy);
    const req = new Request($data, bBroadcast, 'SetParameterSender3D');
    req.destination = addr;
    req.deviceType = 4;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ParameterStore2SpiFlashAddr;
    return req;
}
Session.prototype.SetParameterSender3D = async function SetParameterSender3D(addr, portAddr, scanBoardAddr, bBroadcast, parameterSender3D) {
    const req = createSetParameterSender3D(addr, portAddr, scanBoardAddr, bBroadcast, parameterSender3D);
    await this.connection.send(req);
};
Session.prototype.trySetParameterSender3D = async function trySetParameterSender3D(addr, portAddr, scanBoardAddr, parameterSender3D) {
    const req = createSetParameterSender3D(addr, portAddr, scanBoardAddr, false, parameterSender3D);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetParameterSender3D.js.map