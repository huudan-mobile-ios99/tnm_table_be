import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_AuthorizePassward(addr, bBroadcast, Passward) {
    if (Passward.length !== AddressMapping.Sender_AuthorizePasswardOccupancy)
        throw new TypeError(`Invalid buffer size: ${Passward.length}`);
    const req = new Request(Passward, bBroadcast, 'SetSender_AuthorizePassward');
    req.destination = addr;
    req.address = AddressMapping.Sender_AuthorizePasswardAddr;
    return req;
}
Session.prototype.SetSender_AuthorizePassward = async function SetSender_AuthorizePassward(addr, bBroadcast, Passward) {
    const req = createSetSender_AuthorizePassward(addr, bBroadcast, Passward);
    await this.connection.send(req);
};
Session.prototype.trySetSender_AuthorizePassward = async function trySetSender_AuthorizePassward(addr, Passward) {
    const req = createSetSender_AuthorizePassward(addr, false, Passward);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_AuthorizePassward.js.map