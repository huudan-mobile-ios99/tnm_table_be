import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_DistributePortSeting(addr, bBroadcast, dataValue) {
    if (dataValue.length !== AddressMapping.DistributePortSetingAddrOccupancy)
        throw new TypeError(`Invalid buffer size: ${dataValue.length}`);
    const req = new Request(dataValue, bBroadcast, 'SetSender_DistributePortSeting');
    req.destination = addr;
    req.address = AddressMapping.DistributePortSetingAddr;
    return req;
}
Session.prototype.SetSender_DistributePortSeting = async function SetSender_DistributePortSeting(addr, bBroadcast, dataValue) {
    const req = createSetSender_DistributePortSeting(addr, bBroadcast, dataValue);
    await this.connection.send(req);
};
Session.prototype.trySetSender_DistributePortSeting =
    async function trySetSender_DistributePortSeting(addr, dataValue) {
        const req = createSetSender_DistributePortSeting(addr, false, dataValue);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetSender_DistributePortSeting.js.map