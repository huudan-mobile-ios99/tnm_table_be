import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetNewOERamEnable(addr, portAddr, scanBoardAddr, bBroadcast, newOERamEnable) {
    const $data = encodeUIntLE(newOERamEnable, AddressMapping.NewOERamEnableOccupancy);
    const req = new Request($data, bBroadcast, 'SetNewOERamEnable');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.NewOERamEnableAddr;
    return req;
}
Session.prototype.SetNewOERamEnable = async function SetNewOERamEnable(addr, portAddr, scanBoardAddr, bBroadcast, newOERamEnable) {
    const req = createSetNewOERamEnable(addr, portAddr, scanBoardAddr, bBroadcast, newOERamEnable);
    await this.connection.send(req);
};
Session.prototype.trySetNewOERamEnable = async function trySetNewOERamEnable(addr, portAddr, scanBoardAddr, newOERamEnable) {
    const req = createSetNewOERamEnable(addr, portAddr, scanBoardAddr, false, newOERamEnable);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetNewOERamEnable.js.map