import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetColorAdjustMatrixAndDataNew(addr, portAddr, scanBoardAddr, bBroadcast, byteData) {
    const req = new Request([byteData], bBroadcast, 'SetColorAdjustMatrixAndDataNew');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ColorAdjustMatrixAndEnableAddr;
    return req;
}
Session.prototype.SetColorAdjustMatrixAndDataNew = async function SetColorAdjustMatrixAndDataNew(addr, portAddr, scanBoardAddr, bBroadcast, byteData) {
    const req = createSetColorAdjustMatrixAndDataNew(addr, portAddr, scanBoardAddr, bBroadcast, byteData);
    await this.connection.send(req);
};
Session.prototype.trySetColorAdjustMatrixAndDataNew =
    async function trySetColorAdjustMatrixAndDataNew(addr, portAddr, scanBoardAddr, byteData) {
        const req = createSetColorAdjustMatrixAndDataNew(addr, portAddr, scanBoardAddr, false, byteData);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetColorAdjustMatrixAndDataNew.js.map