import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_OpticalWorkMode(addr, bBroadcast, opticalWorkMode) {
    const $data = encodeUIntLE(opticalWorkMode, AddressMapping.OpticalWorkModeOccupancy);
    const req = new Request($data, bBroadcast, 'SetSender_OpticalWorkMode');
    req.destination = addr;
    req.address = AddressMapping.OpticalWorkModeAddr;
    return req;
}
Session.prototype.SetSender_OpticalWorkMode = async function SetSender_OpticalWorkMode(addr, bBroadcast, opticalWorkMode) {
    const req = createSetSender_OpticalWorkMode(addr, bBroadcast, opticalWorkMode);
    await this.connection.send(req);
};
Session.prototype.trySetSender_OpticalWorkMode = async function trySetSender_OpticalWorkMode(addr, opticalWorkMode) {
    const req = createSetSender_OpticalWorkMode(addr, false, opticalWorkMode);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_OpticalWorkMode.js.map