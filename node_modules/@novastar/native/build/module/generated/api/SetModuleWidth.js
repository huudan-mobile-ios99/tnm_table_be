import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetModuleWidth(addr, portAddr, scanBoardAddr, bBroadcast, moduleWidth) {
    const $data = encodeUIntLE(moduleWidth, AddressMapping.ModuleWidthOccupancy);
    const req = new Request($data, bBroadcast, 'SetModuleWidth');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ModuleWidthAddr;
    return req;
}
Session.prototype.SetModuleWidth = async function SetModuleWidth(addr, portAddr, scanBoardAddr, bBroadcast, moduleWidth) {
    const req = createSetModuleWidth(addr, portAddr, scanBoardAddr, bBroadcast, moduleWidth);
    await this.connection.send(req);
};
Session.prototype.trySetModuleWidth = async function trySetModuleWidth(addr, portAddr, scanBoardAddr, moduleWidth) {
    const req = createSetModuleWidth(addr, portAddr, scanBoardAddr, false, moduleWidth);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetModuleWidth.js.map