import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadScannerIrCabientCfg(addr, portAddr, scanBoardAddr) {
    const req = new Request(AddressMapping.ScannerIrCanbinetCfgOccupancy, 'ReadScannerIrCabientCfg');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScannerIrCanbinetCfgAddr;
    return req;
}
Session.prototype.ReadScannerIrCabientCfg = async function ReadScannerIrCabientCfg(addr, portAddr, scanBoardAddr) {
    const req = createReadScannerIrCabientCfg(addr, portAddr, scanBoardAddr);
    return (await this.connection.send(req)).data;
};
Session.prototype.tryReadScannerIrCabientCfg = async function tryReadScannerIrCabientCfg(addr, portAddr, scanBoardAddr) {
    const req = createReadScannerIrCabientCfg(addr, portAddr, scanBoardAddr);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadScannerIrCabientCfg.js.map