import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScannerLowDelayEnable(addr, portAddr, scanBoardAddr, bBroadcast, lowDelayEnable) {
    const req = new Request(lowDelayEnable ? [85] : [0], bBroadcast, 'SetScannerLowDelayEnable');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScannerLowDelayEnableAddr;
    return req;
}
Session.prototype.SetScannerLowDelayEnable = async function SetScannerLowDelayEnable(addr, portAddr, scanBoardAddr, bBroadcast, lowDelayEnable) {
    const req = createSetScannerLowDelayEnable(addr, portAddr, scanBoardAddr, bBroadcast, lowDelayEnable);
    await this.connection.send(req);
};
Session.prototype.trySetScannerLowDelayEnable = async function trySetScannerLowDelayEnable(addr, portAddr, scanBoardAddr, lowDelayEnable) {
    const req = createSetScannerLowDelayEnable(addr, portAddr, scanBoardAddr, false, lowDelayEnable);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScannerLowDelayEnable.js.map