import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createFuncCard_SetRebootBootFpgaProgram(addr, bBroadcast, funcCardModle) {
    const $data = encodeUIntLE(funcCardModle, AddressMapping.FuncCard_RebootBootFpgaProgramOccupancy);
    const req = new Request($data, bBroadcast, 'FuncCard_SetRebootBootFpgaProgram');
    req.destination = addr;
    req.address = AddressMapping.FuncCard_RebootBootFpgaProgramAddr;
    return req;
}
Session.prototype.FuncCard_SetRebootBootFpgaProgram =
    async function FuncCard_SetRebootBootFpgaProgram(addr, bBroadcast, funcCardModle) {
        const req = createFuncCard_SetRebootBootFpgaProgram(addr, bBroadcast, funcCardModle);
        await this.connection.send(req);
    };
Session.prototype.tryFuncCard_SetRebootBootFpgaProgram =
    async function tryFuncCard_SetRebootBootFpgaProgram(addr, funcCardModle) {
        const req = createFuncCard_SetRebootBootFpgaProgram(addr, false, funcCardModle);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=FuncCard_SetRebootBootFpgaProgram.js.map