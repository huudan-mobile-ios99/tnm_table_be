import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createWriteMappingFrontToScaner(addr, portAddr, scanBoardAddr, bBroadcast, data, dataLength) {
    const req = new Request(data, bBroadcast, 'WriteMappingFrontToScaner');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.WriteScannerMappingFrontAddr;
    return req;
}
Session.prototype.WriteMappingFrontToScaner = async function WriteMappingFrontToScaner(addr, portAddr, scanBoardAddr, bBroadcast, data, dataLength) {
    const req = createWriteMappingFrontToScaner(addr, portAddr, scanBoardAddr, bBroadcast, data, dataLength);
    await this.connection.send(req);
};
Session.prototype.tryWriteMappingFrontToScaner = async function tryWriteMappingFrontToScaner(addr, portAddr, scanBoardAddr, data, dataLength) {
    const req = createWriteMappingFrontToScaner(addr, portAddr, scanBoardAddr, false, data, dataLength);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=WriteMappingFrontToScaner.js.map