import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetLowDelayMode(addr, bBroadcast, lowDelayMode) {
    const $data = encodeUIntLE(lowDelayMode, AddressMapping.LoadModeOccupancy);
    const req = new Request($data, bBroadcast, 'SetLowDelayMode');
    req.destination = addr;
    req.address = AddressMapping.LowDelayAddr;
    return req;
}
Session.prototype.SetLowDelayMode = async function SetLowDelayMode(addr, bBroadcast, lowDelayMode) {
    const req = createSetLowDelayMode(addr, bBroadcast, lowDelayMode);
    await this.connection.send(req);
};
Session.prototype.trySetLowDelayMode = async function trySetLowDelayMode(addr, lowDelayMode) {
    const req = createSetLowDelayMode(addr, false, lowDelayMode);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetLowDelayMode.js.map