import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetLogicShiftUnitNumPerSubField(addr, portAddr, scanBoardAddr, bBroadcast, ShiftUnitNum) {
    const $data = encodeUIntLE(ShiftUnitNum, AddressMapping.LogicShiftUnitNumPerSubFieldOccupancy);
    const req = new Request($data, bBroadcast, 'SetLogicShiftUnitNumPerSubField');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.LogicShiftUnitNumPerSubFieldAddr;
    return req;
}
Session.prototype.SetLogicShiftUnitNumPerSubField = async function SetLogicShiftUnitNumPerSubField(addr, portAddr, scanBoardAddr, bBroadcast, ShiftUnitNum) {
    const req = createSetLogicShiftUnitNumPerSubField(addr, portAddr, scanBoardAddr, bBroadcast, ShiftUnitNum);
    await this.connection.send(req);
};
Session.prototype.trySetLogicShiftUnitNumPerSubField =
    async function trySetLogicShiftUnitNumPerSubField(addr, portAddr, scanBoardAddr, ShiftUnitNum) {
        const req = createSetLogicShiftUnitNumPerSubField(addr, portAddr, scanBoardAddr, false, ShiftUnitNum);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetLogicShiftUnitNumPerSubField.js.map