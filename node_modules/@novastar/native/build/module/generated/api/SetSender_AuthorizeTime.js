import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_AuthorizeTime(addr, bBroadcast, authorizeTimeBytes) {
    if (authorizeTimeBytes.length !== AddressMapping.Sender_AuthorizeTimeOccupancy)
        throw new TypeError(`Invalid buffer size: ${authorizeTimeBytes.length}`);
    const req = new Request(authorizeTimeBytes, bBroadcast, 'SetSender_AuthorizeTime');
    req.destination = addr;
    req.address = AddressMapping.Sender_AuthorizeTimeAddr;
    return req;
}
Session.prototype.SetSender_AuthorizeTime = async function SetSender_AuthorizeTime(addr, bBroadcast, authorizeTimeBytes) {
    const req = createSetSender_AuthorizeTime(addr, bBroadcast, authorizeTimeBytes);
    await this.connection.send(req);
};
Session.prototype.trySetSender_AuthorizeTime = async function trySetSender_AuthorizeTime(addr, authorizeTimeBytes) {
    const req = createSetSender_AuthorizeTime(addr, false, authorizeTimeBytes);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_AuthorizeTime.js.map