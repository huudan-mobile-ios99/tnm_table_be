import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadSender_IsSupportBackUpTestMode(addr) {
    const req = new Request(AddressMapping.IsSupportBackUpTestModeOccupancy, 'ReadSender_IsSupportBackUpTestMode');
    req.destination = addr;
    req.address = AddressMapping.IsSupportBackUpTestModeAddr;
    return req;
}
Session.prototype.ReadSender_IsSupportBackUpTestMode =
    async function ReadSender_IsSupportBackUpTestMode(addr) {
        const req = createReadSender_IsSupportBackUpTestMode(addr);
        return decodeUIntLE(await this.connection.send(req));
    };
Session.prototype.tryReadSender_IsSupportBackUpTestMode =
    async function tryReadSender_IsSupportBackUpTestMode(addr) {
        const req = createReadSender_IsSupportBackUpTestMode(addr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=ReadSender_IsSupportBackUpTestMode.js.map