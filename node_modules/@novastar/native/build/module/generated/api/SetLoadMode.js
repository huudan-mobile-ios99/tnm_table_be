import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetLoadMode(addr, bBroadcast, loadMode) {
    const $data = encodeUIntLE(loadMode, AddressMapping.LoadModeOccupancy);
    const req = new Request($data, bBroadcast, 'SetLoadMode');
    req.destination = addr;
    req.address = AddressMapping.LoadModeAddr;
    return req;
}
Session.prototype.SetLoadMode = async function SetLoadMode(addr, bBroadcast, loadMode) {
    const req = createSetLoadMode(addr, bBroadcast, loadMode);
    await this.connection.send(req);
};
Session.prototype.trySetLoadMode = async function trySetLoadMode(addr, loadMode) {
    const req = createSetLoadMode(addr, false, loadMode);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetLoadMode.js.map