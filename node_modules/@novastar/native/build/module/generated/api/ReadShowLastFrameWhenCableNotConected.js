import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadShowLastFrameWhenCableNotConected(addr, portAddr, scanBoardAddr) {
    const req = new Request(AddressMapping.ShowLastFrameWhenCableNotConectedOccupancy, 'ReadShowLastFrameWhenCableNotConected');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ShowLastFrameWhenCableNotConectedAddr;
    return req;
}
Session.prototype.ReadShowLastFrameWhenCableNotConected =
    async function ReadShowLastFrameWhenCableNotConected(addr, portAddr, scanBoardAddr) {
        const req = createReadShowLastFrameWhenCableNotConected(addr, portAddr, scanBoardAddr);
        return decodeUIntLE(await this.connection.send(req));
    };
Session.prototype.tryReadShowLastFrameWhenCableNotConected =
    async function tryReadShowLastFrameWhenCableNotConected(addr, portAddr, scanBoardAddr) {
        const req = createReadShowLastFrameWhenCableNotConected(addr, portAddr, scanBoardAddr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=ReadShowLastFrameWhenCableNotConected.js.map