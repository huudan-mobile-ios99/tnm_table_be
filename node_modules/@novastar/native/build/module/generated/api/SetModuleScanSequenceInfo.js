import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetModuleScanSequenceInfo(addr, portAddr, scanBoardAddr, bBroadcast, scanSequenceInfo) {
    const req = new Request(scanSequenceInfo, bBroadcast, 'SetModuleScanSequenceInfo');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Module_ScanSequenceInfoAddr;
    return req;
}
Session.prototype.SetModuleScanSequenceInfo = async function SetModuleScanSequenceInfo(addr, portAddr, scanBoardAddr, bBroadcast, scanSequenceInfo) {
    const req = createSetModuleScanSequenceInfo(addr, portAddr, scanBoardAddr, bBroadcast, scanSequenceInfo);
    await this.connection.send(req);
};
Session.prototype.trySetModuleScanSequenceInfo = async function trySetModuleScanSequenceInfo(addr, portAddr, scanBoardAddr, scanSequenceInfo) {
    const req = createSetModuleScanSequenceInfo(addr, portAddr, scanBoardAddr, false, scanSequenceInfo);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetModuleScanSequenceInfo.js.map