import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetIrregularCabinetDataGroupOutputInfo(addr, portAddr, scanBoardAddr, bBroadcast, data) {
    const req = new Request(data, bBroadcast, 'SetIrregularCabinetDataGroupOutputInfo');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.IrRegular_DataGroupOutputInfoAddr;
    return req;
}
Session.prototype.SetIrregularCabinetDataGroupOutputInfo =
    async function SetIrregularCabinetDataGroupOutputInfo(addr, portAddr, scanBoardAddr, bBroadcast, data) {
        const req = createSetIrregularCabinetDataGroupOutputInfo(addr, portAddr, scanBoardAddr, bBroadcast, data);
        await this.connection.send(req);
    };
Session.prototype.trySetIrregularCabinetDataGroupOutputInfo =
    async function trySetIrregularCabinetDataGroupOutputInfo(addr, portAddr, scanBoardAddr, data) {
        const req = createSetIrregularCabinetDataGroupOutputInfo(addr, portAddr, scanBoardAddr, false, data);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetIrregularCabinetDataGroupOutputInfo.js.map