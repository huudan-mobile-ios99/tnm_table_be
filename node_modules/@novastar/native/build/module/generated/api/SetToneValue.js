import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetToneValue(addr, bBroadcast, dht) {
    const $data = encodeUIntLE(dht, AddressMapping.SenderToneResultOccupancy);
    const req = new Request($data, bBroadcast, 'SetToneValue');
    req.destination = addr;
    req.address = AddressMapping.SenderToneResultddr;
    return req;
}
Session.prototype.SetToneValue = async function SetToneValue(addr, bBroadcast, dht) {
    const req = createSetToneValue(addr, bBroadcast, dht);
    await this.connection.send(req);
};
Session.prototype.trySetToneValue = async function trySetToneValue(addr, dht) {
    const req = createSetToneValue(addr, false, dht);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetToneValue.js.map