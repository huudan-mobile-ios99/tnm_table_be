import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetTotalUnitNumPerSubField(addr, portAddr, scanBoardAddr, bBroadcast, totalUnitNumPerSubField) {
    const $data = encodeUIntLE(totalUnitNumPerSubField, AddressMapping.TotalUnitNumPerSubFieldOccupancy);
    const req = new Request($data, bBroadcast, 'SetTotalUnitNumPerSubField');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.TotalUnitNumPerSubFieldAddr;
    return req;
}
Session.prototype.SetTotalUnitNumPerSubField = async function SetTotalUnitNumPerSubField(addr, portAddr, scanBoardAddr, bBroadcast, totalUnitNumPerSubField) {
    const req = createSetTotalUnitNumPerSubField(addr, portAddr, scanBoardAddr, bBroadcast, totalUnitNumPerSubField);
    await this.connection.send(req);
};
Session.prototype.trySetTotalUnitNumPerSubField = async function trySetTotalUnitNumPerSubField(addr, portAddr, scanBoardAddr, totalUnitNumPerSubField) {
    const req = createSetTotalUnitNumPerSubField(addr, portAddr, scanBoardAddr, false, totalUnitNumPerSubField);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetTotalUnitNumPerSubField.js.map