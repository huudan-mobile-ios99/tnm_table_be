import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_McuProgramLength(addr, portAddr, scanBoardAddr, bBroadcast, sender_McuProgramLength) {
    const $data = encodeUIntLE(sender_McuProgramLength, AddressMapping.Sender_McuProgramLengthOccupancy);
    const req = new Request($data, bBroadcast, 'SetSender_McuProgramLength');
    req.destination = addr;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Sender_McuProgramLengthAddr;
    return req;
}
Session.prototype.SetSender_McuProgramLength = async function SetSender_McuProgramLength(addr, portAddr, scanBoardAddr, bBroadcast, sender_McuProgramLength) {
    const req = createSetSender_McuProgramLength(addr, portAddr, scanBoardAddr, bBroadcast, sender_McuProgramLength);
    await this.connection.send(req);
};
Session.prototype.trySetSender_McuProgramLength = async function trySetSender_McuProgramLength(addr, portAddr, scanBoardAddr, sender_McuProgramLength) {
    const req = createSetSender_McuProgramLength(addr, portAddr, scanBoardAddr, false, sender_McuProgramLength);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_McuProgramLength.js.map