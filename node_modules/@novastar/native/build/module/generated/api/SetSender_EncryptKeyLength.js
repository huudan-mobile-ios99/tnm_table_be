import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_EncryptKeyLength(addr, bBroadcast, keyLength) {
    const $data = encodeUIntLE(keyLength, AddressMapping.Sender_EncryptKeyLengthOccupancy);
    const req = new Request($data, bBroadcast, 'SetSender_EncryptKeyLength');
    req.destination = addr;
    req.address = AddressMapping.Sender_EncryptKeyLengthAddr;
    return req;
}
Session.prototype.SetSender_EncryptKeyLength = async function SetSender_EncryptKeyLength(addr, bBroadcast, keyLength) {
    const req = createSetSender_EncryptKeyLength(addr, bBroadcast, keyLength);
    await this.connection.send(req);
};
Session.prototype.trySetSender_EncryptKeyLength = async function trySetSender_EncryptKeyLength(addr, keyLength) {
    const req = createSetSender_EncryptKeyLength(addr, false, keyLength);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_EncryptKeyLength.js.map