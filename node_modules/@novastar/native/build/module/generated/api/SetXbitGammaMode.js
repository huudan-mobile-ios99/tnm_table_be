import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetXbitGammaMode(addr, portAddr, scanBoardAddr, bBroadcast, data) {
    const req = new Request([data], bBroadcast, 'SetXbitGammaMode');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.XbitGammaModeAddr;
    return req;
}
Session.prototype.SetXbitGammaMode = async function SetXbitGammaMode(addr, portAddr, scanBoardAddr, bBroadcast, data) {
    const req = createSetXbitGammaMode(addr, portAddr, scanBoardAddr, bBroadcast, data);
    await this.connection.send(req);
};
Session.prototype.trySetXbitGammaMode = async function trySetXbitGammaMode(addr, portAddr, scanBoardAddr, data) {
    const req = createSetXbitGammaMode(addr, portAddr, scanBoardAddr, false, data);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetXbitGammaMode.js.map