import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetLowGrayCompensation(addr, portAddr, scanBoardAddr, bBroadcast, lowGrayCpt) {
    const $data = encodeUIntLE(lowGrayCpt, AddressMapping.LowGrayCompensationOccupancy);
    const req = new Request($data, bBroadcast, 'SetLowGrayCompensation');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.LowGrayCompensationAddr;
    return req;
}
Session.prototype.SetLowGrayCompensation = async function SetLowGrayCompensation(addr, portAddr, scanBoardAddr, bBroadcast, lowGrayCpt) {
    const req = createSetLowGrayCompensation(addr, portAddr, scanBoardAddr, bBroadcast, lowGrayCpt);
    await this.connection.send(req);
};
Session.prototype.trySetLowGrayCompensation = async function trySetLowGrayCompensation(addr, portAddr, scanBoardAddr, lowGrayCpt) {
    const req = createSetLowGrayCompensation(addr, portAddr, scanBoardAddr, false, lowGrayCpt);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetLowGrayCompensation.js.map