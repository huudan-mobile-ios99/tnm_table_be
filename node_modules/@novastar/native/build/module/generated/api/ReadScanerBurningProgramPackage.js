import { Request, Session } from '@novastar/codec';
export default function createReadScanerBurningProgramPackage(addr, portAddr, scanBoardAddr, readLength) {
    const req = new Request(readLength, 'ReadScanerBurningProgramPackage');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = 0;
    return req;
}
Session.prototype.ReadScanerBurningProgramPackage = async function ReadScanerBurningProgramPackage(addr, portAddr, scanBoardAddr, readLength) {
    const req = createReadScanerBurningProgramPackage(addr, portAddr, scanBoardAddr, readLength);
    return (await this.connection.send(req)).data;
};
Session.prototype.tryReadScanerBurningProgramPackage =
    async function tryReadScanerBurningProgramPackage(addr, portAddr, scanBoardAddr, readLength) {
        const req = createReadScanerBurningProgramPackage(addr, portAddr, scanBoardAddr, readLength);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=ReadScanerBurningProgramPackage.js.map