import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetRGBBrightness(addr, portAddr, scanBoardAddr, bBroadcast, redBrightness, greenBrightness, blueBrightness, vRedBrightness) {
    const req = new Request([redBrightness, greenBrightness, blueBrightness, vRedBrightness], bBroadcast, 'SetRGBBrightness');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.RGBBrightnessAddr;
    return req;
}
Session.prototype.SetRGBBrightness = async function SetRGBBrightness(addr, portAddr, scanBoardAddr, bBroadcast, redBrightness, greenBrightness, blueBrightness, vRedBrightness) {
    const req = createSetRGBBrightness(addr, portAddr, scanBoardAddr, bBroadcast, redBrightness, greenBrightness, blueBrightness, vRedBrightness);
    await this.connection.send(req);
};
Session.prototype.trySetRGBBrightness = async function trySetRGBBrightness(addr, portAddr, scanBoardAddr, redBrightness, greenBrightness, blueBrightness, vRedBrightness) {
    const req = createSetRGBBrightness(addr, portAddr, scanBoardAddr, false, redBrightness, greenBrightness, blueBrightness, vRedBrightness);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetRGBBrightness.js.map