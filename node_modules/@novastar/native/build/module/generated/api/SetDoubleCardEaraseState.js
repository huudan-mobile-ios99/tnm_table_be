import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetDoubleCardEaraseState(addr, portAddr, scanBoardAddr, bBroadcast, EaraseTag) {
    const $data = encodeUIntLE(EaraseTag, AddressMapping.DoubleModelCardSpaceNandFlashEaraseOccupancy);
    const req = new Request($data, bBroadcast, 'SetDoubleCardEaraseState');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.DoubleModelCardSpaceNandFlashEarase;
    return req;
}
Session.prototype.SetDoubleCardEaraseState = async function SetDoubleCardEaraseState(addr, portAddr, scanBoardAddr, bBroadcast, EaraseTag) {
    const req = createSetDoubleCardEaraseState(addr, portAddr, scanBoardAddr, bBroadcast, EaraseTag);
    await this.connection.send(req);
};
Session.prototype.trySetDoubleCardEaraseState = async function trySetDoubleCardEaraseState(addr, portAddr, scanBoardAddr, EaraseTag) {
    const req = createSetDoubleCardEaraseState(addr, portAddr, scanBoardAddr, false, EaraseTag);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetDoubleCardEaraseState.js.map