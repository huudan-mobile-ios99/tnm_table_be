import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetBrightDarkLineCoefsErase(addr, portAddr, scanBoardAddr, bBroadcast, coefficientErase) {
    const $data = encodeUIntLE(coefficientErase, AddressMapping.BrightDarkLineCoefsInSpiFlashEraseOccupancy);
    const req = new Request($data, bBroadcast, 'SetBrightDarkLineCoefsErase');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.BrightDarkLineCoefsInSpiFlashEraseAddr;
    return req;
}
Session.prototype.SetBrightDarkLineCoefsErase = async function SetBrightDarkLineCoefsErase(addr, portAddr, scanBoardAddr, bBroadcast, coefficientErase) {
    const req = createSetBrightDarkLineCoefsErase(addr, portAddr, scanBoardAddr, bBroadcast, coefficientErase);
    await this.connection.send(req);
};
Session.prototype.trySetBrightDarkLineCoefsErase = async function trySetBrightDarkLineCoefsErase(addr, portAddr, scanBoardAddr, coefficientErase) {
    const req = createSetBrightDarkLineCoefsErase(addr, portAddr, scanBoardAddr, false, coefficientErase);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetBrightDarkLineCoefsErase.js.map