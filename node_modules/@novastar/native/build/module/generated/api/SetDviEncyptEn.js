import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetDviEncyptEn(addr, portAddr, scanBoardAddr, bBroadcast, isDviEncypt) {
    const req = new Request(isDviEncypt ? [5] : [255], bBroadcast, 'SetDviEncyptEn');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.DviEncyptEnAddr;
    return req;
}
Session.prototype.SetDviEncyptEn = async function SetDviEncyptEn(addr, portAddr, scanBoardAddr, bBroadcast, isDviEncypt) {
    const req = createSetDviEncyptEn(addr, portAddr, scanBoardAddr, bBroadcast, isDviEncypt);
    await this.connection.send(req);
};
Session.prototype.trySetDviEncyptEn = async function trySetDviEncyptEn(addr, portAddr, scanBoardAddr, isDviEncypt) {
    const req = createSetDviEncyptEn(addr, portAddr, scanBoardAddr, false, isDviEncypt);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetDviEncyptEn.js.map