import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_ComplexCfgScreenFlagSpace(addr, bBroadcast, IsComplexCfgScreen) {
    const req = new Request(IsComplexCfgScreen ? [1] : [0], bBroadcast, 'SetSender_ComplexCfgScreenFlagSpace');
    req.destination = addr;
    req.address = AddressMapping.ComplexCfgScreenFlagAddr;
    return req;
}
Session.prototype.SetSender_ComplexCfgScreenFlagSpace =
    async function SetSender_ComplexCfgScreenFlagSpace(addr, bBroadcast, IsComplexCfgScreen) {
        const req = createSetSender_ComplexCfgScreenFlagSpace(addr, bBroadcast, IsComplexCfgScreen);
        await this.connection.send(req);
    };
Session.prototype.trySetSender_ComplexCfgScreenFlagSpace =
    async function trySetSender_ComplexCfgScreenFlagSpace(addr, IsComplexCfgScreen) {
        const req = createSetSender_ComplexCfgScreenFlagSpace(addr, false, IsComplexCfgScreen);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetSender_ComplexCfgScreenFlagSpace.js.map