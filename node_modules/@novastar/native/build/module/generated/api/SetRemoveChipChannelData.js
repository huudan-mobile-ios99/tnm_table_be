import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetRemoveChipChannelData(addr, portAddr, scanBoardAddr, bBroadcast, data) {
    const req = new Request(data, bBroadcast, 'SetRemoveChipChannelData');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Module_RemoveChipChannelAddr;
    return req;
}
Session.prototype.SetRemoveChipChannelData = async function SetRemoveChipChannelData(addr, portAddr, scanBoardAddr, bBroadcast, data) {
    const req = createSetRemoveChipChannelData(addr, portAddr, scanBoardAddr, bBroadcast, data);
    await this.connection.send(req);
};
Session.prototype.trySetRemoveChipChannelData = async function trySetRemoveChipChannelData(addr, portAddr, scanBoardAddr, data) {
    const req = createSetRemoveChipChannelData(addr, portAddr, scanBoardAddr, false, data);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetRemoveChipChannelData.js.map