import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadIrregularCabinetRealGroup(addr, portAddr, scanBoardAddr, dataLength) {
    const req = new Request(dataLength, 'ReadIrregularCabinetRealGroup');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.IrRegular_RealPhysicalGroupsAddr;
    return req;
}
Session.prototype.ReadIrregularCabinetRealGroup = async function ReadIrregularCabinetRealGroup(addr, portAddr, scanBoardAddr, dataLength) {
    const req = createReadIrregularCabinetRealGroup(addr, portAddr, scanBoardAddr, dataLength);
    return (await this.connection.send(req)).data;
};
Session.prototype.tryReadIrregularCabinetRealGroup =
    async function tryReadIrregularCabinetRealGroup(addr, portAddr, scanBoardAddr, dataLength) {
        const req = createReadIrregularCabinetRealGroup(addr, portAddr, scanBoardAddr, dataLength);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=ReadIrregularCabinetRealGroup.js.map