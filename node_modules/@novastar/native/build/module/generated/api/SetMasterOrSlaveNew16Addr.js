import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetMasterOrSlaveNew16Addr(addr, bBroadcast, masterOrSlaveBytes) {
    const req = new Request(masterOrSlaveBytes, bBroadcast, 'SetMasterOrSlaveNew16Addr');
    req.destination = addr;
    req.address = AddressMapping.MasterOrSlaveNew16Addr;
    return req;
}
Session.prototype.SetMasterOrSlaveNew16Addr = async function SetMasterOrSlaveNew16Addr(addr, bBroadcast, masterOrSlaveBytes) {
    const req = createSetMasterOrSlaveNew16Addr(addr, bBroadcast, masterOrSlaveBytes);
    await this.connection.send(req);
};
Session.prototype.trySetMasterOrSlaveNew16Addr = async function trySetMasterOrSlaveNew16Addr(addr, masterOrSlaveBytes) {
    const req = createSetMasterOrSlaveNew16Addr(addr, false, masterOrSlaveBytes);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetMasterOrSlaveNew16Addr.js.map