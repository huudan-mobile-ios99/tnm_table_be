import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSerialDotsNumPerColor(addr, portAddr, scanBoardAddr, bBroadcast, serialDotsNumPerColor) {
    const $data = encodeUIntLE(serialDotsNumPerColor, AddressMapping.SerialDotsNumPerColorOccupancy);
    const req = new Request($data, bBroadcast, 'SetSerialDotsNumPerColor');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.SerialDotsNumPerColorAddr;
    return req;
}
Session.prototype.SetSerialDotsNumPerColor = async function SetSerialDotsNumPerColor(addr, portAddr, scanBoardAddr, bBroadcast, serialDotsNumPerColor) {
    const req = createSetSerialDotsNumPerColor(addr, portAddr, scanBoardAddr, bBroadcast, serialDotsNumPerColor);
    await this.connection.send(req);
};
Session.prototype.trySetSerialDotsNumPerColor = async function trySetSerialDotsNumPerColor(addr, portAddr, scanBoardAddr, serialDotsNumPerColor) {
    const req = createSetSerialDotsNumPerColor(addr, portAddr, scanBoardAddr, false, serialDotsNumPerColor);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSerialDotsNumPerColor.js.map