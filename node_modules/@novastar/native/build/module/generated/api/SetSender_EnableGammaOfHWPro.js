import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_EnableGammaOfHWPro(addr, bBroadcast, isEnable) {
    const req = new Request([isEnable ? 91 : 255], bBroadcast, 'SetSender_EnableGammaOfHWPro');
    req.destination = addr;
    req.address = AddressMapping.Sender_EnableGammaAddr;
    return req;
}
Session.prototype.SetSender_EnableGammaOfHWPro = async function SetSender_EnableGammaOfHWPro(addr, bBroadcast, isEnable) {
    const req = createSetSender_EnableGammaOfHWPro(addr, bBroadcast, isEnable);
    await this.connection.send(req);
};
Session.prototype.trySetSender_EnableGammaOfHWPro = async function trySetSender_EnableGammaOfHWPro(addr, isEnable) {
    const req = createSetSender_EnableGammaOfHWPro(addr, false, isEnable);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_EnableGammaOfHWPro.js.map