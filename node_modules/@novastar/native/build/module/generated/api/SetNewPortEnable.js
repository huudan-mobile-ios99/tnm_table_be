import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetNewPortEnable(addr, bBroadcast, portEnable, index) {
    const $data = encodeUIntLE(portEnable, AddressMapping.PortEnableOccupancy);
    const req = new Request($data, bBroadcast, 'SetNewPortEnable');
    req.destination = addr;
    req.address =
        AddressMapping.PortEnableNextAddr +
            AddressMapping.PortOccupancy * (index - AddressMapping.NewPortOccupancy);
    return req;
}
Session.prototype.SetNewPortEnable = async function SetNewPortEnable(addr, bBroadcast, portEnable, index) {
    const req = createSetNewPortEnable(addr, bBroadcast, portEnable, index);
    await this.connection.send(req);
};
Session.prototype.trySetNewPortEnable = async function trySetNewPortEnable(addr, portEnable, index) {
    const req = createSetNewPortEnable(addr, false, portEnable, index);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetNewPortEnable.js.map