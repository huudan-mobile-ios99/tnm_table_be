import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadScanner_FPGAProgramEdition(addr, portAddr, scanBoardAddr) {
    const req = new Request(AddressMapping.Scanner_FPGAProgramEditionOccupancy, 'ReadScanner_FPGAProgramEdition');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Scanner_FPGAProgramEditionAddr;
    return req;
}
Session.prototype.ReadScanner_FPGAProgramEdition = async function ReadScanner_FPGAProgramEdition(addr, portAddr, scanBoardAddr) {
    const req = createReadScanner_FPGAProgramEdition(addr, portAddr, scanBoardAddr);
    return decodeUIntLE(await this.connection.send(req));
};
Session.prototype.tryReadScanner_FPGAProgramEdition =
    async function tryReadScanner_FPGAProgramEdition(addr, portAddr, scanBoardAddr) {
        const req = createReadScanner_FPGAProgramEdition(addr, portAddr, scanBoardAddr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=ReadScanner_FPGAProgramEdition.js.map