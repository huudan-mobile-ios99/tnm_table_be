import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createFuncCard_SetFuncCardFPGAVersion(addr, bBroadcast, fpgaVersion) {
    const $data = encodeUIntLE(fpgaVersion, AddressMapping.FuncCard_FPGAVersionOccupancy);
    const req = new Request($data, bBroadcast, 'FuncCard_SetFuncCardFPGAVersion');
    req.destination = addr;
    req.address = AddressMapping.FuncCard_FPGAVersionAddr;
    return req;
}
Session.prototype.FuncCard_SetFuncCardFPGAVersion = async function FuncCard_SetFuncCardFPGAVersion(addr, bBroadcast, fpgaVersion) {
    const req = createFuncCard_SetFuncCardFPGAVersion(addr, bBroadcast, fpgaVersion);
    await this.connection.send(req);
};
Session.prototype.tryFuncCard_SetFuncCardFPGAVersion =
    async function tryFuncCard_SetFuncCardFPGAVersion(addr, fpgaVersion) {
        const req = createFuncCard_SetFuncCardFPGAVersion(addr, false, fpgaVersion);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=FuncCard_SetFuncCardFPGAVersion.js.map