import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createDistribute_SetFuncCardFPGAVersion(addr, portAddr, distributeAddr, bBroadcast, fpgaVersion) {
    const $data = encodeUIntLE(fpgaVersion, AddressMapping.Distribute_FPGAVersionOccupancy);
    const req = new Request($data, bBroadcast, 'Distribute_SetFuncCardFPGAVersion');
    req.destination = addr;
    req.deviceType = 3;
    req.port = portAddr;
    req.rcvIndex = distributeAddr;
    req.address = AddressMapping.Distribute_FPGAVersionAddr;
    return req;
}
Session.prototype.Distribute_SetFuncCardFPGAVersion =
    async function Distribute_SetFuncCardFPGAVersion(addr, portAddr, distributeAddr, bBroadcast, fpgaVersion) {
        const req = createDistribute_SetFuncCardFPGAVersion(addr, portAddr, distributeAddr, bBroadcast, fpgaVersion);
        await this.connection.send(req);
    };
Session.prototype.tryDistribute_SetFuncCardFPGAVersion =
    async function tryDistribute_SetFuncCardFPGAVersion(addr, portAddr, distributeAddr, fpgaVersion) {
        const req = createDistribute_SetFuncCardFPGAVersion(addr, portAddr, distributeAddr, false, fpgaVersion);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=Distribute_SetFuncCardFPGAVersion.js.map