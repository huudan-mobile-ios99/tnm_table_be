import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createRestoreSenderConfig(addr, bBroadcast, writeData) {
    const req = new Request(writeData, bBroadcast, 'RestoreSenderConfig');
    req.destination = addr;
    req.address = AddressMapping.BackUpFileAddr;
    return req;
}
Session.prototype.RestoreSenderConfig = async function RestoreSenderConfig(addr, bBroadcast, writeData) {
    const req = createRestoreSenderConfig(addr, bBroadcast, writeData);
    await this.connection.send(req);
};
Session.prototype.tryRestoreSenderConfig = async function tryRestoreSenderConfig(addr, writeData) {
    const req = createRestoreSenderConfig(addr, false, writeData);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=RestoreSenderConfig.js.map