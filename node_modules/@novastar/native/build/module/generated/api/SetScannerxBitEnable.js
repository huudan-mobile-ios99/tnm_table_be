import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScannerxBitEnable(addr, portAddr, scanBoardAddr, bBroadcast, da) {
    const req = new Request([da], bBroadcast, 'SetScannerxBitEnable');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Scanner22bitEnableAddr;
    return req;
}
Session.prototype.SetScannerxBitEnable = async function SetScannerxBitEnable(addr, portAddr, scanBoardAddr, bBroadcast, da) {
    const req = createSetScannerxBitEnable(addr, portAddr, scanBoardAddr, bBroadcast, da);
    await this.connection.send(req);
};
Session.prototype.trySetScannerxBitEnable = async function trySetScannerxBitEnable(addr, portAddr, scanBoardAddr, da) {
    const req = createSetScannerxBitEnable(addr, portAddr, scanBoardAddr, false, da);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScannerxBitEnable.js.map