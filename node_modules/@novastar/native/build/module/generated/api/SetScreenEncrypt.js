import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScreenEncrypt(addr, portAddr, scanBoardAddr, bBroadcast, screenEncrypt) {
    const $data = encodeUIntLE(screenEncrypt, AddressMapping.ScreenEncryptOccupancy);
    const req = new Request($data, bBroadcast, 'SetScreenEncrypt');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScreenEncryptAddr;
    return req;
}
Session.prototype.SetScreenEncrypt = async function SetScreenEncrypt(addr, portAddr, scanBoardAddr, bBroadcast, screenEncrypt) {
    const req = createSetScreenEncrypt(addr, portAddr, scanBoardAddr, bBroadcast, screenEncrypt);
    await this.connection.send(req);
};
Session.prototype.trySetScreenEncrypt = async function trySetScreenEncrypt(addr, portAddr, scanBoardAddr, screenEncrypt) {
    const req = createSetScreenEncrypt(addr, portAddr, scanBoardAddr, false, screenEncrypt);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScreenEncrypt.js.map