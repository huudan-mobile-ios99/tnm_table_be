import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetDoorSwitchDetection(addr, bBroadcast, data) {
    const $data = encodeUIntLE(data, AddressMapping.IsDoorSwitchDetectionOccupancy);
    const req = new Request($data, bBroadcast, 'SetDoorSwitchDetection');
    req.destination = addr;
    req.address = AddressMapping.IsDoorSwitchDetectionAddr;
    return req;
}
Session.prototype.SetDoorSwitchDetection = async function SetDoorSwitchDetection(addr, bBroadcast, data) {
    const req = createSetDoorSwitchDetection(addr, bBroadcast, data);
    await this.connection.send(req);
};
Session.prototype.trySetDoorSwitchDetection = async function trySetDoorSwitchDetection(addr, data) {
    const req = createSetDoorSwitchDetection(addr, false, data);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetDoorSwitchDetection.js.map