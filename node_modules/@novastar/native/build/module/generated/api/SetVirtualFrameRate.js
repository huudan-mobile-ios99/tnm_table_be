import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetVirtualFrameRate(addr, bBroadcast, virtualFrameRate) {
    const $data = encodeUIntLE(virtualFrameRate, AddressMapping.VirtualFrameRateOccupancy);
    const req = new Request($data, bBroadcast, 'SetVirtualFrameRate');
    req.destination = addr;
    req.address = AddressMapping.VirtualFrameRateAddr;
    return req;
}
Session.prototype.SetVirtualFrameRate = async function SetVirtualFrameRate(addr, bBroadcast, virtualFrameRate) {
    const req = createSetVirtualFrameRate(addr, bBroadcast, virtualFrameRate);
    await this.connection.send(req);
};
Session.prototype.trySetVirtualFrameRate = async function trySetVirtualFrameRate(addr, virtualFrameRate) {
    const req = createSetVirtualFrameRate(addr, false, virtualFrameRate);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetVirtualFrameRate.js.map