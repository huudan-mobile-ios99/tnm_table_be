import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetVirtualEnable(addr, bBroadcast, virtualEnable) {
    const $data = encodeUIntLE(virtualEnable, AddressMapping.VirtualEnableOccupancy);
    const req = new Request($data, bBroadcast, 'SetVirtualEnable');
    req.destination = addr;
    req.address = AddressMapping.VirtualEnableAddr;
    return req;
}
Session.prototype.SetVirtualEnable = async function SetVirtualEnable(addr, bBroadcast, virtualEnable) {
    const req = createSetVirtualEnable(addr, bBroadcast, virtualEnable);
    await this.connection.send(req);
};
Session.prototype.trySetVirtualEnable = async function trySetVirtualEnable(addr, virtualEnable) {
    const req = createSetVirtualEnable(addr, false, virtualEnable);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetVirtualEnable.js.map