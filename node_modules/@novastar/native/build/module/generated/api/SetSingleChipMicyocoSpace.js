import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSingleChipMicyocoSpace(addr, portAddr, scanBoardAddr, bBroadcast, singleChipMicyocoSpace) {
    const $data = encodeUIntLE(singleChipMicyocoSpace, AddressMapping.ConnectRelayTemperatureOccupancy);
    const req = new Request($data, bBroadcast, 'SetSingleChipMicyocoSpace');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.SingleChipMicyocoSpaceAddr;
    return req;
}
Session.prototype.SetSingleChipMicyocoSpace = async function SetSingleChipMicyocoSpace(addr, portAddr, scanBoardAddr, bBroadcast, singleChipMicyocoSpace) {
    const req = createSetSingleChipMicyocoSpace(addr, portAddr, scanBoardAddr, bBroadcast, singleChipMicyocoSpace);
    await this.connection.send(req);
};
Session.prototype.trySetSingleChipMicyocoSpace = async function trySetSingleChipMicyocoSpace(addr, portAddr, scanBoardAddr, singleChipMicyocoSpace) {
    const req = createSetSingleChipMicyocoSpace(addr, portAddr, scanBoardAddr, false, singleChipMicyocoSpace);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSingleChipMicyocoSpace.js.map