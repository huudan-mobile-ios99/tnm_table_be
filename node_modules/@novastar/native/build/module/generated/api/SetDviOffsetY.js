import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetDviOffsetY(addr, bBroadcast, dviOffsetY, index) {
    const $data = encodeUIntLE(dviOffsetY, AddressMapping.DviOffsetYOccupancy);
    const req = new Request($data, bBroadcast, 'SetDviOffsetY');
    req.destination = addr;
    req.address = AddressMapping.DviOffsetYAddr + AddressMapping.DviOccupancy * index;
    return req;
}
Session.prototype.SetDviOffsetY = async function SetDviOffsetY(addr, bBroadcast, dviOffsetY, index) {
    const req = createSetDviOffsetY(addr, bBroadcast, dviOffsetY, index);
    await this.connection.send(req);
};
Session.prototype.trySetDviOffsetY = async function trySetDviOffsetY(addr, dviOffsetY, index) {
    const req = createSetDviOffsetY(addr, false, dviOffsetY, index);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetDviOffsetY.js.map