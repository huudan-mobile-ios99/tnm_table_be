import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetMaskOpreation(Sender, portAddr, scanBoardAddr, bBroadcast, data) {
    const req = new Request(data, bBroadcast, 'SetMaskOpreation');
    req.destination = Sender;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.MaskAddr;
    return req;
}
Session.prototype.SetMaskOpreation = async function SetMaskOpreation(Sender, portAddr, scanBoardAddr, bBroadcast, data) {
    const req = createSetMaskOpreation(Sender, portAddr, scanBoardAddr, bBroadcast, data);
    await this.connection.send(req);
};
Session.prototype.trySetMaskOpreation = async function trySetMaskOpreation(Sender, portAddr, scanBoardAddr, data) {
    const req = createSetMaskOpreation(Sender, portAddr, scanBoardAddr, false, data);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetMaskOpreation.js.map