import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadSender_EnableGainOfHWPro(addr) {
    const req = new Request(AddressMapping.Sender_EnableGainOccupancy, 'ReadSender_EnableGainOfHWPro');
    req.destination = addr;
    req.address = AddressMapping.Sender_EnableGainAddr;
    return req;
}
Session.prototype.ReadSender_EnableGainOfHWPro = async function ReadSender_EnableGainOfHWPro(addr) {
    const req = createReadSender_EnableGainOfHWPro(addr);
    return decodeUIntLE(await this.connection.send(req));
};
Session.prototype.tryReadSender_EnableGainOfHWPro = async function tryReadSender_EnableGainOfHWPro(addr) {
    const req = createReadSender_EnableGainOfHWPro(addr);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadSender_EnableGainOfHWPro.js.map