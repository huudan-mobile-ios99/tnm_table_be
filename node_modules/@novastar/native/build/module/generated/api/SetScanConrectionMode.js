import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScanConrectionMode(addr, portAddr, scanBoardAddr, bBroadcast, isOpen) {
    const req = new Request(isOpen ? [85] : [170], bBroadcast, 'SetScanConrectionMode');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScannerCorrectionModeAddr;
    return req;
}
Session.prototype.SetScanConrectionMode = async function SetScanConrectionMode(addr, portAddr, scanBoardAddr, bBroadcast, isOpen) {
    const req = createSetScanConrectionMode(addr, portAddr, scanBoardAddr, bBroadcast, isOpen);
    await this.connection.send(req);
};
Session.prototype.trySetScanConrectionMode = async function trySetScanConrectionMode(addr, portAddr, scanBoardAddr, isOpen) {
    const req = createSetScanConrectionMode(addr, portAddr, scanBoardAddr, false, isOpen);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScanConrectionMode.js.map