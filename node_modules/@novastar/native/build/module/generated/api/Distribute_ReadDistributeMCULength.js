import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createDistribute_ReadDistributeMCULength(addr, portAddr, distributeAddr) {
    const req = new Request(AddressMapping.Distribute_MCUProgramLengthOccupancy, 'Distribute_ReadDistributeMCULength');
    req.destination = addr;
    req.deviceType = 3;
    req.port = portAddr;
    req.rcvIndex = distributeAddr;
    req.address = AddressMapping.Distribute_MCUProgramLengthAddr;
    return req;
}
Session.prototype.Distribute_ReadDistributeMCULength =
    async function Distribute_ReadDistributeMCULength(addr, portAddr, distributeAddr) {
        const req = createDistribute_ReadDistributeMCULength(addr, portAddr, distributeAddr);
        return decodeUIntLE(await this.connection.send(req));
    };
Session.prototype.tryDistribute_ReadDistributeMCULength =
    async function tryDistribute_ReadDistributeMCULength(addr, portAddr, distributeAddr) {
        const req = createDistribute_ReadDistributeMCULength(addr, portAddr, distributeAddr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=Distribute_ReadDistributeMCULength.js.map