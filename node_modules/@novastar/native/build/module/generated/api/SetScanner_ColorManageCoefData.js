import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScanner_ColorManageCoefData(addr, portAddr, scanBoardAddr, bBroadcast, colorRestore) {
    const req = new Request(colorRestore, bBroadcast, 'SetScanner_ColorManageCoefData');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ColorManageInfoAddr;
    return req;
}
Session.prototype.SetScanner_ColorManageCoefData = async function SetScanner_ColorManageCoefData(addr, portAddr, scanBoardAddr, bBroadcast, colorRestore) {
    const req = createSetScanner_ColorManageCoefData(addr, portAddr, scanBoardAddr, bBroadcast, colorRestore);
    await this.connection.send(req);
};
Session.prototype.trySetScanner_ColorManageCoefData =
    async function trySetScanner_ColorManageCoefData(addr, portAddr, scanBoardAddr, colorRestore) {
        const req = createSetScanner_ColorManageCoefData(addr, portAddr, scanBoardAddr, false, colorRestore);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetScanner_ColorManageCoefData.js.map