import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetMCUWorkProgramStore(addr, portAddr, scanBoardAddr, bBroadcast, MCUWorkProgramStore) {
    const $data = encodeUIntLE(MCUWorkProgramStore, AddressMapping.MCUWorkProgramStoreOccupancy);
    const req = new Request($data, bBroadcast, 'SetMCUWorkProgramStore');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.MCUWorkProgramStoreAddr;
    return req;
}
Session.prototype.SetMCUWorkProgramStore = async function SetMCUWorkProgramStore(addr, portAddr, scanBoardAddr, bBroadcast, MCUWorkProgramStore) {
    const req = createSetMCUWorkProgramStore(addr, portAddr, scanBoardAddr, bBroadcast, MCUWorkProgramStore);
    await this.connection.send(req);
};
Session.prototype.trySetMCUWorkProgramStore = async function trySetMCUWorkProgramStore(addr, portAddr, scanBoardAddr, MCUWorkProgramStore) {
    const req = createSetMCUWorkProgramStore(addr, portAddr, scanBoardAddr, false, MCUWorkProgramStore);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetMCUWorkProgramStore.js.map