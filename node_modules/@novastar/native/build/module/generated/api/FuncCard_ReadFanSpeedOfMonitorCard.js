import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createFuncCard_ReadFanSpeedOfMonitorCard(addr, readCountOfFan, beginIdnexOfFan) {
    const req = new Request(AddressMapping.FuncCard_FanSpeedOfMonitorCardOccupancy * readCountOfFan, 'FuncCard_ReadFanSpeedOfMonitorCard');
    req.destination = addr;
    req.address =
        AddressMapping.FuncCard_FanSpeedOfMonitorCardAddr +
            AddressMapping.FuncCard_FanSpeedOfMonitorCardOccupancy * beginIdnexOfFan;
    return req;
}
Session.prototype.FuncCard_ReadFanSpeedOfMonitorCard =
    async function FuncCard_ReadFanSpeedOfMonitorCard(addr, readCountOfFan, beginIdnexOfFan) {
        const req = createFuncCard_ReadFanSpeedOfMonitorCard(addr, readCountOfFan, beginIdnexOfFan);
        return (await this.connection.send(req)).data;
    };
Session.prototype.tryFuncCard_ReadFanSpeedOfMonitorCard =
    async function tryFuncCard_ReadFanSpeedOfMonitorCard(addr, readCountOfFan, beginIdnexOfFan) {
        const req = createFuncCard_ReadFanSpeedOfMonitorCard(addr, readCountOfFan, beginIdnexOfFan);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=FuncCard_ReadFanSpeedOfMonitorCard.js.map