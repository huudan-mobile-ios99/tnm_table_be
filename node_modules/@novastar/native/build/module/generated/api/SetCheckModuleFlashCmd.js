import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetCheckModuleFlashCmd(addr, portAddr, scanBoardAddr, bBroadcast, checkModuleFlashCmd) {
    const $data = encodeUIntLE(checkModuleFlashCmd, AddressMapping.CheckModuleFlashCmdOccupancy);
    const req = new Request($data, bBroadcast, 'SetCheckModuleFlashCmd');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.CheckModuleFlashCmdAddr;
    return req;
}
Session.prototype.SetCheckModuleFlashCmd = async function SetCheckModuleFlashCmd(addr, portAddr, scanBoardAddr, bBroadcast, checkModuleFlashCmd) {
    const req = createSetCheckModuleFlashCmd(addr, portAddr, scanBoardAddr, bBroadcast, checkModuleFlashCmd);
    await this.connection.send(req);
};
Session.prototype.trySetCheckModuleFlashCmd = async function trySetCheckModuleFlashCmd(addr, portAddr, scanBoardAddr, checkModuleFlashCmd) {
    const req = createSetCheckModuleFlashCmd(addr, portAddr, scanBoardAddr, false, checkModuleFlashCmd);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetCheckModuleFlashCmd.js.map