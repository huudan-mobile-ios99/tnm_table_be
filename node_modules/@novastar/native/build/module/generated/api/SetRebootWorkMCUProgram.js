import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetRebootWorkMCUProgram(addr, portAddr, scanBoardAddr, bBroadcast, rebootWorkMCUProgram) {
    const $data = encodeUIntLE(rebootWorkMCUProgram, AddressMapping.RebootWorkMCUProgramOccupancy);
    const req = new Request($data, bBroadcast, 'SetRebootWorkMCUProgram');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.RebootWorkMCUProgramAddr;
    return req;
}
Session.prototype.SetRebootWorkMCUProgram = async function SetRebootWorkMCUProgram(addr, portAddr, scanBoardAddr, bBroadcast, rebootWorkMCUProgram) {
    const req = createSetRebootWorkMCUProgram(addr, portAddr, scanBoardAddr, bBroadcast, rebootWorkMCUProgram);
    await this.connection.send(req);
};
Session.prototype.trySetRebootWorkMCUProgram = async function trySetRebootWorkMCUProgram(addr, portAddr, scanBoardAddr, rebootWorkMCUProgram) {
    const req = createSetRebootWorkMCUProgram(addr, portAddr, scanBoardAddr, false, rebootWorkMCUProgram);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetRebootWorkMCUProgram.js.map