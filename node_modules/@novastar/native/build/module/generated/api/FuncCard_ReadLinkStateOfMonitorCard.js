import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createFuncCard_ReadLinkStateOfMonitorCard(addr) {
    const req = new Request(AddressMapping.FuncCard_LinkStateOfMonitorCardOccupancy, 'FuncCard_ReadLinkStateOfMonitorCard');
    req.destination = addr;
    req.address = AddressMapping.FuncCard_LinkStateOfMonitorCardAddr;
    return req;
}
Session.prototype.FuncCard_ReadLinkStateOfMonitorCard =
    async function FuncCard_ReadLinkStateOfMonitorCard(addr) {
        const req = createFuncCard_ReadLinkStateOfMonitorCard(addr);
        return decodeUIntLE(await this.connection.send(req));
    };
Session.prototype.tryFuncCard_ReadLinkStateOfMonitorCard =
    async function tryFuncCard_ReadLinkStateOfMonitorCard(addr) {
        const req = createFuncCard_ReadLinkStateOfMonitorCard(addr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=FuncCard_ReadLinkStateOfMonitorCard.js.map