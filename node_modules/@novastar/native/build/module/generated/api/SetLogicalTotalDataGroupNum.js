import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetLogicalTotalDataGroupNum(addr, portAddr, scanBoardAddr, bBroadcast, logicalDataGroupNum) {
    const $data = encodeUIntLE(logicalDataGroupNum, AddressMapping.LogicalTotalDataGroupNumOccupancy);
    const req = new Request($data, bBroadcast, 'SetLogicalTotalDataGroupNum');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.LogicalTotalDataGroupNumAddr;
    return req;
}
Session.prototype.SetLogicalTotalDataGroupNum = async function SetLogicalTotalDataGroupNum(addr, portAddr, scanBoardAddr, bBroadcast, logicalDataGroupNum) {
    const req = createSetLogicalTotalDataGroupNum(addr, portAddr, scanBoardAddr, bBroadcast, logicalDataGroupNum);
    await this.connection.send(req);
};
Session.prototype.trySetLogicalTotalDataGroupNum = async function trySetLogicalTotalDataGroupNum(addr, portAddr, scanBoardAddr, logicalDataGroupNum) {
    const req = createSetLogicalTotalDataGroupNum(addr, portAddr, scanBoardAddr, false, logicalDataGroupNum);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetLogicalTotalDataGroupNum.js.map