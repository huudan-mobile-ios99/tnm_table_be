import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_EnablePartBrightOfHWPro(addr, bBroadcast, isEnable) {
    const req = new Request([isEnable ? 91 : 255], bBroadcast, 'SetSender_EnablePartBrightOfHWPro');
    req.destination = addr;
    req.address = AddressMapping.Sender_EnablePartOfBrightAddr;
    return req;
}
Session.prototype.SetSender_EnablePartBrightOfHWPro =
    async function SetSender_EnablePartBrightOfHWPro(addr, bBroadcast, isEnable) {
        const req = createSetSender_EnablePartBrightOfHWPro(addr, bBroadcast, isEnable);
        await this.connection.send(req);
    };
Session.prototype.trySetSender_EnablePartBrightOfHWPro =
    async function trySetSender_EnablePartBrightOfHWPro(addr, isEnable) {
        const req = createSetSender_EnablePartBrightOfHWPro(addr, false, isEnable);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetSender_EnablePartBrightOfHWPro.js.map