import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetModuelCols(addr, portAddr, scanBoardAddr, bBroadcast, moduleCols) {
    const $data = encodeUIntLE(moduleCols, AddressMapping.ModuleColsOccupancy);
    const req = new Request($data, bBroadcast, 'SetModuelCols');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ModuleColsAddr;
    return req;
}
Session.prototype.SetModuelCols = async function SetModuelCols(addr, portAddr, scanBoardAddr, bBroadcast, moduleCols) {
    const req = createSetModuelCols(addr, portAddr, scanBoardAddr, bBroadcast, moduleCols);
    await this.connection.send(req);
};
Session.prototype.trySetModuelCols = async function trySetModuelCols(addr, portAddr, scanBoardAddr, moduleCols) {
    const req = createSetModuelCols(addr, portAddr, scanBoardAddr, false, moduleCols);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetModuelCols.js.map