import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createFuncCard_SetAudioFrequency_1(addr, portAddr, funcCardAddr, bBroadcast, freMode) {
    const req = new Request([freMode], bBroadcast, 'FuncCard_SetAudioFrequency_1');
    req.destination = addr;
    req.deviceType = 2;
    req.port = portAddr;
    req.rcvIndex = funcCardAddr;
    req.address = AddressMapping.FuncCard_AudioFrequencyAddr;
    return req;
}
Session.prototype.FuncCard_SetAudioFrequency_1 = async function FuncCard_SetAudioFrequency_1(addr, portAddr, funcCardAddr, bBroadcast, freMode) {
    const req = createFuncCard_SetAudioFrequency_1(addr, portAddr, funcCardAddr, bBroadcast, freMode);
    await this.connection.send(req);
};
Session.prototype.tryFuncCard_SetAudioFrequency_1 = async function tryFuncCard_SetAudioFrequency_1(addr, portAddr, funcCardAddr, freMode) {
    const req = createFuncCard_SetAudioFrequency_1(addr, portAddr, funcCardAddr, false, freMode);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=FuncCard_SetAudioFrequency_1.js.map