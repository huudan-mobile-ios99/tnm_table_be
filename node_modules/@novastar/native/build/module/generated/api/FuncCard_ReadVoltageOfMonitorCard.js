import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createFuncCard_ReadVoltageOfMonitorCard(addr, readCountOfValtage, beginIdnexOfValtage) {
    const req = new Request(AddressMapping.FuncCard_VoltageOfMonitorCardOccupancy * readCountOfValtage, 'FuncCard_ReadVoltageOfMonitorCard');
    req.destination = addr;
    req.address =
        AddressMapping.FuncCard_VoltageOfMonitorCardAddr +
            AddressMapping.FuncCard_VoltageOfMonitorCardOccupancy * beginIdnexOfValtage;
    return req;
}
Session.prototype.FuncCard_ReadVoltageOfMonitorCard =
    async function FuncCard_ReadVoltageOfMonitorCard(addr, readCountOfValtage, beginIdnexOfValtage) {
        const req = createFuncCard_ReadVoltageOfMonitorCard(addr, readCountOfValtage, beginIdnexOfValtage);
        return (await this.connection.send(req)).data;
    };
Session.prototype.tryFuncCard_ReadVoltageOfMonitorCard =
    async function tryFuncCard_ReadVoltageOfMonitorCard(addr, readCountOfValtage, beginIdnexOfValtage) {
        const req = createFuncCard_ReadVoltageOfMonitorCard(addr, readCountOfValtage, beginIdnexOfValtage);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=FuncCard_ReadVoltageOfMonitorCard.js.map