import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadScannerColorSupportInfo(addr, portAddr, scanBoardAddr) {
    const req = new Request(AddressMapping.ScannerColorSupportInfoOccupancy, 'ReadScannerColorSupportInfo');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScannerColorSupportInfoAddr;
    return req;
}
Session.prototype.ReadScannerColorSupportInfo = async function ReadScannerColorSupportInfo(addr, portAddr, scanBoardAddr) {
    const req = createReadScannerColorSupportInfo(addr, portAddr, scanBoardAddr);
    return decodeUIntLE(await this.connection.send(req));
};
Session.prototype.tryReadScannerColorSupportInfo = async function tryReadScannerColorSupportInfo(addr, portAddr, scanBoardAddr) {
    const req = createReadScannerColorSupportInfo(addr, portAddr, scanBoardAddr);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadScannerColorSupportInfo.js.map