import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadWheelReadingCureParameterToFactoryAreaData(addr, portAddr, scanBoardAddr) {
    const req = new Request(AddressMapping.GeneralPurposeRegisterOccupancy, 'ReadWheelReadingCureParameterToFactoryAreaData');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.GeneralPurposeRegisterAddr;
    return req;
}
Session.prototype.ReadWheelReadingCureParameterToFactoryAreaData =
    async function ReadWheelReadingCureParameterToFactoryAreaData(addr, portAddr, scanBoardAddr) {
        const req = createReadWheelReadingCureParameterToFactoryAreaData(addr, portAddr, scanBoardAddr);
        return decodeUIntLE(await this.connection.send(req));
    };
Session.prototype.tryReadWheelReadingCureParameterToFactoryAreaData =
    async function tryReadWheelReadingCureParameterToFactoryAreaData(addr, portAddr, scanBoardAddr) {
        const req = createReadWheelReadingCureParameterToFactoryAreaData(addr, portAddr, scanBoardAddr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=ReadWheelReadingCureParameterToFactoryAreaData.js.map