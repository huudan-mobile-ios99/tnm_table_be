import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetBlankingTime5253Value(addr, portAddr, scanBoardAddr, bBroadcast, BlankingTime5253Value) {
    if (BlankingTime5253Value.length !== AddressMapping.BlankingTime5253Occupancy)
        throw new TypeError(`Invalid buffer size: ${BlankingTime5253Value.length}`);
    const req = new Request(BlankingTime5253Value, bBroadcast, 'SetBlankingTime5253Value');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.BlankingTime5253Addr;
    return req;
}
Session.prototype.SetBlankingTime5253Value = async function SetBlankingTime5253Value(addr, portAddr, scanBoardAddr, bBroadcast, BlankingTime5253Value) {
    const req = createSetBlankingTime5253Value(addr, portAddr, scanBoardAddr, bBroadcast, BlankingTime5253Value);
    await this.connection.send(req);
};
Session.prototype.trySetBlankingTime5253Value = async function trySetBlankingTime5253Value(addr, portAddr, scanBoardAddr, BlankingTime5253Value) {
    const req = createSetBlankingTime5253Value(addr, portAddr, scanBoardAddr, false, BlankingTime5253Value);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetBlankingTime5253Value.js.map