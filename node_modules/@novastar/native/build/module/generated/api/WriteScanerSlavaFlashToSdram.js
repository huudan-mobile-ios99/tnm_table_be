import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createWriteScanerSlavaFlashToSdram(addr, portAddr, scanBoardAddr, bBroadcast) {
    const req = new Request([134], bBroadcast, 'WriteScanerSlavaFlashToSdram');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScannerSlavaFlashToSdramAddr;
    return req;
}
Session.prototype.WriteScanerSlavaFlashToSdram = async function WriteScanerSlavaFlashToSdram(addr, portAddr, scanBoardAddr, bBroadcast) {
    const req = createWriteScanerSlavaFlashToSdram(addr, portAddr, scanBoardAddr, bBroadcast);
    await this.connection.send(req);
};
Session.prototype.tryWriteScanerSlavaFlashToSdram = async function tryWriteScanerSlavaFlashToSdram(addr, portAddr, scanBoardAddr) {
    const req = createWriteScanerSlavaFlashToSdram(addr, portAddr, scanBoardAddr, false);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=WriteScanerSlavaFlashToSdram.js.map