import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadDviOffsetX(addr, index) {
    const req = new Request(AddressMapping.DviOffsetXOccupancy, 'ReadDviOffsetX');
    req.destination = addr;
    req.address = AddressMapping.DviOffsetXAddr + AddressMapping.DviOccupancy * index;
    return req;
}
Session.prototype.ReadDviOffsetX = async function ReadDviOffsetX(addr, index) {
    const req = createReadDviOffsetX(addr, index);
    return decodeUIntLE(await this.connection.send(req));
};
Session.prototype.tryReadDviOffsetX = async function tryReadDviOffsetX(addr, index) {
    const req = createReadDviOffsetX(addr, index);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadDviOffsetX.js.map