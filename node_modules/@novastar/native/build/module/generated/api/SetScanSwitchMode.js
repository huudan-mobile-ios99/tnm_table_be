import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScanSwitchMode(addr, portAddr, scanBoardAddr, bBroadcast, switchMode) {
    const $data = encodeUIntLE(switchMode, AddressMapping.SwitchModeOccupancy);
    const req = new Request($data, bBroadcast, 'SetScanSwitchMode');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.SwitchModeAddr;
    return req;
}
Session.prototype.SetScanSwitchMode = async function SetScanSwitchMode(addr, portAddr, scanBoardAddr, bBroadcast, switchMode) {
    const req = createSetScanSwitchMode(addr, portAddr, scanBoardAddr, bBroadcast, switchMode);
    await this.connection.send(req);
};
Session.prototype.trySetScanSwitchMode = async function trySetScanSwitchMode(addr, portAddr, scanBoardAddr, switchMode) {
    const req = createSetScanSwitchMode(addr, portAddr, scanBoardAddr, false, switchMode);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScanSwitchMode.js.map