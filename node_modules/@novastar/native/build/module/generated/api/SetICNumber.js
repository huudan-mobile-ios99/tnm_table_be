import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetICNumber(addr, portAddr, scanBoardAddr, bBroadcast, iCNumber) {
    const $data = encodeUIntLE(iCNumber, AddressMapping.ICNumberOccupancy);
    const req = new Request($data, bBroadcast, 'SetICNumber');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ICNumberAddr;
    return req;
}
Session.prototype.SetICNumber = async function SetICNumber(addr, portAddr, scanBoardAddr, bBroadcast, iCNumber) {
    const req = createSetICNumber(addr, portAddr, scanBoardAddr, bBroadcast, iCNumber);
    await this.connection.send(req);
};
Session.prototype.trySetICNumber = async function trySetICNumber(addr, portAddr, scanBoardAddr, iCNumber) {
    const req = createSetICNumber(addr, portAddr, scanBoardAddr, false, iCNumber);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetICNumber.js.map