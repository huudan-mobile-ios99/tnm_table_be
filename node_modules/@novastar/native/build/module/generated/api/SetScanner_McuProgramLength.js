import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScanner_McuProgramLength(addr, portAddr, scanBoardAddr, bBroadcast, scanner_McuProgramLength) {
    const $data = encodeUIntLE(scanner_McuProgramLength, AddressMapping.Scanner_McuProgramLengthOccupancy);
    const req = new Request($data, bBroadcast, 'SetScanner_McuProgramLength');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Scanner_McuProgramLengthAddr;
    return req;
}
Session.prototype.SetScanner_McuProgramLength = async function SetScanner_McuProgramLength(addr, portAddr, scanBoardAddr, bBroadcast, scanner_McuProgramLength) {
    const req = createSetScanner_McuProgramLength(addr, portAddr, scanBoardAddr, bBroadcast, scanner_McuProgramLength);
    await this.connection.send(req);
};
Session.prototype.trySetScanner_McuProgramLength = async function trySetScanner_McuProgramLength(addr, portAddr, scanBoardAddr, scanner_McuProgramLength) {
    const req = createSetScanner_McuProgramLength(addr, portAddr, scanBoardAddr, false, scanner_McuProgramLength);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScanner_McuProgramLength.js.map