import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetParameterCorrectCoefficientComponent(addr, portAddr, scanBoardAddr, bBroadcast, parameterChromaOrBrightness) {
    const $data = encodeUIntLE(parameterChromaOrBrightness, AddressMapping.CorrectCoefficientComponentOccupancy);
    const req = new Request($data, bBroadcast, 'SetParameterCorrectCoefficientComponent');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.CorrectCoefficientComponent;
    return req;
}
Session.prototype.SetParameterCorrectCoefficientComponent =
    async function SetParameterCorrectCoefficientComponent(addr, portAddr, scanBoardAddr, bBroadcast, parameterChromaOrBrightness) {
        const req = createSetParameterCorrectCoefficientComponent(addr, portAddr, scanBoardAddr, bBroadcast, parameterChromaOrBrightness);
        await this.connection.send(req);
    };
Session.prototype.trySetParameterCorrectCoefficientComponent =
    async function trySetParameterCorrectCoefficientComponent(addr, portAddr, scanBoardAddr, parameterChromaOrBrightness) {
        const req = createSetParameterCorrectCoefficientComponent(addr, portAddr, scanBoardAddr, false, parameterChromaOrBrightness);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetParameterCorrectCoefficientComponent.js.map