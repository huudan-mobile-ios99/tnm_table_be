import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetFreeVirtualNetworkPort(addr, bBroadcast, number, portIndex) {
    const $data = encodeUIntLE(number, AddressMapping.NumberOfCardOrBoardInPortOccupancy);
    const req = new Request($data, bBroadcast, 'SetFreeVirtualNetworkPort');
    req.destination = addr;
    req.address = AddressMapping.FreeVirtualNetPortAddr + portIndex * 2;
    return req;
}
Session.prototype.SetFreeVirtualNetworkPort = async function SetFreeVirtualNetworkPort(addr, bBroadcast, number, portIndex) {
    const req = createSetFreeVirtualNetworkPort(addr, bBroadcast, number, portIndex);
    await this.connection.send(req);
};
Session.prototype.trySetFreeVirtualNetworkPort = async function trySetFreeVirtualNetworkPort(addr, number, portIndex) {
    const req = createSetFreeVirtualNetworkPort(addr, false, number, portIndex);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetFreeVirtualNetworkPort.js.map