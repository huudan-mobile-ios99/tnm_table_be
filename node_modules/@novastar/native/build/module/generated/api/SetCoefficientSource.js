import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetCoefficientSource(addr, portAddr, scanBoardAddr, bBroadcast, coefficienceSource) {
    const $data = encodeUIntLE(coefficienceSource, AddressMapping.CoefficientSourceOccupancy);
    const req = new Request($data, bBroadcast, 'SetCoefficientSource');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.CoefficientSourceAddr;
    return req;
}
Session.prototype.SetCoefficientSource = async function SetCoefficientSource(addr, portAddr, scanBoardAddr, bBroadcast, coefficienceSource) {
    const req = createSetCoefficientSource(addr, portAddr, scanBoardAddr, bBroadcast, coefficienceSource);
    await this.connection.send(req);
};
Session.prototype.trySetCoefficientSource = async function trySetCoefficientSource(addr, portAddr, scanBoardAddr, coefficienceSource) {
    const req = createSetCoefficientSource(addr, portAddr, scanBoardAddr, false, coefficienceSource);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetCoefficientSource.js.map