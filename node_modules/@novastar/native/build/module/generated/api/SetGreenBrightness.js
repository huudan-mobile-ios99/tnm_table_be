import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetGreenBrightness(addr, portAddr, scanBoardAddr, bBroadcast, greenBrightness) {
    const $data = encodeUIntLE(greenBrightness, AddressMapping.GreenBrightnessOccupancy);
    const req = new Request($data, bBroadcast, 'SetGreenBrightness');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.GreenBrightnessAddr;
    return req;
}
Session.prototype.SetGreenBrightness = async function SetGreenBrightness(addr, portAddr, scanBoardAddr, bBroadcast, greenBrightness) {
    const req = createSetGreenBrightness(addr, portAddr, scanBoardAddr, bBroadcast, greenBrightness);
    await this.connection.send(req);
};
Session.prototype.trySetGreenBrightness = async function trySetGreenBrightness(addr, portAddr, scanBoardAddr, greenBrightness) {
    const req = createSetGreenBrightness(addr, portAddr, scanBoardAddr, false, greenBrightness);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetGreenBrightness.js.map