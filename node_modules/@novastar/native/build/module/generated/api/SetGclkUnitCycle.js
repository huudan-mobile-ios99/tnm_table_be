import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetGclkUnitCycle(addr, portAddr, scanBoardAddr, bBroadcast, gclkUnitCycle) {
    const $data = encodeUIntLE(gclkUnitCycle, AddressMapping.GclkUnitCycleOccupancy);
    const req = new Request($data, bBroadcast, 'SetGclkUnitCycle');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.GclkUnitCycleAddr;
    return req;
}
Session.prototype.SetGclkUnitCycle = async function SetGclkUnitCycle(addr, portAddr, scanBoardAddr, bBroadcast, gclkUnitCycle) {
    const req = createSetGclkUnitCycle(addr, portAddr, scanBoardAddr, bBroadcast, gclkUnitCycle);
    await this.connection.send(req);
};
Session.prototype.trySetGclkUnitCycle = async function trySetGclkUnitCycle(addr, portAddr, scanBoardAddr, gclkUnitCycle) {
    const req = createSetGclkUnitCycle(addr, portAddr, scanBoardAddr, false, gclkUnitCycle);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetGclkUnitCycle.js.map