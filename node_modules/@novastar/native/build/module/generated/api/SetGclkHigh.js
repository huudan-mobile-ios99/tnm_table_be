import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetGclkHigh(addr, portAddr, scanBoardAddr, bBroadcast, gclkHigh) {
    const $data = encodeUIntLE(gclkHigh, AddressMapping.GclkHighOccupancy);
    const req = new Request($data, bBroadcast, 'SetGclkHigh');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.GclkHighAddr;
    return req;
}
Session.prototype.SetGclkHigh = async function SetGclkHigh(addr, portAddr, scanBoardAddr, bBroadcast, gclkHigh) {
    const req = createSetGclkHigh(addr, portAddr, scanBoardAddr, bBroadcast, gclkHigh);
    await this.connection.send(req);
};
Session.prototype.trySetGclkHigh = async function trySetGclkHigh(addr, portAddr, scanBoardAddr, gclkHigh) {
    const req = createSetGclkHigh(addr, portAddr, scanBoardAddr, false, gclkHigh);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetGclkHigh.js.map