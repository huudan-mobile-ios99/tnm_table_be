import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScanner_DMWSP(addr, portAddr, scanBoardAddr, bBroadcast, DMWSP) {
    if (DMWSP.length !== 0)
        throw new TypeError(`Invalid buffer size: ${DMWSP.length}`);
    const req = new Request(DMWSP, bBroadcast, 'SetScanner_DMWSP');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Scanner_DmWSPAAddr;
    return req;
}
Session.prototype.SetScanner_DMWSP = async function SetScanner_DMWSP(addr, portAddr, scanBoardAddr, bBroadcast, DMWSP) {
    const req = createSetScanner_DMWSP(addr, portAddr, scanBoardAddr, bBroadcast, DMWSP);
    await this.connection.send(req);
};
Session.prototype.trySetScanner_DMWSP = async function trySetScanner_DMWSP(addr, portAddr, scanBoardAddr, DMWSP) {
    const req = createSetScanner_DMWSP(addr, portAddr, scanBoardAddr, false, DMWSP);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScanner_DMWSP.js.map