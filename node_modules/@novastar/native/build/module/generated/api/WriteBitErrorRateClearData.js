import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createWriteBitErrorRateClearData(addr, portAddr, scanBoardAddr, bBroadcast) {
    const req = new Request([5], bBroadcast, 'WriteBitErrorRateClearData');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.BitErrorRateClearAddr;
    return req;
}
Session.prototype.WriteBitErrorRateClearData = async function WriteBitErrorRateClearData(addr, portAddr, scanBoardAddr, bBroadcast) {
    const req = createWriteBitErrorRateClearData(addr, portAddr, scanBoardAddr, bBroadcast);
    await this.connection.send(req);
};
Session.prototype.tryWriteBitErrorRateClearData = async function tryWriteBitErrorRateClearData(addr, portAddr, scanBoardAddr) {
    const req = createWriteBitErrorRateClearData(addr, portAddr, scanBoardAddr, false);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=WriteBitErrorRateClearData.js.map