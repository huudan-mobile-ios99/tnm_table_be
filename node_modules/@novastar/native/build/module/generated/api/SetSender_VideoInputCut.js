import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_VideoInputCut(addr, bBoradcast, data) {
    if (data.length !== AddressMapping.Sender_VideoInputCutOccupancy)
        throw new TypeError(`Invalid buffer size: ${data.length}`);
    const req = new Request(data, bBoradcast, 'SetSender_VideoInputCut');
    req.destination = addr;
    req.address = AddressMapping.Sender_VideoInputCutAddr;
    return req;
}
Session.prototype.SetSender_VideoInputCut = async function SetSender_VideoInputCut(addr, bBoradcast, data) {
    const req = createSetSender_VideoInputCut(addr, bBoradcast, data);
    await this.connection.send(req);
};
Session.prototype.trySetSender_VideoInputCut = async function trySetSender_VideoInputCut(addr, data) {
    const req = createSetSender_VideoInputCut(addr, false, data);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_VideoInputCut.js.map