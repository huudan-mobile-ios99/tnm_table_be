import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createFuncCard_ReadPowerPortCtrl(addr, powerIndex) {
    const req = new Request(AddressMapping.FuncCard_PowerPortCtrlOccupancy, 'FuncCard_ReadPowerPortCtrl');
    req.destination = addr;
    req.address =
        AddressMapping.FuncCard_PowerPortCtrlAddr +
            powerIndex * AddressMapping.FuncCard_PowerPortCtrlOccupancy;
    return req;
}
Session.prototype.FuncCard_ReadPowerPortCtrl = async function FuncCard_ReadPowerPortCtrl(addr, powerIndex) {
    const req = createFuncCard_ReadPowerPortCtrl(addr, powerIndex);
    return decodeUIntLE(await this.connection.send(req));
};
Session.prototype.tryFuncCard_ReadPowerPortCtrl = async function tryFuncCard_ReadPowerPortCtrl(addr, powerIndex) {
    const req = createFuncCard_ReadPowerPortCtrl(addr, powerIndex);
    return this.connection.trySend(req);
};
//# sourceMappingURL=FuncCard_ReadPowerPortCtrl.js.map