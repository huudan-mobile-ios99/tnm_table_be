import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetStandbyMode(addr, portAddr, scanBoardAddr, bBroadcast, standbyMode) {
    const req = new Request([standbyMode], bBroadcast, 'SetStandbyMode');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.StandbyModeAddr;
    return req;
}
Session.prototype.SetStandbyMode = async function SetStandbyMode(addr, portAddr, scanBoardAddr, bBroadcast, standbyMode) {
    const req = createSetStandbyMode(addr, portAddr, scanBoardAddr, bBroadcast, standbyMode);
    await this.connection.send(req);
};
Session.prototype.trySetStandbyMode = async function trySetStandbyMode(addr, portAddr, scanBoardAddr, standbyMode) {
    const req = createSetStandbyMode(addr, portAddr, scanBoardAddr, false, standbyMode);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetStandbyMode.js.map