import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createFuncCard_ReadPowerOperTime_1(addr, portAddr, funcCardAddr) {
    const req = new Request(AddressMapping.FuncCard_OperPowerOccupancy, 'FuncCard_ReadPowerOperTime_1');
    req.destination = addr;
    req.deviceType = 2;
    req.port = portAddr;
    req.rcvIndex = funcCardAddr;
    req.address = AddressMapping.FuncCard_PowerOperTimeAddr;
    return req;
}
Session.prototype.FuncCard_ReadPowerOperTime_1 = async function FuncCard_ReadPowerOperTime_1(addr, portAddr, funcCardAddr) {
    const req = createFuncCard_ReadPowerOperTime_1(addr, portAddr, funcCardAddr);
    return (await this.connection.send(req)).data;
};
Session.prototype.tryFuncCard_ReadPowerOperTime_1 = async function tryFuncCard_ReadPowerOperTime_1(addr, portAddr, funcCardAddr) {
    const req = createFuncCard_ReadPowerOperTime_1(addr, portAddr, funcCardAddr);
    return this.connection.trySend(req);
};
//# sourceMappingURL=FuncCard_ReadPowerOperTime_1.js.map