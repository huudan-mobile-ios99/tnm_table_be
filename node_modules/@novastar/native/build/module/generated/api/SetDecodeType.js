import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetDecodeType(addr, portAddr, scanBoardAddr, bBroadcast, decodeType) {
    const $data = encodeUIntLE(decodeType, AddressMapping.DecodeTypeOccupancy);
    const req = new Request($data, bBroadcast, 'SetDecodeType');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.DecodeTypeAddr;
    return req;
}
Session.prototype.SetDecodeType = async function SetDecodeType(addr, portAddr, scanBoardAddr, bBroadcast, decodeType) {
    const req = createSetDecodeType(addr, portAddr, scanBoardAddr, bBroadcast, decodeType);
    await this.connection.send(req);
};
Session.prototype.trySetDecodeType = async function trySetDecodeType(addr, portAddr, scanBoardAddr, decodeType) {
    const req = createSetDecodeType(addr, portAddr, scanBoardAddr, false, decodeType);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetDecodeType.js.map