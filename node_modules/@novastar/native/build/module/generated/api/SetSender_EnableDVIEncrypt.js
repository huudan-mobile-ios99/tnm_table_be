import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
import { DVIEncryptTypeEnum } from '../DVIEncryptType';
export default function createSetSender_EnableDVIEncrypt(addr, bBroadcast, encryptType) {
    const req = new Request(encryptType === DVIEncryptTypeEnum.EnableEncrypt
        ? [72]
        : encryptType === DVIEncryptTypeEnum.DisableEncrypt
            ? [139]
            : encryptType === DVIEncryptTypeEnum.None
                ? [255]
                : [0], bBroadcast, 'SetSender_EnableDVIEncrypt');
    req.destination = addr;
    req.address = AddressMapping.Sender_EnableDVIEncryptAddr;
    return req;
}
Session.prototype.SetSender_EnableDVIEncrypt = async function SetSender_EnableDVIEncrypt(addr, bBroadcast, encryptType) {
    const req = createSetSender_EnableDVIEncrypt(addr, bBroadcast, encryptType);
    await this.connection.send(req);
};
Session.prototype.trySetSender_EnableDVIEncrypt = async function trySetSender_EnableDVIEncrypt(addr, encryptType) {
    const req = createSetSender_EnableDVIEncrypt(addr, false, encryptType);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_EnableDVIEncrypt.js.map