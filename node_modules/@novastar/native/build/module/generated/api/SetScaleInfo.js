import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScaleInfo(addr, portAddr, scanBoardAddr, bBroadcast, scaleInfo) {
    const $data = encodeUIntLE(scaleInfo, AddressMapping.ScaleInfoOccupancy);
    const req = new Request($data, bBroadcast, 'SetScaleInfo');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScaleInfoAddr;
    return req;
}
Session.prototype.SetScaleInfo = async function SetScaleInfo(addr, portAddr, scanBoardAddr, bBroadcast, scaleInfo) {
    const req = createSetScaleInfo(addr, portAddr, scanBoardAddr, bBroadcast, scaleInfo);
    await this.connection.send(req);
};
Session.prototype.trySetScaleInfo = async function trySetScaleInfo(addr, portAddr, scanBoardAddr, scaleInfo) {
    const req = createSetScaleInfo(addr, portAddr, scanBoardAddr, false, scaleInfo);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScaleInfo.js.map