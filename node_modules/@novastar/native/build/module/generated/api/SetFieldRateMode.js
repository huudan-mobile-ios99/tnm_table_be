import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetFieldRateMode(addr, bBroadcast, fieldRateMode) {
    const $data = encodeUIntLE(fieldRateMode, AddressMapping.FieldRateModeOccupancy);
    const req = new Request($data, bBroadcast, 'SetFieldRateMode');
    req.destination = addr;
    req.address = AddressMapping.FieldRateModeAddr;
    return req;
}
Session.prototype.SetFieldRateMode = async function SetFieldRateMode(addr, bBroadcast, fieldRateMode) {
    const req = createSetFieldRateMode(addr, bBroadcast, fieldRateMode);
    await this.connection.send(req);
};
Session.prototype.trySetFieldRateMode = async function trySetFieldRateMode(addr, fieldRateMode) {
    const req = createSetFieldRateMode(addr, false, fieldRateMode);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetFieldRateMode.js.map