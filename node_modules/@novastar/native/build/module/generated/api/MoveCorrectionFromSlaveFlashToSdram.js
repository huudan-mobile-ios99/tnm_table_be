import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createMoveCorrectionFromSlaveFlashToSdram(addr, portAddr, scanBoardAddr, bBroadcast) {
    const req = new Request([5], bBroadcast, 'MoveCorrectionFromSlaveFlashToSdram');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Correction_FactoryAddr;
    return req;
}
Session.prototype.MoveCorrectionFromSlaveFlashToSdram =
    async function MoveCorrectionFromSlaveFlashToSdram(addr, portAddr, scanBoardAddr, bBroadcast) {
        const req = createMoveCorrectionFromSlaveFlashToSdram(addr, portAddr, scanBoardAddr, bBroadcast);
        await this.connection.send(req);
    };
Session.prototype.tryMoveCorrectionFromSlaveFlashToSdram =
    async function tryMoveCorrectionFromSlaveFlashToSdram(addr, portAddr, scanBoardAddr) {
        const req = createMoveCorrectionFromSlaveFlashToSdram(addr, portAddr, scanBoardAddr, false);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=MoveCorrectionFromSlaveFlashToSdram.js.map