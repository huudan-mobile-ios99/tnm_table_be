import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetParameterStore2SpiFlash(addr, portAddr, scanBoardAddr, bBroadcast, parameterStore2SpiFlash) {
    const $data = encodeUIntLE(parameterStore2SpiFlash, AddressMapping.ParameterStore2SpiFlashOccupancy);
    const req = new Request($data, bBroadcast, 'SetParameterStore2SpiFlash');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ParameterStore2SpiFlashAddr;
    return req;
}
Session.prototype.SetParameterStore2SpiFlash = async function SetParameterStore2SpiFlash(addr, portAddr, scanBoardAddr, bBroadcast, parameterStore2SpiFlash) {
    const req = createSetParameterStore2SpiFlash(addr, portAddr, scanBoardAddr, bBroadcast, parameterStore2SpiFlash);
    await this.connection.send(req);
};
Session.prototype.trySetParameterStore2SpiFlash = async function trySetParameterStore2SpiFlash(addr, portAddr, scanBoardAddr, parameterStore2SpiFlash) {
    const req = createSetParameterStore2SpiFlash(addr, portAddr, scanBoardAddr, false, parameterStore2SpiFlash);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetParameterStore2SpiFlash.js.map