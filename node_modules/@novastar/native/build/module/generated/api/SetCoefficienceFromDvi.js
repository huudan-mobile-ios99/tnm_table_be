import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetCoefficienceFromDvi(addr, portAddr, scanBoardAddr, bBroadcast, coefficienceFromDvi) {
    const $data = encodeUIntLE(coefficienceFromDvi, AddressMapping.WriteCoefficienceFromDviOccupancy);
    const req = new Request($data, bBroadcast, 'SetCoefficienceFromDvi');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.WriteCoefficienceFromDviAddr;
    return req;
}
Session.prototype.SetCoefficienceFromDvi = async function SetCoefficienceFromDvi(addr, portAddr, scanBoardAddr, bBroadcast, coefficienceFromDvi) {
    const req = createSetCoefficienceFromDvi(addr, portAddr, scanBoardAddr, bBroadcast, coefficienceFromDvi);
    await this.connection.send(req);
};
Session.prototype.trySetCoefficienceFromDvi = async function trySetCoefficienceFromDvi(addr, portAddr, scanBoardAddr, coefficienceFromDvi) {
    const req = createSetCoefficienceFromDvi(addr, portAddr, scanBoardAddr, false, coefficienceFromDvi);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetCoefficienceFromDvi.js.map