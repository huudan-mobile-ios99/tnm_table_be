import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetGclkPhase(addr, portAddr, scanBoardAddr, bBroadcast, gclkPhase) {
    const $data = encodeUIntLE(gclkPhase, AddressMapping.GclkPhaseOccupancy);
    const req = new Request($data, bBroadcast, 'SetGclkPhase');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.GclkPhaseAddr;
    return req;
}
Session.prototype.SetGclkPhase = async function SetGclkPhase(addr, portAddr, scanBoardAddr, bBroadcast, gclkPhase) {
    const req = createSetGclkPhase(addr, portAddr, scanBoardAddr, bBroadcast, gclkPhase);
    await this.connection.send(req);
};
Session.prototype.trySetGclkPhase = async function trySetGclkPhase(addr, portAddr, scanBoardAddr, gclkPhase) {
    const req = createSetGclkPhase(addr, portAddr, scanBoardAddr, false, gclkPhase);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetGclkPhase.js.map