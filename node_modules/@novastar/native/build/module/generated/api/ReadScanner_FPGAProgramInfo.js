import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadScanner_FPGAProgramInfo(addr, portAddr, scanBoardAddr) {
    const req = new Request(AddressMapping.Scanner_FPGAProgramInfoOccupancy, 'ReadScanner_FPGAProgramInfo');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Scanner_FPGAProgramInfoAddr;
    return req;
}
Session.prototype.ReadScanner_FPGAProgramInfo = async function ReadScanner_FPGAProgramInfo(addr, portAddr, scanBoardAddr) {
    const req = createReadScanner_FPGAProgramInfo(addr, portAddr, scanBoardAddr);
    return (await this.connection.send(req)).data;
};
Session.prototype.tryReadScanner_FPGAProgramInfo = async function tryReadScanner_FPGAProgramInfo(addr, portAddr, scanBoardAddr) {
    const req = createReadScanner_FPGAProgramInfo(addr, portAddr, scanBoardAddr);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadScanner_FPGAProgramInfo.js.map