import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSoftwareCoefficientAccelerateFlag(Sender, portAddr, scanBoardAddr, bBroadcast, Is3x3) {
    const req = new Request(Is3x3 ? [2] : [0], bBroadcast, 'SetSoftwareCoefficientAccelerateFlag');
    req.destination = Sender;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.SoftwareCoefficientAccelerateFlag;
    return req;
}
Session.prototype.SetSoftwareCoefficientAccelerateFlag =
    async function SetSoftwareCoefficientAccelerateFlag(Sender, portAddr, scanBoardAddr, bBroadcast, Is3x3) {
        const req = createSetSoftwareCoefficientAccelerateFlag(Sender, portAddr, scanBoardAddr, bBroadcast, Is3x3);
        await this.connection.send(req);
    };
Session.prototype.trySetSoftwareCoefficientAccelerateFlag =
    async function trySetSoftwareCoefficientAccelerateFlag(Sender, portAddr, scanBoardAddr, Is3x3) {
        const req = createSetSoftwareCoefficientAccelerateFlag(Sender, portAddr, scanBoardAddr, false, Is3x3);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetSoftwareCoefficientAccelerateFlag.js.map