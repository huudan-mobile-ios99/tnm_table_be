import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetAddrExtend(addr, portAddr, scanBoardAddr, bBroadcast, addrExtend) {
    const $data = encodeUIntLE(addrExtend, AddressMapping.AddrExtendOccupancy);
    const req = new Request($data, bBroadcast, 'SetAddrExtend');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.AddrExtendAddr;
    return req;
}
Session.prototype.SetAddrExtend = async function SetAddrExtend(addr, portAddr, scanBoardAddr, bBroadcast, addrExtend) {
    const req = createSetAddrExtend(addr, portAddr, scanBoardAddr, bBroadcast, addrExtend);
    await this.connection.send(req);
};
Session.prototype.trySetAddrExtend = async function trySetAddrExtend(addr, portAddr, scanBoardAddr, addrExtend) {
    const req = createSetAddrExtend(addr, portAddr, scanBoardAddr, false, addrExtend);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetAddrExtend.js.map