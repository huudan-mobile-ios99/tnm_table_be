import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetShowLastFrameWhenCableNotConected(addr, portAddr, scanBoardAddr, bBroadcast, showMode) {
    const $data = encodeUIntLE(showMode, AddressMapping.ShowLastFrameWhenCableNotConectedOccupancy);
    const req = new Request($data, bBroadcast, 'SetShowLastFrameWhenCableNotConected');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ShowLastFrameWhenCableNotConectedAddr;
    return req;
}
Session.prototype.SetShowLastFrameWhenCableNotConected =
    async function SetShowLastFrameWhenCableNotConected(addr, portAddr, scanBoardAddr, bBroadcast, showMode) {
        const req = createSetShowLastFrameWhenCableNotConected(addr, portAddr, scanBoardAddr, bBroadcast, showMode);
        await this.connection.send(req);
    };
Session.prototype.trySetShowLastFrameWhenCableNotConected =
    async function trySetShowLastFrameWhenCableNotConected(addr, portAddr, scanBoardAddr, showMode) {
        const req = createSetShowLastFrameWhenCableNotConected(addr, portAddr, scanBoardAddr, false, showMode);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetShowLastFrameWhenCableNotConected.js.map