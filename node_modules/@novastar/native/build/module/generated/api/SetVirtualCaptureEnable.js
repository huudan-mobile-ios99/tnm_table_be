import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetVirtualCaptureEnable(addr, bBroadcast, virtualCaptureEnable) {
    const $data = encodeUIntLE(virtualCaptureEnable ? 5 : 0, AddressMapping.VirtualCaptureEnableOccupancy);
    const req = new Request($data, bBroadcast, 'SetVirtualCaptureEnable');
    req.destination = addr;
    req.address = AddressMapping.VirtualCaptureEnableAddr;
    return req;
}
Session.prototype.SetVirtualCaptureEnable = async function SetVirtualCaptureEnable(addr, bBroadcast, virtualCaptureEnable) {
    const req = createSetVirtualCaptureEnable(addr, bBroadcast, virtualCaptureEnable);
    await this.connection.send(req);
};
Session.prototype.trySetVirtualCaptureEnable = async function trySetVirtualCaptureEnable(addr, virtualCaptureEnable) {
    const req = createSetVirtualCaptureEnable(addr, false, virtualCaptureEnable);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetVirtualCaptureEnable.js.map