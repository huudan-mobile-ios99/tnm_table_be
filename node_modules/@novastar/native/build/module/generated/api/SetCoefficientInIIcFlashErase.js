import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetCoefficientInIIcFlashErase(addr, portAddr, scanBoardAddr, bBroadcast, coefficientInIIcFlashErase) {
    const $data = encodeUIntLE(coefficientInIIcFlashErase, AddressMapping.CoefficientInIIcFlashEraseOccupancy);
    const req = new Request($data, bBroadcast, 'SetCoefficientInIIcFlashErase');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.CoefficientInIIcFlashEraseAddr;
    return req;
}
Session.prototype.SetCoefficientInIIcFlashErase = async function SetCoefficientInIIcFlashErase(addr, portAddr, scanBoardAddr, bBroadcast, coefficientInIIcFlashErase) {
    const req = createSetCoefficientInIIcFlashErase(addr, portAddr, scanBoardAddr, bBroadcast, coefficientInIIcFlashErase);
    await this.connection.send(req);
};
Session.prototype.trySetCoefficientInIIcFlashErase =
    async function trySetCoefficientInIIcFlashErase(addr, portAddr, scanBoardAddr, coefficientInIIcFlashErase) {
        const req = createSetCoefficientInIIcFlashErase(addr, portAddr, scanBoardAddr, false, coefficientInIIcFlashErase);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetCoefficientInIIcFlashErase.js.map