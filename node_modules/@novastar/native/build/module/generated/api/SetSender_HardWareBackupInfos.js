import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_HardWareBackupInfos(addr, bBoradcast, data) {
    const req = new Request(data, bBoradcast, 'SetSender_HardWareBackupInfos');
    req.destination = addr;
    req.address = AddressMapping.Sender_HardWareBackupInfoAddr;
    return req;
}
Session.prototype.SetSender_HardWareBackupInfos = async function SetSender_HardWareBackupInfos(addr, bBoradcast, data) {
    const req = createSetSender_HardWareBackupInfos(addr, bBoradcast, data);
    await this.connection.send(req);
};
Session.prototype.trySetSender_HardWareBackupInfos =
    async function trySetSender_HardWareBackupInfos(addr, data) {
        const req = createSetSender_HardWareBackupInfos(addr, false, data);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetSender_HardWareBackupInfos.js.map