import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetLightTimePerSubField(addr, portAddr, scanBoardAddr, bBroadcast, lightTimePerSubField) {
    const $data = encodeUIntLE(lightTimePerSubField, AddressMapping.LightTimePerSubFieldOccupancy);
    const req = new Request($data, bBroadcast, 'SetLightTimePerSubField');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.LightTimePerSubFieldAddr;
    return req;
}
Session.prototype.SetLightTimePerSubField = async function SetLightTimePerSubField(addr, portAddr, scanBoardAddr, bBroadcast, lightTimePerSubField) {
    const req = createSetLightTimePerSubField(addr, portAddr, scanBoardAddr, bBroadcast, lightTimePerSubField);
    await this.connection.send(req);
};
Session.prototype.trySetLightTimePerSubField = async function trySetLightTimePerSubField(addr, portAddr, scanBoardAddr, lightTimePerSubField) {
    const req = createSetLightTimePerSubField(addr, portAddr, scanBoardAddr, false, lightTimePerSubField);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetLightTimePerSubField.js.map