import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetPointNumPerDrive(addr, portAddr, scanBoardAddr, bBroadcast, pointNumPerDrive) {
    const $data = encodeUIntLE(pointNumPerDrive, AddressMapping.PointNumPerDriveOccupancy);
    const req = new Request($data, bBroadcast, 'SetPointNumPerDrive');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.PointNumPerDriveAddr;
    return req;
}
Session.prototype.SetPointNumPerDrive = async function SetPointNumPerDrive(addr, portAddr, scanBoardAddr, bBroadcast, pointNumPerDrive) {
    const req = createSetPointNumPerDrive(addr, portAddr, scanBoardAddr, bBroadcast, pointNumPerDrive);
    await this.connection.send(req);
};
Session.prototype.trySetPointNumPerDrive = async function trySetPointNumPerDrive(addr, portAddr, scanBoardAddr, pointNumPerDrive) {
    const req = createSetPointNumPerDrive(addr, portAddr, scanBoardAddr, false, pointNumPerDrive);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetPointNumPerDrive.js.map