import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScreenDriveType(addr, portAddr, scanBoardAddr, bBroadcast, driverType) {
    const $data = encodeUIntLE(driverType, AddressMapping.ScreenDriveTypeOccupancy);
    const req = new Request($data, bBroadcast, 'SetScreenDriveType');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScreenDriveTypeAddr;
    return req;
}
Session.prototype.SetScreenDriveType = async function SetScreenDriveType(addr, portAddr, scanBoardAddr, bBroadcast, driverType) {
    const req = createSetScreenDriveType(addr, portAddr, scanBoardAddr, bBroadcast, driverType);
    await this.connection.send(req);
};
Session.prototype.trySetScreenDriveType = async function trySetScreenDriveType(addr, portAddr, scanBoardAddr, driverType) {
    const req = createSetScreenDriveType(addr, portAddr, scanBoardAddr, false, driverType);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScreenDriveType.js.map