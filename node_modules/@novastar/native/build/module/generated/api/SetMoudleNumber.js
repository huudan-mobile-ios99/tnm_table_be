import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetMoudleNumber(addr, portAddr, scanBoardAddr, bBroadcast, MoudleNumber) {
    const $data = encodeUIntLE(MoudleNumber, AddressMapping.ScannerMoudleNumberOccupancy);
    const req = new Request($data, bBroadcast, 'SetMoudleNumber');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScanneMoudleNumberAddr;
    return req;
}
Session.prototype.SetMoudleNumber = async function SetMoudleNumber(addr, portAddr, scanBoardAddr, bBroadcast, MoudleNumber) {
    const req = createSetMoudleNumber(addr, portAddr, scanBoardAddr, bBroadcast, MoudleNumber);
    await this.connection.send(req);
};
Session.prototype.trySetMoudleNumber = async function trySetMoudleNumber(addr, portAddr, scanBoardAddr, MoudleNumber) {
    const req = createSetMoudleNumber(addr, portAddr, scanBoardAddr, false, MoudleNumber);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetMoudleNumber.js.map