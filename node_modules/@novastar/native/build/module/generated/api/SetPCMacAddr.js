import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetPCMacAddr(addr, portAddr, scanBoardAddr, bBroadcast, sendCardSn) {
    if (sendCardSn.length !== AddressMapping.PCMacAddrOccupancy)
        throw new TypeError(`Invalid buffer size: ${sendCardSn.length}`);
    const req = new Request(sendCardSn, bBroadcast, 'SetPCMacAddr');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.PCMacAddrAddr;
    return req;
}
Session.prototype.SetPCMacAddr = async function SetPCMacAddr(addr, portAddr, scanBoardAddr, bBroadcast, sendCardSn) {
    const req = createSetPCMacAddr(addr, portAddr, scanBoardAddr, bBroadcast, sendCardSn);
    await this.connection.send(req);
};
Session.prototype.trySetPCMacAddr = async function trySetPCMacAddr(addr, portAddr, scanBoardAddr, sendCardSn) {
    const req = createSetPCMacAddr(addr, portAddr, scanBoardAddr, false, sendCardSn);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetPCMacAddr.js.map