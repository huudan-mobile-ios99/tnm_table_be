import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetVirtualWindowBmpTimeoutSet(addr, bBroadcast, virtuaWindowBmpTimeoutSet) {
    const $data = encodeUIntLE(virtuaWindowBmpTimeoutSet, AddressMapping.VirtualWindowBmpTimeoutSetOccupancy);
    const req = new Request($data, bBroadcast, 'SetVirtualWindowBmpTimeoutSet');
    req.destination = addr;
    req.address = AddressMapping.VirtualWindowBmpTimeoutSetAddr;
    return req;
}
Session.prototype.SetVirtualWindowBmpTimeoutSet = async function SetVirtualWindowBmpTimeoutSet(addr, bBroadcast, virtuaWindowBmpTimeoutSet) {
    const req = createSetVirtualWindowBmpTimeoutSet(addr, bBroadcast, virtuaWindowBmpTimeoutSet);
    await this.connection.send(req);
};
Session.prototype.trySetVirtualWindowBmpTimeoutSet =
    async function trySetVirtualWindowBmpTimeoutSet(addr, virtuaWindowBmpTimeoutSet) {
        const req = createSetVirtualWindowBmpTimeoutSet(addr, false, virtuaWindowBmpTimeoutSet);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetVirtualWindowBmpTimeoutSet.js.map