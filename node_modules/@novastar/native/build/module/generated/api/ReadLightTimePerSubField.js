import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadLightTimePerSubField(addr, portAddr, scanBoardAddr) {
    const req = new Request(AddressMapping.LightTimePerSubFieldOccupancy, 'ReadLightTimePerSubField');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.LightTimePerSubFieldAddr;
    return req;
}
Session.prototype.ReadLightTimePerSubField = async function ReadLightTimePerSubField(addr, portAddr, scanBoardAddr) {
    const req = createReadLightTimePerSubField(addr, portAddr, scanBoardAddr);
    return decodeUIntLE(await this.connection.send(req));
};
Session.prototype.tryReadLightTimePerSubField = async function tryReadLightTimePerSubField(addr, portAddr, scanBoardAddr) {
    const req = createReadLightTimePerSubField(addr, portAddr, scanBoardAddr);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadLightTimePerSubField.js.map