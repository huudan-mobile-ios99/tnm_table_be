import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetDataDirection(addr, portAddr, scanBoardAddr, bBroadcast, dataDriection) {
    const $data = encodeUIntLE(dataDriection, AddressMapping.DataDirectionOccupancy);
    const req = new Request($data, bBroadcast, 'SetDataDirection');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.DataDirectionAddr;
    return req;
}
Session.prototype.SetDataDirection = async function SetDataDirection(addr, portAddr, scanBoardAddr, bBroadcast, dataDriection) {
    const req = createSetDataDirection(addr, portAddr, scanBoardAddr, bBroadcast, dataDriection);
    await this.connection.send(req);
};
Session.prototype.trySetDataDirection = async function trySetDataDirection(addr, portAddr, scanBoardAddr, dataDriection) {
    const req = createSetDataDirection(addr, portAddr, scanBoardAddr, false, dataDriection);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetDataDirection.js.map