import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createWriteScannerResetCycleNum(addr, portAddr, scanBoardAddr, bBroadcast, cycleNum, length) {
    const $data = encodeUIntLE(cycleNum, AddressMapping.ResetCycleNumPointOccupancy);
    const req = new Request($data, bBroadcast, 'WriteScannerResetCycleNum');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScannerResetCycleNumAddr;
    return req;
}
Session.prototype.WriteScannerResetCycleNum = async function WriteScannerResetCycleNum(addr, portAddr, scanBoardAddr, bBroadcast, cycleNum, length) {
    const req = createWriteScannerResetCycleNum(addr, portAddr, scanBoardAddr, bBroadcast, cycleNum, length);
    await this.connection.send(req);
};
Session.prototype.tryWriteScannerResetCycleNum = async function tryWriteScannerResetCycleNum(addr, portAddr, scanBoardAddr, cycleNum, length) {
    const req = createWriteScannerResetCycleNum(addr, portAddr, scanBoardAddr, false, cycleNum, length);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=WriteScannerResetCycleNum.js.map