import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadSender_EnableGammaOfHWPro(addr) {
    const req = new Request(AddressMapping.Sender_EnableGammaOccupancy, 'ReadSender_EnableGammaOfHWPro');
    req.destination = addr;
    req.address = AddressMapping.Sender_EnableGammaAddr;
    return req;
}
Session.prototype.ReadSender_EnableGammaOfHWPro = async function ReadSender_EnableGammaOfHWPro(addr) {
    const req = createReadSender_EnableGammaOfHWPro(addr);
    return decodeUIntLE(await this.connection.send(req));
};
Session.prototype.tryReadSender_EnableGammaOfHWPro =
    async function tryReadSender_EnableGammaOfHWPro(addr) {
        const req = createReadSender_EnableGammaOfHWPro(addr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=ReadSender_EnableGammaOfHWPro.js.map