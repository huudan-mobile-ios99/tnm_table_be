import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetVRedBrightness(addr, portAddr, scanBoardAddr, bBroadcast, vRedBrightness) {
    const $data = encodeUIntLE(vRedBrightness, AddressMapping.VRedBrightnessOccupancy);
    const req = new Request($data, bBroadcast, 'SetVRedBrightness');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.VRedBrightnessAddr;
    return req;
}
Session.prototype.SetVRedBrightness = async function SetVRedBrightness(addr, portAddr, scanBoardAddr, bBroadcast, vRedBrightness) {
    const req = createSetVRedBrightness(addr, portAddr, scanBoardAddr, bBroadcast, vRedBrightness);
    await this.connection.send(req);
};
Session.prototype.trySetVRedBrightness = async function trySetVRedBrightness(addr, portAddr, scanBoardAddr, vRedBrightness) {
    const req = createSetVRedBrightness(addr, portAddr, scanBoardAddr, false, vRedBrightness);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetVRedBrightness.js.map