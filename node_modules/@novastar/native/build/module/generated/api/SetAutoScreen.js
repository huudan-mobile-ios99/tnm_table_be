import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetAutoScreen(addr, bBroadcast, data) {
    if (data.length !== AddressMapping.AutoScreenSettingOccupancy)
        throw new TypeError(`Invalid buffer size: ${data.length}`);
    const req = new Request(data, bBroadcast, 'SetAutoScreen');
    req.destination = addr;
    req.address = AddressMapping.AutoScreenSettingAddr;
    return req;
}
Session.prototype.SetAutoScreen = async function SetAutoScreen(addr, bBroadcast, data) {
    const req = createSetAutoScreen(addr, bBroadcast, data);
    await this.connection.send(req);
};
Session.prototype.trySetAutoScreen = async function trySetAutoScreen(addr, data) {
    const req = createSetAutoScreen(addr, false, data);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetAutoScreen.js.map