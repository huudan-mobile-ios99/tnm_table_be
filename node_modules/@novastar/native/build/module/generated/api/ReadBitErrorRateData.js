import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadBitErrorRateData(addr, portAddr, scanBoardAddr) {
    const req = new Request(AddressMapping.BitErrorRateOccupancy, 'ReadBitErrorRateData');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.BitErrorRateAddr;
    return req;
}
Session.prototype.ReadBitErrorRateData = async function ReadBitErrorRateData(addr, portAddr, scanBoardAddr) {
    const req = createReadBitErrorRateData(addr, portAddr, scanBoardAddr);
    return (await this.connection.send(req)).data;
};
Session.prototype.tryReadBitErrorRateData = async function tryReadBitErrorRateData(addr, portAddr, scanBoardAddr) {
    const req = createReadBitErrorRateData(addr, portAddr, scanBoardAddr);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadBitErrorRateData.js.map