import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadGroupSwapInfo_1(addr, portAddr, scanBoardAddr, readLength) {
    const req = new Request(readLength, 'ReadGroupSwapInfo_1');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.GroupSwapInfoAndEnAddr;
    return req;
}
Session.prototype.ReadGroupSwapInfo_1 = async function ReadGroupSwapInfo_1(addr, portAddr, scanBoardAddr, readLength) {
    const req = createReadGroupSwapInfo_1(addr, portAddr, scanBoardAddr, readLength);
    return (await this.connection.send(req)).data;
};
Session.prototype.tryReadGroupSwapInfo_1 = async function tryReadGroupSwapInfo_1(addr, portAddr, scanBoardAddr, readLength) {
    const req = createReadGroupSwapInfo_1(addr, portAddr, scanBoardAddr, readLength);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadGroupSwapInfo_1.js.map