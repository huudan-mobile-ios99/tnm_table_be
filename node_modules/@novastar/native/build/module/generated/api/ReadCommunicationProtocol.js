import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadCommunicationProtocol(addr) {
    const req = new Request(AddressMapping.CommunicationProtocolOccupancy, 'ReadCommunicationProtocol');
    req.destination = addr;
    req.address = AddressMapping.CommunicationProtocolAddr;
    return req;
}
Session.prototype.ReadCommunicationProtocol = async function ReadCommunicationProtocol(addr) {
    const req = createReadCommunicationProtocol(addr);
    return decodeUIntLE(await this.connection.send(req));
};
Session.prototype.tryReadCommunicationProtocol = async function tryReadCommunicationProtocol(addr) {
    const req = createReadCommunicationProtocol(addr);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadCommunicationProtocol.js.map