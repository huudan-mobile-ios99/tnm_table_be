import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_VideoMosaicData(addr, bBoradcast, data) {
    if (data.length !== AddressMapping.Sender_VideoMosaicOccupancy)
        throw new TypeError(`Invalid buffer size: ${data.length}`);
    const req = new Request(data, bBoradcast, 'SetSender_VideoMosaicData');
    req.destination = addr;
    req.address = AddressMapping.Sender_VideoMosaicAddr;
    return req;
}
Session.prototype.SetSender_VideoMosaicData = async function SetSender_VideoMosaicData(addr, bBoradcast, data) {
    const req = createSetSender_VideoMosaicData(addr, bBoradcast, data);
    await this.connection.send(req);
};
Session.prototype.trySetSender_VideoMosaicData = async function trySetSender_VideoMosaicData(addr, data) {
    const req = createSetSender_VideoMosaicData(addr, false, data);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_VideoMosaicData.js.map