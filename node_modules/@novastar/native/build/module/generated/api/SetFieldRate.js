import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetFieldRate(addr, bBroadcast, setFieldRate) {
    const $data = encodeUIntLE(setFieldRate, AddressMapping.SetFieldRateOccupancy);
    const req = new Request($data, bBroadcast, 'SetFieldRate');
    req.destination = addr;
    req.address = AddressMapping.SetFieldRateAddr;
    return req;
}
Session.prototype.SetFieldRate = async function SetFieldRate(addr, bBroadcast, setFieldRate) {
    const req = createSetFieldRate(addr, bBroadcast, setFieldRate);
    await this.connection.send(req);
};
Session.prototype.trySetFieldRate = async function trySetFieldRate(addr, setFieldRate) {
    const req = createSetFieldRate(addr, false, setFieldRate);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetFieldRate.js.map