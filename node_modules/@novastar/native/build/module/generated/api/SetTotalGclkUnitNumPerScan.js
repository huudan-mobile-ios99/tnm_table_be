import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetTotalGclkUnitNumPerScan(addr, portAddr, scanBoardAddr, bBroadcast, totalGclk) {
    const $data = encodeUIntLE(totalGclk, AddressMapping.TotalGclkUnitNumPerScanOccupancy);
    const req = new Request($data, bBroadcast, 'SetTotalGclkUnitNumPerScan');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.TotalGclkUnitNumPerScanAddr;
    return req;
}
Session.prototype.SetTotalGclkUnitNumPerScan = async function SetTotalGclkUnitNumPerScan(addr, portAddr, scanBoardAddr, bBroadcast, totalGclk) {
    const req = createSetTotalGclkUnitNumPerScan(addr, portAddr, scanBoardAddr, bBroadcast, totalGclk);
    await this.connection.send(req);
};
Session.prototype.trySetTotalGclkUnitNumPerScan = async function trySetTotalGclkUnitNumPerScan(addr, portAddr, scanBoardAddr, totalGclk) {
    const req = createSetTotalGclkUnitNumPerScan(addr, portAddr, scanBoardAddr, false, totalGclk);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetTotalGclkUnitNumPerScan.js.map