import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetBlankUnitNumPerScan(addr, portAddr, scanBoardAddr, bBroadcast, blankUnitNumPerScan) {
    const $data = encodeUIntLE(blankUnitNumPerScan, AddressMapping.BlankUnitNumPerScanOccupancy);
    const req = new Request($data, bBroadcast, 'SetBlankUnitNumPerScan');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.BlankUnitNumPerScanAddr;
    return req;
}
Session.prototype.SetBlankUnitNumPerScan = async function SetBlankUnitNumPerScan(addr, portAddr, scanBoardAddr, bBroadcast, blankUnitNumPerScan) {
    const req = createSetBlankUnitNumPerScan(addr, portAddr, scanBoardAddr, bBroadcast, blankUnitNumPerScan);
    await this.connection.send(req);
};
Session.prototype.trySetBlankUnitNumPerScan = async function trySetBlankUnitNumPerScan(addr, portAddr, scanBoardAddr, blankUnitNumPerScan) {
    const req = createSetBlankUnitNumPerScan(addr, portAddr, scanBoardAddr, false, blankUnitNumPerScan);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetBlankUnitNumPerScan.js.map