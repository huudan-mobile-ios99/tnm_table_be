import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSenderLowDelayEnable(addr, bBroadcast, enableLowDelay) {
    const req = new Request(enableLowDelay ? [120] : [0], bBroadcast, 'SetSenderLowDelayEnable');
    req.destination = addr;
    req.address = AddressMapping.LowDelayAddr;
    return req;
}
Session.prototype.SetSenderLowDelayEnable = async function SetSenderLowDelayEnable(addr, bBroadcast, enableLowDelay) {
    const req = createSetSenderLowDelayEnable(addr, bBroadcast, enableLowDelay);
    await this.connection.send(req);
};
Session.prototype.trySetSenderLowDelayEnable = async function trySetSenderLowDelayEnable(addr, enableLowDelay) {
    const req = createSetSenderLowDelayEnable(addr, false, enableLowDelay);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSenderLowDelayEnable.js.map