import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetGclkNumPerScan(addr, portAddr, scanBoardAddr, bBroadcast, gclkNumPerScan) {
    const $data = encodeUIntLE(gclkNumPerScan, AddressMapping.GclkNumPerScanOccupancy);
    const req = new Request($data, bBroadcast, 'SetGclkNumPerScan');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.GclkNumPerScanAddr;
    return req;
}
Session.prototype.SetGclkNumPerScan = async function SetGclkNumPerScan(addr, portAddr, scanBoardAddr, bBroadcast, gclkNumPerScan) {
    const req = createSetGclkNumPerScan(addr, portAddr, scanBoardAddr, bBroadcast, gclkNumPerScan);
    await this.connection.send(req);
};
Session.prototype.trySetGclkNumPerScan = async function trySetGclkNumPerScan(addr, portAddr, scanBoardAddr, gclkNumPerScan) {
    const req = createSetGclkNumPerScan(addr, portAddr, scanBoardAddr, false, gclkNumPerScan);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetGclkNumPerScan.js.map