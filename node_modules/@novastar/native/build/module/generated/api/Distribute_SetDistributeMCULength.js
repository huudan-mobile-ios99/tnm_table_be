import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createDistribute_SetDistributeMCULength(addr, portAddr, distributeAddr, bBroadcast, mcuLength) {
    const $data = encodeUIntLE(mcuLength, AddressMapping.Distribute_MCUProgramLengthOccupancy);
    const req = new Request($data, bBroadcast, 'Distribute_SetDistributeMCULength');
    req.destination = addr;
    req.deviceType = 3;
    req.port = portAddr;
    req.rcvIndex = distributeAddr;
    req.address = AddressMapping.Distribute_MCUProgramLengthAddr;
    return req;
}
Session.prototype.Distribute_SetDistributeMCULength =
    async function Distribute_SetDistributeMCULength(addr, portAddr, distributeAddr, bBroadcast, mcuLength) {
        const req = createDistribute_SetDistributeMCULength(addr, portAddr, distributeAddr, bBroadcast, mcuLength);
        await this.connection.send(req);
    };
Session.prototype.tryDistribute_SetDistributeMCULength =
    async function tryDistribute_SetDistributeMCULength(addr, portAddr, distributeAddr, mcuLength) {
        const req = createDistribute_SetDistributeMCULength(addr, portAddr, distributeAddr, false, mcuLength);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=Distribute_SetDistributeMCULength.js.map