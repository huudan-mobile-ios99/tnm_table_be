import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadSUM2033GammaSwitchState(addr, portAddr, scanBoardAddr, readLength) {
    const req = new Request(readLength, 'ReadSUM2033GammaSwitchState');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.SUM2033WriteGammaSwitchStateAddr;
    return req;
}
Session.prototype.ReadSUM2033GammaSwitchState = async function ReadSUM2033GammaSwitchState(addr, portAddr, scanBoardAddr, readLength) {
    const req = createReadSUM2033GammaSwitchState(addr, portAddr, scanBoardAddr, readLength);
    return (await this.connection.send(req)).data;
};
Session.prototype.tryReadSUM2033GammaSwitchState = async function tryReadSUM2033GammaSwitchState(addr, portAddr, scanBoardAddr, readLength) {
    const req = createReadSUM2033GammaSwitchState(addr, portAddr, scanBoardAddr, readLength);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadSUM2033GammaSwitchState.js.map