import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_HDRState(addr, bBroadcast, enableHDRState) {
    const req = new Request(enableHDRState ? [88] : [0], bBroadcast, 'SetSender_HDRState');
    req.destination = addr;
    req.address = AddressMapping.HDRInfoAddr;
    return req;
}
Session.prototype.SetSender_HDRState = async function SetSender_HDRState(addr, bBroadcast, enableHDRState) {
    const req = createSetSender_HDRState(addr, bBroadcast, enableHDRState);
    await this.connection.send(req);
};
Session.prototype.trySetSender_HDRState = async function trySetSender_HDRState(addr, enableHDRState) {
    const req = createSetSender_HDRState(addr, false, enableHDRState);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_HDRState.js.map