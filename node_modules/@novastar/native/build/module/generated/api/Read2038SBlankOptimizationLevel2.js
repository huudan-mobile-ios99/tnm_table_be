import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createRead2038SBlankOptimizationLevel2(addr, portAddr, scanBoardAddr) {
    const req = new Request(AddressMapping.Scanner_BlankOptimizationLevelOccupancy, 'Read2038SBlankOptimizationLevel2');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Scanner_2038SBlankOptimizationLevelAddr2;
    return req;
}
Session.prototype.Read2038SBlankOptimizationLevel2 =
    async function Read2038SBlankOptimizationLevel2(addr, portAddr, scanBoardAddr) {
        const req = createRead2038SBlankOptimizationLevel2(addr, portAddr, scanBoardAddr);
        return decodeUIntLE(await this.connection.send(req));
    };
Session.prototype.tryRead2038SBlankOptimizationLevel2 =
    async function tryRead2038SBlankOptimizationLevel2(addr, portAddr, scanBoardAddr) {
        const req = createRead2038SBlankOptimizationLevel2(addr, portAddr, scanBoardAddr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=Read2038SBlankOptimizationLevel2.js.map