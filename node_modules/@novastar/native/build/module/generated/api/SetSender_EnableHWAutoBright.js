import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_EnableHWAutoBright(addr, bBroadcast, enableAutoData) {
    const req = new Request(enableAutoData ? [125] : [255], bBroadcast, 'SetSender_EnableHWAutoBright');
    req.destination = addr;
    req.address = AddressMapping.Sender_EnableHWAutoBrightAddr;
    return req;
}
Session.prototype.SetSender_EnableHWAutoBright = async function SetSender_EnableHWAutoBright(addr, bBroadcast, enableAutoData) {
    const req = createSetSender_EnableHWAutoBright(addr, bBroadcast, enableAutoData);
    await this.connection.send(req);
};
Session.prototype.trySetSender_EnableHWAutoBright = async function trySetSender_EnableHWAutoBright(addr, enableAutoData) {
    const req = createSetSender_EnableHWAutoBright(addr, false, enableAutoData);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_EnableHWAutoBright.js.map