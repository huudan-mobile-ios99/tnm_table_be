import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetGgain(addr, portAddr, scanBoardAddr, bBroadcast, ggain) {
    const $data = encodeUIntLE(ggain, AddressMapping.GgainOccupancy);
    const req = new Request($data, bBroadcast, 'SetGgain');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.GgainAddr;
    return req;
}
Session.prototype.SetGgain = async function SetGgain(addr, portAddr, scanBoardAddr, bBroadcast, ggain) {
    const req = createSetGgain(addr, portAddr, scanBoardAddr, bBroadcast, ggain);
    await this.connection.send(req);
};
Session.prototype.trySetGgain = async function trySetGgain(addr, portAddr, scanBoardAddr, ggain) {
    const req = createSetGgain(addr, portAddr, scanBoardAddr, false, ggain);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetGgain.js.map