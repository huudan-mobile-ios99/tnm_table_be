import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScanMode(addr, portAddr, scanBoardAddr, bBroadcast, scanMode) {
    const $data = encodeUIntLE(scanMode, AddressMapping.ScanModeOccupancy);
    const req = new Request($data, bBroadcast, 'SetScanMode');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScanModeAddr;
    return req;
}
Session.prototype.SetScanMode = async function SetScanMode(addr, portAddr, scanBoardAddr, bBroadcast, scanMode) {
    const req = createSetScanMode(addr, portAddr, scanBoardAddr, bBroadcast, scanMode);
    await this.connection.send(req);
};
Session.prototype.trySetScanMode = async function trySetScanMode(addr, portAddr, scanBoardAddr, scanMode) {
    const req = createSetScanMode(addr, portAddr, scanBoardAddr, false, scanMode);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScanMode.js.map