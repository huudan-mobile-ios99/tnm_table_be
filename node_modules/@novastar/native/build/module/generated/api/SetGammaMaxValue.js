import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetGammaMaxValue(addr, portAddr, scanBoardAddr, bBroadcast, GammaMaxValue2053) {
    const $data = encodeUIntLE(GammaMaxValue2053, AddressMapping.GammaMaxValue2053Occupancy);
    const req = new Request($data, bBroadcast, 'SetGammaMaxValue');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.GammaMaxValue2053Addr;
    return req;
}
Session.prototype.SetGammaMaxValue = async function SetGammaMaxValue(addr, portAddr, scanBoardAddr, bBroadcast, GammaMaxValue2053) {
    const req = createSetGammaMaxValue(addr, portAddr, scanBoardAddr, bBroadcast, GammaMaxValue2053);
    await this.connection.send(req);
};
Session.prototype.trySetGammaMaxValue = async function trySetGammaMaxValue(addr, portAddr, scanBoardAddr, GammaMaxValue2053) {
    const req = createSetGammaMaxValue(addr, portAddr, scanBoardAddr, false, GammaMaxValue2053);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetGammaMaxValue.js.map