import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetDviOffsetX(addr, bBroadcast, dviOffsetX, index) {
    const $data = encodeUIntLE(dviOffsetX, AddressMapping.DviOffsetXOccupancy);
    const req = new Request($data, bBroadcast, 'SetDviOffsetX');
    req.destination = addr;
    req.address = AddressMapping.DviOffsetXAddr + AddressMapping.DviOccupancy * index;
    return req;
}
Session.prototype.SetDviOffsetX = async function SetDviOffsetX(addr, bBroadcast, dviOffsetX, index) {
    const req = createSetDviOffsetX(addr, bBroadcast, dviOffsetX, index);
    await this.connection.send(req);
};
Session.prototype.trySetDviOffsetX = async function trySetDviOffsetX(addr, dviOffsetX, index) {
    const req = createSetDviOffsetX(addr, false, dviOffsetX, index);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetDviOffsetX.js.map