import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetControllerSnHigh(addr, controllerSnHigh) {
    if (controllerSnHigh.length !== AddressMapping.ControllerSnHighOccupancy)
        throw new TypeError(`Invalid buffer size: ${controllerSnHigh.length}`);
    const req = new Request(controllerSnHigh, false, 'SetControllerSnHigh');
    req.destination = addr;
    req.address = AddressMapping.ControllerSnHighAddr;
    return req;
}
Session.prototype.SetControllerSnHigh = async function SetControllerSnHigh(addr, controllerSnHigh) {
    const req = createSetControllerSnHigh(addr, controllerSnHigh);
    await this.connection.send(req);
};
Session.prototype.trySetControllerSnHigh = async function trySetControllerSnHigh(addr, controllerSnHigh) {
    const req = createSetControllerSnHigh(addr, controllerSnHigh);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetControllerSnHigh.js.map