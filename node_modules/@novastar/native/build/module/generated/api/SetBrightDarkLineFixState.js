import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetBrightDarkLineFixState(addr, portAddr, scanBoardAddr, bBroadcast, stateByte) {
    const req = new Request([stateByte], bBroadcast, 'SetBrightDarkLineFixState');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.BrightDarkLineFixStateAddr;
    return req;
}
Session.prototype.SetBrightDarkLineFixState = async function SetBrightDarkLineFixState(addr, portAddr, scanBoardAddr, bBroadcast, stateByte) {
    const req = createSetBrightDarkLineFixState(addr, portAddr, scanBoardAddr, bBroadcast, stateByte);
    await this.connection.send(req);
};
Session.prototype.trySetBrightDarkLineFixState = async function trySetBrightDarkLineFixState(addr, portAddr, scanBoardAddr, stateByte) {
    const req = createSetBrightDarkLineFixState(addr, portAddr, scanBoardAddr, false, stateByte);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetBrightDarkLineFixState.js.map