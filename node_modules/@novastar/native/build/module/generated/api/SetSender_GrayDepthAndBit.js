import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_GrayDepthAndBit(addr, bBroadcast, data) {
    if (data.length !== AddressMapping.Sender_GrayDepthAndBitOccupancy)
        throw new TypeError(`Invalid buffer size: ${data.length}`);
    const req = new Request(data, bBroadcast, 'SetSender_GrayDepthAndBit');
    req.destination = addr;
    req.address = AddressMapping.Sender_GrayDepthAndBitAddr;
    return req;
}
Session.prototype.SetSender_GrayDepthAndBit = async function SetSender_GrayDepthAndBit(addr, bBroadcast, data) {
    const req = createSetSender_GrayDepthAndBit(addr, bBroadcast, data);
    await this.connection.send(req);
};
Session.prototype.trySetSender_GrayDepthAndBit = async function trySetSender_GrayDepthAndBit(addr, data) {
    const req = createSetSender_GrayDepthAndBit(addr, false, data);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_GrayDepthAndBit.js.map