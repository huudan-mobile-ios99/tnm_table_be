import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetGroupSwapEn(addr, portAddr, scanBoardAddr, bBroadcast, isEnableGroupSwapEn) {
    const req = new Request(isEnableGroupSwapEn ? [5] : [0], bBroadcast, 'SetGroupSwapEn');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.GroupSwapEnAddr;
    return req;
}
Session.prototype.SetGroupSwapEn = async function SetGroupSwapEn(addr, portAddr, scanBoardAddr, bBroadcast, isEnableGroupSwapEn) {
    const req = createSetGroupSwapEn(addr, portAddr, scanBoardAddr, bBroadcast, isEnableGroupSwapEn);
    await this.connection.send(req);
};
Session.prototype.trySetGroupSwapEn = async function trySetGroupSwapEn(addr, portAddr, scanBoardAddr, isEnableGroupSwapEn) {
    const req = createSetGroupSwapEn(addr, portAddr, scanBoardAddr, false, isEnableGroupSwapEn);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetGroupSwapEn.js.map