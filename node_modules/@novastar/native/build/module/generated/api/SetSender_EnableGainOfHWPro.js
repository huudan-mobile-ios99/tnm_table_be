import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_EnableGainOfHWPro(addr, bBroadcast, isEnable) {
    const req = new Request([isEnable ? 91 : 255], bBroadcast, 'SetSender_EnableGainOfHWPro');
    req.destination = addr;
    req.address = AddressMapping.Sender_EnableGainAddr;
    return req;
}
Session.prototype.SetSender_EnableGainOfHWPro = async function SetSender_EnableGainOfHWPro(addr, bBroadcast, isEnable) {
    const req = createSetSender_EnableGainOfHWPro(addr, bBroadcast, isEnable);
    await this.connection.send(req);
};
Session.prototype.trySetSender_EnableGainOfHWPro = async function trySetSender_EnableGainOfHWPro(addr, isEnable) {
    const req = createSetSender_EnableGainOfHWPro(addr, false, isEnable);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_EnableGainOfHWPro.js.map