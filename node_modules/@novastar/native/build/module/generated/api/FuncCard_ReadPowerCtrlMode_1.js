import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createFuncCard_ReadPowerCtrlMode_1(addr, portAddr, funcCardAddr) {
    const req = new Request(AddressMapping.FuncCard_PowerCtrlModeOccupancy, 'FuncCard_ReadPowerCtrlMode_1');
    req.destination = addr;
    req.deviceType = 2;
    req.port = portAddr;
    req.rcvIndex = funcCardAddr;
    req.address = AddressMapping.FuncCard_PowerCtrlModeAddr;
    return req;
}
Session.prototype.FuncCard_ReadPowerCtrlMode_1 = async function FuncCard_ReadPowerCtrlMode_1(addr, portAddr, funcCardAddr) {
    const req = createFuncCard_ReadPowerCtrlMode_1(addr, portAddr, funcCardAddr);
    return decodeUIntLE(await this.connection.send(req));
};
Session.prototype.tryFuncCard_ReadPowerCtrlMode_1 = async function tryFuncCard_ReadPowerCtrlMode_1(addr, portAddr, funcCardAddr) {
    const req = createFuncCard_ReadPowerCtrlMode_1(addr, portAddr, funcCardAddr);
    return this.connection.trySend(req);
};
//# sourceMappingURL=FuncCard_ReadPowerCtrlMode_1.js.map