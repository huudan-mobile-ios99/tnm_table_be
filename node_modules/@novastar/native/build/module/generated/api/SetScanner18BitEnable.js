import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScanner18BitEnable(addr, portAddr, scanBoardAddr, bBroadcast, enable) {
    const req = new Request(enable ? [5] : [0], bBroadcast, 'SetScanner18BitEnable');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Scanner18BitEnableAddr;
    return req;
}
Session.prototype.SetScanner18BitEnable = async function SetScanner18BitEnable(addr, portAddr, scanBoardAddr, bBroadcast, enable) {
    const req = createSetScanner18BitEnable(addr, portAddr, scanBoardAddr, bBroadcast, enable);
    await this.connection.send(req);
};
Session.prototype.trySetScanner18BitEnable = async function trySetScanner18BitEnable(addr, portAddr, scanBoardAddr, enable) {
    const req = createSetScanner18BitEnable(addr, portAddr, scanBoardAddr, false, enable);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScanner18BitEnable.js.map