import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetDvi1Dvi0OffsetY(addr, bBroadcast, dvi1Dvi0OffsetY) {
    const $data = encodeUIntLE(dvi1Dvi0OffsetY, AddressMapping.Dvi1Dvi0OffsetYOccupancy);
    const req = new Request($data, bBroadcast, 'SetDvi1Dvi0OffsetY');
    req.destination = addr;
    req.address = AddressMapping.Dvi1Dvi0OffsetYAddr;
    return req;
}
Session.prototype.SetDvi1Dvi0OffsetY = async function SetDvi1Dvi0OffsetY(addr, bBroadcast, dvi1Dvi0OffsetY) {
    const req = createSetDvi1Dvi0OffsetY(addr, bBroadcast, dvi1Dvi0OffsetY);
    await this.connection.send(req);
};
Session.prototype.trySetDvi1Dvi0OffsetY = async function trySetDvi1Dvi0OffsetY(addr, dvi1Dvi0OffsetY) {
    const req = createSetDvi1Dvi0OffsetY(addr, false, dvi1Dvi0OffsetY);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetDvi1Dvi0OffsetY.js.map