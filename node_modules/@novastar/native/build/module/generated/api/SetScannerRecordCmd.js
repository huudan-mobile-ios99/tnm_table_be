import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScannerRecordCmd(addr, portAddr, scanBoardAddr, bBroadcast, bStartRecord) {
    const req = new Request(bStartRecord ? [1] : [0], bBroadcast, 'SetScannerRecordCmd');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.DoubleModelCardSpaceRecordCmd;
    return req;
}
Session.prototype.SetScannerRecordCmd = async function SetScannerRecordCmd(addr, portAddr, scanBoardAddr, bBroadcast, bStartRecord) {
    const req = createSetScannerRecordCmd(addr, portAddr, scanBoardAddr, bBroadcast, bStartRecord);
    await this.connection.send(req);
};
Session.prototype.trySetScannerRecordCmd = async function trySetScannerRecordCmd(addr, portAddr, scanBoardAddr, bStartRecord) {
    const req = createSetScannerRecordCmd(addr, portAddr, scanBoardAddr, false, bStartRecord);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScannerRecordCmd.js.map