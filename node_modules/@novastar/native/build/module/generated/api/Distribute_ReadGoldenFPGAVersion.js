import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createDistribute_ReadGoldenFPGAVersion(addr, portAddr, distributeAddr) {
    const req = new Request(AddressMapping.Distribute_GoldenFPGAVersionOccupancy, 'Distribute_ReadGoldenFPGAVersion');
    req.destination = addr;
    req.deviceType = 3;
    req.port = portAddr;
    req.rcvIndex = distributeAddr;
    req.address = AddressMapping.Distribute_GoldenFPGAVersionAddr;
    return req;
}
Session.prototype.Distribute_ReadGoldenFPGAVersion =
    async function Distribute_ReadGoldenFPGAVersion(addr, portAddr, distributeAddr) {
        const req = createDistribute_ReadGoldenFPGAVersion(addr, portAddr, distributeAddr);
        return decodeUIntLE(await this.connection.send(req));
    };
Session.prototype.tryDistribute_ReadGoldenFPGAVersion =
    async function tryDistribute_ReadGoldenFPGAVersion(addr, portAddr, distributeAddr) {
        const req = createDistribute_ReadGoldenFPGAVersion(addr, portAddr, distributeAddr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=Distribute_ReadGoldenFPGAVersion.js.map