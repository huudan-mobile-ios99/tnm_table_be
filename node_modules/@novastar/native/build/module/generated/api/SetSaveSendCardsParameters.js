import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSaveSendCardsParameters(addr, bBroadcast, saveSendCardsParameters) {
    const $data = encodeUIntLE(saveSendCardsParameters, AddressMapping.SaveSendCardsParametersOccupancy);
    const req = new Request($data, bBroadcast, 'SetSaveSendCardsParameters');
    req.destination = addr;
    req.address = AddressMapping.SaveSendCardsParametersAddr;
    return req;
}
Session.prototype.SetSaveSendCardsParameters = async function SetSaveSendCardsParameters(addr, bBroadcast, saveSendCardsParameters) {
    const req = createSetSaveSendCardsParameters(addr, bBroadcast, saveSendCardsParameters);
    await this.connection.send(req);
};
Session.prototype.trySetSaveSendCardsParameters = async function trySetSaveSendCardsParameters(addr, saveSendCardsParameters) {
    const req = createSetSaveSendCardsParameters(addr, false, saveSendCardsParameters);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSaveSendCardsParameters.js.map