import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScreenDecrypt(addr, portAddr, scanBoardAddr, bBroadcast, screenDecrypt) {
    const $data = encodeUIntLE(screenDecrypt, AddressMapping.ScreenDecryptOccupancy);
    const req = new Request($data, bBroadcast, 'SetScreenDecrypt');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScreenDecryptAddr;
    return req;
}
Session.prototype.SetScreenDecrypt = async function SetScreenDecrypt(addr, portAddr, scanBoardAddr, bBroadcast, screenDecrypt) {
    const req = createSetScreenDecrypt(addr, portAddr, scanBoardAddr, bBroadcast, screenDecrypt);
    await this.connection.send(req);
};
Session.prototype.trySetScreenDecrypt = async function trySetScreenDecrypt(addr, portAddr, scanBoardAddr, screenDecrypt) {
    const req = createSetScreenDecrypt(addr, portAddr, scanBoardAddr, false, screenDecrypt);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScreenDecrypt.js.map