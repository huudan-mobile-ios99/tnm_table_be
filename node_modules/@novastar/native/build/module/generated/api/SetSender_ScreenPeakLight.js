import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_ScreenPeakLight(addr, bBroadcast, data) {
    if (data.length !== AddressMapping.HDRScreenPeakLightOccupancy)
        throw new TypeError(`Invalid buffer size: ${data.length}`);
    const req = new Request(data, bBroadcast, 'SetSender_ScreenPeakLight');
    req.destination = addr;
    req.address = AddressMapping.HDRScreenPeakLightAddr;
    return req;
}
Session.prototype.SetSender_ScreenPeakLight = async function SetSender_ScreenPeakLight(addr, bBroadcast, data) {
    const req = createSetSender_ScreenPeakLight(addr, bBroadcast, data);
    await this.connection.send(req);
};
Session.prototype.trySetSender_ScreenPeakLight = async function trySetSender_ScreenPeakLight(addr, data) {
    const req = createSetSender_ScreenPeakLight(addr, false, data);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_ScreenPeakLight.js.map