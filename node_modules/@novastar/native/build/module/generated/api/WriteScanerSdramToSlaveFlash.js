import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createWriteScanerSdramToSlaveFlash(addr, portAddr, scanBoardAddr, bBroadcast) {
    const req = new Request([133], bBroadcast, 'WriteScanerSdramToSlaveFlash');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScannerSdramToSlaveFlash;
    return req;
}
Session.prototype.WriteScanerSdramToSlaveFlash = async function WriteScanerSdramToSlaveFlash(addr, portAddr, scanBoardAddr, bBroadcast) {
    const req = createWriteScanerSdramToSlaveFlash(addr, portAddr, scanBoardAddr, bBroadcast);
    await this.connection.send(req);
};
Session.prototype.tryWriteScanerSdramToSlaveFlash = async function tryWriteScanerSdramToSlaveFlash(addr, portAddr, scanBoardAddr) {
    const req = createWriteScanerSdramToSlaveFlash(addr, portAddr, scanBoardAddr, false);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=WriteScanerSdramToSlaveFlash.js.map