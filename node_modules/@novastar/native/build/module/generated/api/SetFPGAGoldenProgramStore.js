import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetFPGAGoldenProgramStore(addr, portAddr, scanBoardAddr, bBroadcast, FPGAGoldenProgramStore) {
    const $data = encodeUIntLE(FPGAGoldenProgramStore, AddressMapping.FPGAGoldenProgramStoreOccupancy);
    const req = new Request($data, bBroadcast, 'SetFPGAGoldenProgramStore');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.FPGAGoldenProgramStoreAddr;
    return req;
}
Session.prototype.SetFPGAGoldenProgramStore = async function SetFPGAGoldenProgramStore(addr, portAddr, scanBoardAddr, bBroadcast, FPGAGoldenProgramStore) {
    const req = createSetFPGAGoldenProgramStore(addr, portAddr, scanBoardAddr, bBroadcast, FPGAGoldenProgramStore);
    await this.connection.send(req);
};
Session.prototype.trySetFPGAGoldenProgramStore = async function trySetFPGAGoldenProgramStore(addr, portAddr, scanBoardAddr, FPGAGoldenProgramStore) {
    const req = createSetFPGAGoldenProgramStore(addr, portAddr, scanBoardAddr, false, FPGAGoldenProgramStore);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetFPGAGoldenProgramStore.js.map