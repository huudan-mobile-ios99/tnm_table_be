import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetHalfFreqSetMode(addr, portAddr, scanBoardAddr, bBroadcast, totalDataGroupNum) {
    const $data = encodeUIntLE(totalDataGroupNum, AddressMapping.PhysicalTotalDataGroupNumOccupancy);
    const req = new Request($data, bBroadcast, 'SetHalfFreqSetMode');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.HalfFreqSetModeAddr;
    return req;
}
Session.prototype.SetHalfFreqSetMode = async function SetHalfFreqSetMode(addr, portAddr, scanBoardAddr, bBroadcast, totalDataGroupNum) {
    const req = createSetHalfFreqSetMode(addr, portAddr, scanBoardAddr, bBroadcast, totalDataGroupNum);
    await this.connection.send(req);
};
Session.prototype.trySetHalfFreqSetMode = async function trySetHalfFreqSetMode(addr, portAddr, scanBoardAddr, totalDataGroupNum) {
    const req = createSetHalfFreqSetMode(addr, portAddr, scanBoardAddr, false, totalDataGroupNum);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetHalfFreqSetMode.js.map