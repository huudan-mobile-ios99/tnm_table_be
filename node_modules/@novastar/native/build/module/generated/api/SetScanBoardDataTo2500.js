import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetScanBoardDataTo2500(addr, portIndex, scanIndex, data, length) {
    if (data.length !== length)
        throw new TypeError(`Invalid buffer size: ${data.length}`);
    const req = new Request(data, false, 'SetScanBoardDataTo2500');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portIndex;
    req.rcvIndex = scanIndex;
    req.address = AddressMapping.SDKNewReadOrWriteAddr;
    return req;
}
Session.prototype.SetScanBoardDataTo2500 = async function SetScanBoardDataTo2500(addr, portIndex, scanIndex, data, length) {
    const req = createSetScanBoardDataTo2500(addr, portIndex, scanIndex, data, length);
    await this.connection.send(req);
};
Session.prototype.trySetScanBoardDataTo2500 = async function trySetScanBoardDataTo2500(addr, portIndex, scanIndex, data, length) {
    const req = createSetScanBoardDataTo2500(addr, portIndex, scanIndex, data, length);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScanBoardDataTo2500.js.map