import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetRecaculateParameter(addr, portAddr, scanBoardAddr, bBroadcast, recaculateParameter) {
    const $data = encodeUIntLE(recaculateParameter, AddressMapping.RecaculateParameterOccupancy);
    const req = new Request($data, bBroadcast, 'SetRecaculateParameter');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.RecaculateParameterAddr;
    return req;
}
Session.prototype.SetRecaculateParameter = async function SetRecaculateParameter(addr, portAddr, scanBoardAddr, bBroadcast, recaculateParameter) {
    const req = createSetRecaculateParameter(addr, portAddr, scanBoardAddr, bBroadcast, recaculateParameter);
    await this.connection.send(req);
};
Session.prototype.trySetRecaculateParameter = async function trySetRecaculateParameter(addr, portAddr, scanBoardAddr, recaculateParameter) {
    const req = createSetRecaculateParameter(addr, portAddr, scanBoardAddr, false, recaculateParameter);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetRecaculateParameter.js.map