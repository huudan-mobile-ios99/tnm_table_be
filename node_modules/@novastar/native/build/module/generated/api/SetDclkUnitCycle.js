import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetDclkUnitCycle(addr, portAddr, scanBoardAddr, bBroadcast, dclkUnitCycle) {
    const $data = encodeUIntLE(dclkUnitCycle, AddressMapping.DclkUnitCycleOccupancy);
    const req = new Request($data, bBroadcast, 'SetDclkUnitCycle');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.DclkUnitCycleAddr;
    return req;
}
Session.prototype.SetDclkUnitCycle = async function SetDclkUnitCycle(addr, portAddr, scanBoardAddr, bBroadcast, dclkUnitCycle) {
    const req = createSetDclkUnitCycle(addr, portAddr, scanBoardAddr, bBroadcast, dclkUnitCycle);
    await this.connection.send(req);
};
Session.prototype.trySetDclkUnitCycle = async function trySetDclkUnitCycle(addr, portAddr, scanBoardAddr, dclkUnitCycle) {
    const req = createSetDclkUnitCycle(addr, portAddr, scanBoardAddr, false, dclkUnitCycle);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetDclkUnitCycle.js.map