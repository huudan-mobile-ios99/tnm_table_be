import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadRedBrightness(addr, portAddr, scanBoardAddr) {
    const req = new Request(AddressMapping.RedBrightnessOccupancy, 'ReadRedBrightness');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.RedBrightnessAddr;
    return req;
}
Session.prototype.ReadRedBrightness = async function ReadRedBrightness(addr, portAddr, scanBoardAddr) {
    const req = createReadRedBrightness(addr, portAddr, scanBoardAddr);
    return decodeUIntLE(await this.connection.send(req));
};
Session.prototype.tryReadRedBrightness = async function tryReadRedBrightness(addr, portAddr, scanBoardAddr) {
    const req = createReadRedBrightness(addr, portAddr, scanBoardAddr);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadRedBrightness.js.map