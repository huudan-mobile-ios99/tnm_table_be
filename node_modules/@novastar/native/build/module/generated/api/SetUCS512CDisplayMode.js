import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetUCS512CDisplayMode(addr, portAddr, scanBoardAddr, bBroadcast, displayMode) {
    const $data = encodeUIntLE(displayMode, AddressMapping.GrayBitOccupancy);
    const req = new Request($data, bBroadcast, 'SetUCS512CDisplayMode');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.UCS512CDisplayModeAddr;
    return req;
}
Session.prototype.SetUCS512CDisplayMode = async function SetUCS512CDisplayMode(addr, portAddr, scanBoardAddr, bBroadcast, displayMode) {
    const req = createSetUCS512CDisplayMode(addr, portAddr, scanBoardAddr, bBroadcast, displayMode);
    await this.connection.send(req);
};
Session.prototype.trySetUCS512CDisplayMode = async function trySetUCS512CDisplayMode(addr, portAddr, scanBoardAddr, displayMode) {
    const req = createSetUCS512CDisplayMode(addr, portAddr, scanBoardAddr, false, displayMode);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetUCS512CDisplayMode.js.map