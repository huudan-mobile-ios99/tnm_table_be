import { decodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadScanCardGoldenFPGAProgramVerion(addr, portAddr, scanBoardAddr) {
    const req = new Request(AddressMapping.ScanCardGoldenFPGAProgramVerionOccupancy, 'ReadScanCardGoldenFPGAProgramVerion');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.ScanCardGoldenFPGAProgramVerionAddr;
    return req;
}
Session.prototype.ReadScanCardGoldenFPGAProgramVerion =
    async function ReadScanCardGoldenFPGAProgramVerion(addr, portAddr, scanBoardAddr) {
        const req = createReadScanCardGoldenFPGAProgramVerion(addr, portAddr, scanBoardAddr);
        return decodeUIntLE(await this.connection.send(req));
    };
Session.prototype.tryReadScanCardGoldenFPGAProgramVerion =
    async function tryReadScanCardGoldenFPGAProgramVerion(addr, portAddr, scanBoardAddr) {
        const req = createReadScanCardGoldenFPGAProgramVerion(addr, portAddr, scanBoardAddr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=ReadScanCardGoldenFPGAProgramVerion.js.map