import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_DVIResolutionWidth(addr, bBroadcast, dviWidth) {
    const $data = encodeUIntLE(dviWidth, AddressMapping.Sender_DVIWidthOccupancy);
    const req = new Request($data, bBroadcast, 'SetSender_DVIResolutionWidth');
    req.destination = addr;
    req.address = AddressMapping.Sender_DVIWidthAddr;
    return req;
}
Session.prototype.SetSender_DVIResolutionWidth = async function SetSender_DVIResolutionWidth(addr, bBroadcast, dviWidth) {
    const req = createSetSender_DVIResolutionWidth(addr, bBroadcast, dviWidth);
    await this.connection.send(req);
};
Session.prototype.trySetSender_DVIResolutionWidth = async function trySetSender_DVIResolutionWidth(addr, dviWidth) {
    const req = createSetSender_DVIResolutionWidth(addr, false, dviWidth);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_DVIResolutionWidth.js.map