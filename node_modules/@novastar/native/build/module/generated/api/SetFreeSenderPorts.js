import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetFreeSenderPorts(senderAddr, bBroadcast, datas, portInde, freeIndex) {
    const req = new Request(datas, bBroadcast, 'SetFreeSenderPorts');
    req.destination = senderAddr;
    req.address = AddressMapping.SenderPortCardsAddr + portInde * 16384 + freeIndex * 16;
    return req;
}
Session.prototype.SetFreeSenderPorts = async function SetFreeSenderPorts(senderAddr, bBroadcast, datas, portInde, freeIndex) {
    const req = createSetFreeSenderPorts(senderAddr, bBroadcast, datas, portInde, freeIndex);
    await this.connection.send(req);
};
Session.prototype.trySetFreeSenderPorts = async function trySetFreeSenderPorts(senderAddr, datas, portInde, freeIndex) {
    const req = createSetFreeSenderPorts(senderAddr, false, datas, portInde, freeIndex);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetFreeSenderPorts.js.map