import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetStoreStartingLogoImage(addr, portAddr, scanBoardAddr, bBroadcast, storeStartingLogoImage) {
    const $data = encodeUIntLE(storeStartingLogoImage, AddressMapping.StoreStartingLogoImageOccupancy);
    const req = new Request($data, bBroadcast, 'SetStoreStartingLogoImage');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.StoreStartingLogoImageAddr;
    return req;
}
Session.prototype.SetStoreStartingLogoImage = async function SetStoreStartingLogoImage(addr, portAddr, scanBoardAddr, bBroadcast, storeStartingLogoImage) {
    const req = createSetStoreStartingLogoImage(addr, portAddr, scanBoardAddr, bBroadcast, storeStartingLogoImage);
    await this.connection.send(req);
};
Session.prototype.trySetStoreStartingLogoImage = async function trySetStoreStartingLogoImage(addr, portAddr, scanBoardAddr, storeStartingLogoImage) {
    const req = createSetStoreStartingLogoImage(addr, portAddr, scanBoardAddr, false, storeStartingLogoImage);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetStoreStartingLogoImage.js.map