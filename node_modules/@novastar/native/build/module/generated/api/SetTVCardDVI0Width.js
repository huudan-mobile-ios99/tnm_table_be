import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetTVCardDVI0Width(addr, portAddr, scanBoardAddr, bBroadcast, dviWidth) {
    const $data = encodeUIntLE(dviWidth, AddressMapping.TVCardDVI0WidthOccupancy);
    const req = new Request($data, bBroadcast, 'SetTVCardDVI0Width');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.TVCardDVI0WidthAddr;
    return req;
}
Session.prototype.SetTVCardDVI0Width = async function SetTVCardDVI0Width(addr, portAddr, scanBoardAddr, bBroadcast, dviWidth) {
    const req = createSetTVCardDVI0Width(addr, portAddr, scanBoardAddr, bBroadcast, dviWidth);
    await this.connection.send(req);
};
Session.prototype.trySetTVCardDVI0Width = async function trySetTVCardDVI0Width(addr, portAddr, scanBoardAddr, dviWidth) {
    const req = createSetTVCardDVI0Width(addr, portAddr, scanBoardAddr, false, dviWidth);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetTVCardDVI0Width.js.map