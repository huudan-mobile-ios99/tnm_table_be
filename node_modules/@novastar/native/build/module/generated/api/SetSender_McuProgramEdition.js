import { encodeUIntLE, Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createSetSender_McuProgramEdition(addr, portAddr, scanBoardAddr, bBroadcast, sender_McuProgramEdition) {
    const $data = encodeUIntLE(sender_McuProgramEdition, AddressMapping.Sender_McuProgramEditionOccupancy);
    const req = new Request($data, bBroadcast, 'SetSender_McuProgramEdition');
    req.destination = addr;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping.Sender_McuProgramEditionAddr;
    return req;
}
Session.prototype.SetSender_McuProgramEdition = async function SetSender_McuProgramEdition(addr, portAddr, scanBoardAddr, bBroadcast, sender_McuProgramEdition) {
    const req = createSetSender_McuProgramEdition(addr, portAddr, scanBoardAddr, bBroadcast, sender_McuProgramEdition);
    await this.connection.send(req);
};
Session.prototype.trySetSender_McuProgramEdition = async function trySetSender_McuProgramEdition(addr, portAddr, scanBoardAddr, sender_McuProgramEdition) {
    const req = createSetSender_McuProgramEdition(addr, portAddr, scanBoardAddr, false, sender_McuProgramEdition);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_McuProgramEdition.js.map