import { Request, Session } from '@novastar/codec';
import AddressMapping from '../AddressMapping';
export default function createReadEthernetPortScannerXY(addr, portIndex, scannerIndex) {
    const req = new Request(AddressMapping.EthernetPortScannerXOccupancy + AddressMapping.EthernetPortScannerYOccupancy, 'ReadEthernetPortScannerXY');
    req.destination = addr;
    req.address =
        AddressMapping.EthernetPortOccupancy * portIndex +
            AddressMapping.EthernetPortScannerXAddr +
            (AddressMapping.EthernetPortScannerXOccupancy + AddressMapping.EthernetPortScannerYOccupancy) *
                scannerIndex;
    return req;
}
Session.prototype.ReadEthernetPortScannerXY = async function ReadEthernetPortScannerXY(addr, portIndex, scannerIndex) {
    const req = createReadEthernetPortScannerXY(addr, portIndex, scannerIndex);
    return (await this.connection.send(req)).data;
};
Session.prototype.tryReadEthernetPortScannerXY = async function tryReadEthernetPortScannerXY(addr, portIndex, scannerIndex) {
    const req = createReadEthernetPortScannerXY(addr, portIndex, scannerIndex);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadEthernetPortScannerXY.js.map