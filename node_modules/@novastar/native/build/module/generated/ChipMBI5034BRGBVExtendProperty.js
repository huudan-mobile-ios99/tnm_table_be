import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipMBI5034BExtendProperty } from './ChipMBI5034BExtendProperty';
import { PointDetectParameter } from './PointDetectParameter';
export const ChipMBI5034BRGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: ChipMBI5034BExtendProperty,
        GreenProperty: ChipMBI5034BExtendProperty,
        BlueProperty: ChipMBI5034BExtendProperty,
        VRedProperty: ChipMBI5034BExtendProperty,
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
        IsAdvancedMode: common.Bool,
        PointDetectType: common.UInt8,
        FirstDataLen: common.Int32,
        FirstStartIndex: common.Int32,
        FirstRegisterAddr: common.Int32,
        PointDetectParameter,
    }),
], 'ChipMBI5034BRGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipMBI5034BRGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipMBI5034B.decompiled.cs:1370
 */
export const ChipMBI5034BRGBVExtendProperty = t.intersection([
    ChipMBI5034BRGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipMBI5034BRGBVExtendProperty') }),
], 'ChipMBI5034BRGBVExtendProperty');
//# sourceMappingURL=ChipMBI5034BRGBVExtendProperty.js.map