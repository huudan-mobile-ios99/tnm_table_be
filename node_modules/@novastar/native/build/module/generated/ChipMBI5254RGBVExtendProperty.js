import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipMBI5254ExtendProperty } from './ChipMBI5254ExtendProperty';
export const ChipMBI5254RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        REG_LENGTH: common.Int32_14,
    }),
    t.partial({
        RedProperty: ChipMBI5254ExtendProperty,
        GreenProperty: ChipMBI5254ExtendProperty,
        BlueProperty: ChipMBI5254ExtendProperty,
        VRedProperty: ChipMBI5254ExtendProperty,
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
        FailureLEDElimination: common.Bool,
        GclkAddedNumer: common.UInt8,
        EnGCLKMutiRate: common.Bool,
        SubField: common.UInt8,
        GrayDepth: common.UInt8,
        ScanCount: common.UInt8,
        IsAdvancedMode: common.Bool,
        SpecialDataLen: common.Int32,
        SpecialRegisterAddr: common.UInt32,
        FirstDataLen: common.Int32,
        FirstStartIndex: common.Int32,
        FirstRegisterAddr: common.Int32,
        ThirdDataLen: common.Int32,
    }),
], 'ChipMBI5254RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipMBI5254RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipMBI5254.decompiled.cs:1356
 */
export const ChipMBI5254RGBVExtendProperty = t.intersection([
    ChipMBI5254RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipMBI5254RGBVExtendProperty') }),
], 'ChipMBI5254RGBVExtendProperty');
//# sourceMappingURL=ChipMBI5254RGBVExtendProperty.js.map