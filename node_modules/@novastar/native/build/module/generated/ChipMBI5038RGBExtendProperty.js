import * as t from 'io-ts';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipMBI5038ExtendProperty } from './ChipMBI5038ExtendProperty';
export const ChipMBI5038RGBExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: ChipMBI5038ExtendProperty,
        GreenProperty: ChipMBI5038ExtendProperty,
        BlueProperty: ChipMBI5038ExtendProperty,
        VRedProperty: ChipMBI5038ExtendProperty,
    }),
], 'ChipMBI5038RGBExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipMBI5038RGBExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:41940
 */
export const ChipMBI5038RGBExtendProperty = t.intersection([
    ChipMBI5038RGBExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipMBI5038RGBExtendProperty') }),
], 'ChipMBI5038RGBExtendProperty');
//# sourceMappingURL=ChipMBI5038RGBExtendProperty.js.map