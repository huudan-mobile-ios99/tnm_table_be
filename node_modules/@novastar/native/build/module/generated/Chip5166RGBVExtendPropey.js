import * as t from 'io-ts';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipMBI5166ExtendProperty } from './ChipMBI5166ExtendProperty';
export const Chip5166RGBVExtendPropeyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RedProperty: ChipMBI5166ExtendProperty,
        GreenProperty: ChipMBI5166ExtendProperty,
        BlueProperty: ChipMBI5166ExtendProperty,
        VRedProperty: ChipMBI5166ExtendProperty,
    }),
], 'Chip5166RGBVExtendPropeyBase');
/**
 * @category Codecs
 * @desc Codec for {@link Chip5166RGBVExtendPropey}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:47917
 */
export const Chip5166RGBVExtendPropey = t.intersection([
    Chip5166RGBVExtendPropeyBase,
    t.partial({ '@_xsi:type': t.literal('Chip5166RGBVExtendPropey') }),
], 'Chip5166RGBVExtendPropey');
//# sourceMappingURL=Chip5166RGBVExtendPropey.js.map