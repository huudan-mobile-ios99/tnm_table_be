import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipSCL8080ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.partial({
        RegValueConfigFirst: common.UInt16,
        RegValueConfigSecond: common.UInt16,
        RegValueConfigThird: common.UInt16,
    }),
], 'ChipSCL8080ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSCL8080ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipSCL8080.decompiled.cs:332
 */
export const ChipSCL8080ExtendProperty = t.intersection([
    ChipSCL8080ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSCL8080ExtendProperty') }),
], 'ChipSCL8080ExtendProperty');
//# sourceMappingURL=ChipSCL8080ExtendProperty.js.map