import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipType } from './ChipType';
import { ScanBoardProperty } from './ScanBoardProperty';
/**
 * @category Codecs
 * @desc Codec for interface {@link BrightAndSBProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:59369
 */
export const BrightAndSBProperty = t.intersection([
    t.type({
        SelectChipType: common.withDefault(ChipType, 'Unknown'),
    }),
    t.partial({
        ScanBoardProp: ScanBoardProperty,
        FirstRegData: common.Base64,
        SecondRegData: common.Base64,
        ThirdRegData: common.Base64,
    }),
], 'BrightAndSBProperty');
//# sourceMappingURL=BrightAndSBProperty.js.map