import * as t from 'io-ts';
export declare const ChipMY9862ExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    CompensationMode: t.Type<boolean, boolean, unknown>;
    LowAshImprovement: t.Type<number, number, unknown>;
    FirstSweepCompensation: t.Type<number, number, unknown>;
    EliminateGhostingSet: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipMY9862ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:43519
 */
export declare const ChipMY9862ExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    CompensationMode: t.Type<boolean, boolean, unknown>;
    LowAshImprovement: t.Type<number, number, unknown>;
    FirstSweepCompensation: t.Type<number, number, unknown>;
    EliminateGhostingSet: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipMY9862ExtendProperty">;
}>]>;
export interface ChipMY9862ExtendProperty extends t.TypeOf<typeof ChipMY9862ExtendProperty> {
}
