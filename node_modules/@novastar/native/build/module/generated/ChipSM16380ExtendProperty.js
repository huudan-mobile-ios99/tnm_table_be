import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipSM16380ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        RegisterArray: common.XMLArray(common.UInt16, 'ushort'),
    }),
    t.partial({
        FirstRegValue: common.UInt16,
        SecondRegValue: common.UInt16,
        ShadowEliminationLevel: common.UInt8,
        ShadowEliminationTime: common.UInt8,
        ShadowEliminationEnable: common.Bool,
        FirstLineDarkCompensationLevel: common.UInt8,
        LowGrayCompsention: common.UInt8,
        CrossEliminationLevel: common.UInt8,
        GrayScaleUniformity: common.UInt8,
        CouplingOptimization: common.Int32,
        EnergySavingMode: common.UInt8,
        EnergySavingEnable: common.Bool,
    }),
], 'ChipSM16380ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16380ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipSM16380.decompiled.cs:1028
 */
export const ChipSM16380ExtendProperty = t.intersection([
    ChipSM16380ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSM16380ExtendProperty') }),
], 'ChipSM16380ExtendProperty');
//# sourceMappingURL=ChipSM16380ExtendProperty.js.map