import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipSUM2033BaseExtendProperty } from './ChipSUM2033BaseExtendProperty';
/**
 * @category Codecs
 * @desc Codec for interface {@link ChipSUM2033ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:49514
 */
export const ChipSUM2033ExtendProperty = t.intersection([
    t.type({
        RedVanishingRating: common.UInt8_15,
        GreenVanishingRating: common.withDefault(common.UInt8, 13),
        BlueVanishingRating: common.UInt8_5,
        VRedVanishingRating: common.UInt8_15,
        RedRegValueConfigFourth: common.UInt16_7168,
        GreenRegValueConfigFourth: common.UInt16_7168,
        BlueRegValueConfigFourth: common.UInt16_7168,
        VRedRegValueConfigFourth: common.UInt16_7168,
    }),
    t.partial({
        RedProperty: ChipSUM2033BaseExtendProperty,
        GreenProperty: ChipSUM2033BaseExtendProperty,
        BlueProperty: ChipSUM2033BaseExtendProperty,
        VRedProperty: ChipSUM2033BaseExtendProperty,
        UsingBright: common.Bool,
        UsingSUM2033Gamma: common.Bool,
        IsDoubleRate: common.Bool,
        RedRegValueConfigThird: common.UInt16,
        GreenRegValueConfigThird: common.UInt16,
        BlueRegValueConfigThird: common.UInt16,
        VRedRegValueConfigThird: common.UInt16,
    }),
], 'ChipSUM2033ExtendProperty');
//# sourceMappingURL=ChipSUM2033ExtendProperty.js.map