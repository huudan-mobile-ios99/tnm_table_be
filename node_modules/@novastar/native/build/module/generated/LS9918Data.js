import * as t from 'io-ts';
import * as common from '../lib/common';
/**
 * @category Codecs
 * @desc Codec for interface {@link LS9918Data}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:52158
 */
export const LS9918Data = t.intersection([
    t.type({
        BitsNum: common.Int32_2,
        SubFrameNum: common.Int32_3,
        FriedFreuquance: common.Int32_60,
        ShiftClockList: common.XMLArray(common.Numeric, 'double'),
        StarRefreshRateList: common.XMLArray(common.Int32, 'int'),
        MaxRefreshRateList: common.XMLArray(common.Int32, 'int'),
        HighNumberList: common.XMLArray(common.Int32, 'int'),
        ModeList: common.XMLArray(t.string, 'string'),
    }),
    t.partial({
        PmData: common.Base64,
        DmFirstData: common.Base64,
        DmSecondData: common.Base64,
        DmThridData: common.Base64,
        LS9918OEData: common.Base64,
        Factor: common.Int32,
        FrequenceDivsion: common.Int32,
        SystemClock: common.Int32,
        ShiftClock: common.Numeric,
        StarRefreshRate: common.Int32,
        MaxRefreshRate: common.Int32,
        HighNumber: common.Int32,
        BrightnessEfficiency: common.Int32,
        ShiftLenth: common.Int32,
        ScanType: common.Int32,
        GammaStartValue: common.Int32,
        GammaMaxValue: common.Int32,
        GammaShift: common.Int32,
        GameTable: common.Base64,
        ContrastValue: common.Int32,
        MaxBrightness: common.Int32,
        RedJump: common.Int32,
        GreenJump: common.Int32,
        BlueJump: common.Int32,
        CompensateValue: common.Numeric,
        MinWidth: common.Int32,
        ClockPhase: common.Int32,
        ShadowZone: common.Int32,
        RowShadow: common.Int32,
        LineCharge: common.Int32,
        ShadowThree: common.Int32,
        ModeValue: common.Int32,
        IsLineShadowOK: common.Bool,
        IsRowSwitch: common.Bool,
        SelectRowSwitch: common.Int32,
        Select32Port: common.Int32,
        FirstLine: common.Int32,
        RDataPhase: common.Int32,
        GDataPhase: common.Int32,
        BDataPhase: common.Int32,
    }),
], 'LS9918Data');
//# sourceMappingURL=LS9918Data.js.map