import * as t from 'io-ts';
import { ChipSM16136ExtendProperty } from './ChipSM16136ExtendProperty';
export declare const ChipSM16136RGBExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        BlankingEnable: t.Type<boolean, boolean, unknown>;
        BlankingVoltage: t.Type<number, number, unknown>;
        LowImproveValue: t.Type<number, number, unknown>;
        LowImproveEnable: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipSM16136ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        BlankingEnable: t.Type<boolean, boolean, unknown>;
        BlankingVoltage: t.Type<number, number, unknown>;
        LowImproveValue: t.Type<number, number, unknown>;
        LowImproveEnable: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipSM16136ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        BlankingEnable: t.Type<boolean, boolean, unknown>;
        BlankingVoltage: t.Type<number, number, unknown>;
        LowImproveValue: t.Type<number, number, unknown>;
        LowImproveEnable: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipSM16136ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        BlankingEnable: t.Type<boolean, boolean, unknown>;
        BlankingVoltage: t.Type<number, number, unknown>;
        LowImproveValue: t.Type<number, number, unknown>;
        LowImproveEnable: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipSM16136ExtendProperty">;
    }>]>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16136RGBExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:48022
 */
export declare const ChipSM16136RGBExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        BlankingEnable: t.Type<boolean, boolean, unknown>;
        BlankingVoltage: t.Type<number, number, unknown>;
        LowImproveValue: t.Type<number, number, unknown>;
        LowImproveEnable: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipSM16136ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        BlankingEnable: t.Type<boolean, boolean, unknown>;
        BlankingVoltage: t.Type<number, number, unknown>;
        LowImproveValue: t.Type<number, number, unknown>;
        LowImproveEnable: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipSM16136ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        BlankingEnable: t.Type<boolean, boolean, unknown>;
        BlankingVoltage: t.Type<number, number, unknown>;
        LowImproveValue: t.Type<number, number, unknown>;
        LowImproveEnable: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipSM16136ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        BlankingEnable: t.Type<boolean, boolean, unknown>;
        BlankingVoltage: t.Type<number, number, unknown>;
        LowImproveValue: t.Type<number, number, unknown>;
        LowImproveEnable: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipSM16136ExtendProperty">;
    }>]>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipSM16136RGBExtendProperty">;
}>]>;
export interface ChipSM16136RGBExtendProperty extends t.TypeOf<typeof ChipSM16136RGBExtendProperty> {
    RedProperty?: ChipSM16136ExtendProperty;
    GreenProperty?: ChipSM16136ExtendProperty;
    BlueProperty?: ChipSM16136ExtendProperty;
    VRedProperty?: ChipSM16136ExtendProperty;
}
