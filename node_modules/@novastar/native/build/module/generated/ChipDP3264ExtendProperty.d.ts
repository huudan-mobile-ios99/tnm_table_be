import * as t from 'io-ts';
export declare const ChipDP3264ExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    RegisterArray: t.ArrayC<t.Type<number, number, unknown>>;
}>, t.PartialC<{
    IsUseNewModule: t.Type<boolean, boolean, unknown>;
    ChipLibVersion: t.Type<number, number, unknown>;
    ConstantCurrentOutputInflectionPointGrade: t.Type<number, number, unknown>;
    LowGreyPittingOptimization: t.Type<number, number, unknown>;
    GammaSmoothingLevel: t.Type<number, number, unknown>;
    ShadowEliminationLevelEnable: t.Type<boolean, boolean, unknown>;
    ShadowEliminationLevel: t.Type<number, number, unknown>;
    ShadowEliminationTime: t.Type<number, number, unknown>;
    ShadowEliminationMoment: t.Type<number, number, unknown>;
    CouplingOptimizationEnable: t.Type<boolean, boolean, unknown>;
    CouplingOptimizationEnhance: t.Type<boolean, boolean, unknown>;
    CouplingOptimizationGrade: t.Type<number, number, unknown>;
    CouplingCoefficient: t.Type<number, number, unknown>;
    CurrentGain: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipDP3264ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipDP3264.decompiled.cs:6833
 */
export declare const ChipDP3264ExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    RegisterArray: t.ArrayC<t.Type<number, number, unknown>>;
}>, t.PartialC<{
    IsUseNewModule: t.Type<boolean, boolean, unknown>;
    ChipLibVersion: t.Type<number, number, unknown>;
    ConstantCurrentOutputInflectionPointGrade: t.Type<number, number, unknown>;
    LowGreyPittingOptimization: t.Type<number, number, unknown>;
    GammaSmoothingLevel: t.Type<number, number, unknown>;
    ShadowEliminationLevelEnable: t.Type<boolean, boolean, unknown>;
    ShadowEliminationLevel: t.Type<number, number, unknown>;
    ShadowEliminationTime: t.Type<number, number, unknown>;
    ShadowEliminationMoment: t.Type<number, number, unknown>;
    CouplingOptimizationEnable: t.Type<boolean, boolean, unknown>;
    CouplingOptimizationEnhance: t.Type<boolean, boolean, unknown>;
    CouplingOptimizationGrade: t.Type<number, number, unknown>;
    CouplingCoefficient: t.Type<number, number, unknown>;
    CurrentGain: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipDP3264ExtendProperty">;
}>]>;
export interface ChipDP3264ExtendProperty extends t.TypeOf<typeof ChipDP3264ExtendProperty> {
}
