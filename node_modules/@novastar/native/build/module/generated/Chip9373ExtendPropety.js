import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const Chip9373ExtendPropetyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        BFirstScancompensation: common.UInt8_2,
        BlueVanishingRating: common.UInt8_1,
        CrossEn: common.Bool_true,
        GCurrentCompensationThird: common.UInt8_1,
        GFirstScancompensation: common.UInt8_1,
        GrayDepth: common.UInt8_2,
        GreenVanishingRating: common.UInt8_2,
        RCurrentCompensationThird: common.UInt8_2,
        RedVanishingRating: common.UInt8_3,
        VRCurrentCompensationThird: common.UInt8_2,
        VRedVanishingRating: common.UInt8_3,
    }),
    t.partial({
        BCompensationMode: common.UInt8,
        BCurrentCompensationFirst: common.UInt8,
        BCurrentCompensationSec: common.UInt8,
        BCurrentCompensationThird: common.UInt8,
        BLowGrayValue: common.UInt8,
        GclkMutiRate: common.Bool,
        GCompensationMode: common.UInt8,
        GCurrentCompensationFirst: common.UInt8,
        GCurrentCompensationSec: common.UInt8,
        GLowGrayValue: common.UInt8,
        RCompensationMode: common.UInt8,
        RCurrentCompensationFirst: common.UInt8,
        RCurrentCompensationSec: common.UInt8,
        RCurrentCompensationFo: common.UInt8,
        GCurrentCompensationFo: common.UInt8,
        BCurrentCompensationFo: common.UInt8,
        RFirstScancompensation: common.UInt8,
        RLowGrayValue: common.UInt8,
        VRCurrentCompensationFirst: common.UInt8,
        VRCurrentCompensationSec: common.UInt8,
        VRFirstScancompensation: common.UInt8,
        VRLowGrayValue: common.UInt8,
    }),
], 'Chip9373ExtendPropetyBase');
/**
 * @category Codecs
 * @desc Codec for {@link Chip9373ExtendPropety}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:28631
 */
export const Chip9373ExtendPropety = t.intersection([Chip9373ExtendPropetyBase, t.partial({ '@_xsi:type': t.literal('Chip9373ExtendPropety') })], 'Chip9373ExtendPropety');
//# sourceMappingURL=Chip9373ExtendPropety.js.map