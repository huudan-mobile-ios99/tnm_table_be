import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipSM16237ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        RUnderEliminateGhostOne: common.Int32_5,
        GUnderEliminateGhostOne: common.Int32_5,
        BUnderEliminateGhostOne: common.Int32_5,
        RUnderEliminateGhostTwo: common.Int32_4,
        GUnderEliminateGhostTwo: common.Int32_4,
        BUnderEliminateGhostTwo: common.Int32_4,
        GOffsetCompsation: common.Int32_1,
        BOffsetCompsation: common.Int32_1,
        GFirstCompsation: common.Int32_6,
        BFirstCompsation: common.Int32_6,
        SwapErrorPoint: common.UInt8_16,
        RSwapErrorPoint: common.UInt8_31,
        GSwapErrorPoint: common.UInt8_31,
        BSwapErrorPoint: common.UInt8_31,
    }),
    t.partial({
        ROffsetCompsation: common.Int32,
        RFirstCompsation: common.Int32,
        IsAdvancedMode: common.Bool,
        RedRegValueConfigFirst: common.UInt16,
        GreenRegValueConfigFirst: common.UInt16,
        BlueRegValueConfigFirst: common.UInt16,
        VRedRegValueConfigFirst: common.UInt16,
        RedRegValueConfigSecond: common.UInt16,
        GreenRegValueConfigSecond: common.UInt16,
        BlueRegValueConfigSecond: common.UInt16,
        VRedRegValueConfigSecond: common.UInt16,
    }),
], 'ChipSM16237ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16237ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:44285
 */
export const ChipSM16237ExtendProperty = t.intersection([
    ChipSM16237ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSM16237ExtendProperty') }),
], 'ChipSM16237ExtendProperty');
//# sourceMappingURL=ChipSM16237ExtendProperty.js.map