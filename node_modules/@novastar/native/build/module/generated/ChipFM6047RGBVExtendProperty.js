import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
import { ChipFM6047ExtendProperty } from './ChipFM6047ExtendProperty';
export const ChipFM6047RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        OpenTestModel: common.UInt8_0,
    }),
    t.partial({
        RedProperty: ChipFM6047ExtendProperty,
        GreenProperty: ChipFM6047ExtendProperty,
        BlueProperty: ChipFM6047ExtendProperty,
        VRedProperty: ChipFM6047ExtendProperty,
        IsUseNewModule: common.Bool,
        IsAdvancedMode: common.Bool,
        EnGCLKMutiRate: common.Bool,
        OpenTestEnable: common.Bool,
        FirstDataLen: common.Int32,
        FirstStartIndex: common.Int32,
        FirstRegisterAddr: common.Int32,
        SecondDataLen: common.Int32,
        SecondStartIndex: common.Int32,
        SecondRegisterAddr: common.Int32,
        ThirdDataLen: common.Int32,
        ThirdDataStartIndex: common.Int32,
        ThirdRegisterAddr: common.Int32,
        FourthDataLen: common.Int32,
        FourthStartIndex: common.Int32,
        FourthRegisterAddr: common.Int32,
    }),
], 'ChipFM6047RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipFM6047RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipFM6047.decompiled.cs:6347
 */
export const ChipFM6047RGBVExtendProperty = t.intersection([
    ChipFM6047RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipFM6047RGBVExtendProperty') }),
], 'ChipFM6047RGBVExtendProperty');
//# sourceMappingURL=ChipFM6047RGBVExtendProperty.js.map