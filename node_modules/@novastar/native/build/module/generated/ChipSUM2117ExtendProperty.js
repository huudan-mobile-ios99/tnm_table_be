import * as t from 'io-ts';
import * as common from '../lib/common';
import { ChipBaseExtendPropey } from './ChipBaseExtendPropey';
export const ChipSUM2117ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey,
    t.type({
        SetDataInput: common.Int32_1,
    }),
    t.partial({
        IsAdvancedMode: common.Bool,
        RSetVanishingCompensation: common.UInt8,
        GSetVanishingCompensation: common.UInt8,
        BSetVanishingCompensation: common.UInt8,
        RSetVanishing: common.UInt8,
        GSetVanishing: common.UInt8,
        BSetVanishing: common.UInt8,
        InflectionCurrent: common.Int32,
        SetCurrentPosition: common.Int32,
        RedRegValueConfigFirst: common.UInt16,
        GreenRegValueConfigFirst: common.UInt16,
        BlueRegValueConfigFirst: common.UInt16,
        VRedRegValueConfigFirst: common.UInt16,
    }),
], 'ChipSUM2117ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSUM2117ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:50039
 */
export const ChipSUM2117ExtendProperty = t.intersection([
    ChipSUM2117ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSUM2117ExtendProperty') }),
], 'ChipSUM2117ExtendProperty');
//# sourceMappingURL=ChipSUM2117ExtendProperty.js.map