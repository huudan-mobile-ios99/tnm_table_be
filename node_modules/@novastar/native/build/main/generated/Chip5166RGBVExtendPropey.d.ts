import * as t from 'io-ts';
import { ChipMBI5166ExtendProperty } from './ChipMBI5166ExtendProperty';
export declare const Chip5166RGBVExtendPropeyBase: t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5166ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5166ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5166ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5166ExtendProperty">;
    }>]>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link Chip5166RGBVExtendPropey}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:47917
 */
export declare const Chip5166RGBVExtendPropey: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5166ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5166ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5166ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5166ExtendProperty">;
    }>]>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"Chip5166RGBVExtendPropey">;
}>]>;
export interface Chip5166RGBVExtendPropey extends t.TypeOf<typeof Chip5166RGBVExtendPropey> {
    RedProperty?: ChipMBI5166ExtendProperty;
    GreenProperty?: ChipMBI5166ExtendProperty;
    BlueProperty?: ChipMBI5166ExtendProperty;
    VRedProperty?: ChipMBI5166ExtendProperty;
}
