import * as t from 'io-ts';
import { AutoAdjustRefreshRateTypeEnum } from './AutoAdjustRefreshRateType';
/**
 * @category Codecs
 * @desc Codec for interface {@link AutoAdjustRefreshRateParameters}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.LEDConfigAccessorBase.decompiled.cs:29
 */
export declare const AutoAdjustRefreshRateParameters: t.IntersectionC<[t.TypeC<{
    AdjustRateType: t.Type<AutoAdjustRefreshRateTypeEnum, "R_50" | "R_60" | "R_75" | "R_120" | "R_48" | "R_30" | "R_85" | "R_100" | "R_24" | "R_72" | "R_25" | "R_240" | "R_144" | "R_50_N05" | "R_60_N05" | "R_75_N05" | "R_120_N05" | "R_48_N05" | "R_30_N05" | "R_85_N05" | "R_100_N05" | "R_24_N05" | "R_72_N05" | "R_25_N05" | "R_240_N05" | "R_144_N05" | "R_50_N10" | "R_60_N10" | "R_75_N10" | "R_120_N10" | "R_48_N10" | "R_30_N10" | "R_85_N10" | "R_100_N10" | "R_24_N10" | "R_72_N10" | "R_25_N10" | "R_240_N10" | "R_144_N10" | "R_50_P05" | "R_60_P05" | "R_75_P05" | "R_120_P05" | "R_48_P05" | "R_30_P05" | "R_85_P05" | "R_100_P05" | "R_24_P05" | "R_72_P05" | "R_25_P05" | "R_240_P05" | "R_144_P05" | "R_50_P10" | "R_60_P10" | "R_75_P10" | "R_120_P10" | "R_48_P10" | "R_30_P10" | "R_85_P10" | "R_100_P10" | "R_24_P10" | "R_72_P10" | "R_25_P10" | "R_240_P10" | "R_144_P10" | "R_50_P15" | "R_60_P15" | "R_75_P15" | "R_120_P15" | "R_48_P15" | "R_30_P15" | "R_85_P15" | "R_100_P15" | "R_24_P15" | "R_72_P15" | "R_25_P15" | "R_240_P15" | "R_144_P15" | "R_50_P20" | "R_60_P20" | "R_75_P20" | "R_120_P20" | "R_48_P20" | "R_30_P20" | "R_85_P20" | "R_100_P20" | "R_24_P20" | "R_72_P20" | "R_25_P20" | "R_240_P20" | "R_144_P20" | "R_50_P25" | "R_60_P25" | "R_75_P25" | "R_120_P25" | "R_48_P25" | "R_30_P25" | "R_85_P25" | "R_100_P25" | "R_24_P25" | "R_72_P25" | "R_25_P25" | "R_240_P25" | "R_144_P25", unknown>;
    TotalUnitNum: t.Type<number, number, unknown>;
    TotalGclkUnitNumPerScan: t.Type<number, number, unknown>;
    RefNumPerVs: t.Type<number, number, unknown>;
    GCLKRate: t.Type<number, number, unknown>;
    IsEnableTranCntNum: t.Type<boolean, boolean, unknown>;
    M1TranCntNum: t.Type<number, number, unknown>;
    M2TranCntNum: t.Type<number, number, unknown>;
    LightTime: t.Type<number, number, unknown>;
    LightTimeNum2: t.Type<number, number, unknown>;
}>, t.PartialC<{}>]>;
export interface AutoAdjustRefreshRateParameters extends t.TypeOf<typeof AutoAdjustRefreshRateParameters> {
    AdjustRateType: AutoAdjustRefreshRateTypeEnum;
}
