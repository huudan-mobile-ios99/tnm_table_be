import * as t from 'io-ts';
export declare const CustomRegExtendPropertyBaseBase: t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    RegValueConfigThird: t.Type<number, number, unknown>;
}>, t.PartialC<{
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
    RegValueConfigFirst: t.Type<number, number, unknown>;
    RegValueConfigSecond: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link CustomRegExtendPropertyBase}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:49222
 */
export declare const CustomRegExtendPropertyBase: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    RegValueConfigThird: t.Type<number, number, unknown>;
}>, t.PartialC<{
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
    RegValueConfigFirst: t.Type<number, number, unknown>;
    RegValueConfigSecond: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"CustomRegExtendPropertyBase">;
}>]>;
export interface CustomRegExtendPropertyBase extends t.TypeOf<typeof CustomRegExtendPropertyBase> {
}
