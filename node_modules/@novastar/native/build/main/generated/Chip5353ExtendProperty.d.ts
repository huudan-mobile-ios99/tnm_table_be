import * as t from 'io-ts';
export declare const Chip5353ExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    DeGhostLevel: t.Type<number, number, unknown>;
    FirstSweepEliminateFirst: t.Type<number, number, unknown>;
    FirstSweepEliminateTwo: t.Type<number, number, unknown>;
    LowAshImprovementFirst: t.Type<number, number, unknown>;
    LowAshImprovementTwo: t.Type<number, number, unknown>;
    LowAshImprovementThrid: t.Type<boolean, boolean, unknown>;
    EnhancedMode: t.Type<boolean, boolean, unknown>;
    LowAshdimLineConpensentionY: t.Type<boolean, boolean, unknown>;
    OpenDetectPower: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link Chip5353ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:40710
 */
export declare const Chip5353ExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    DeGhostLevel: t.Type<number, number, unknown>;
    FirstSweepEliminateFirst: t.Type<number, number, unknown>;
    FirstSweepEliminateTwo: t.Type<number, number, unknown>;
    LowAshImprovementFirst: t.Type<number, number, unknown>;
    LowAshImprovementTwo: t.Type<number, number, unknown>;
    LowAshImprovementThrid: t.Type<boolean, boolean, unknown>;
    EnhancedMode: t.Type<boolean, boolean, unknown>;
    LowAshdimLineConpensentionY: t.Type<boolean, boolean, unknown>;
    OpenDetectPower: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"Chip5353ExtendProperty">;
}>]>;
export interface Chip5353ExtendProperty extends t.TypeOf<typeof Chip5353ExtendProperty> {
}
