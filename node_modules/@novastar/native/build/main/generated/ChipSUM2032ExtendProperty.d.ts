import * as t from 'io-ts';
/**
 * @category Codecs
 * @desc Codec for interface {@link ChipSUM2032ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:48419
 */
export declare const ChipSUM2032ExtendProperty: t.IntersectionC<[t.TypeC<{
    RColumnGhostCancelingMode: t.Type<number, number, unknown>;
    GColumnGhostCancelingMode: t.Type<number, number, unknown>;
    BColumnGhostCancelingMode: t.Type<number, number, unknown>;
    VRColumnGhostCancelingMode: t.Type<number, number, unknown>;
    RColumnGhostCanceling: t.Type<number, number, unknown>;
    GColumnGhostCanceling: t.Type<number, number, unknown>;
    BColumnGhostCanceling: t.Type<number, number, unknown>;
    VRColumnGhostCanceling: t.Type<number, number, unknown>;
    RLowGrayMode: t.Type<number, number, unknown>;
    GLowGrayMode: t.Type<number, number, unknown>;
    BLowGrayMode: t.Type<number, number, unknown>;
    VRLowGrayMode: t.Type<number, number, unknown>;
    RLowGrayCompensation: t.Type<number, number, unknown>;
    GLowGrayCompensation: t.Type<number, number, unknown>;
    BLowGrayCompensation: t.Type<number, number, unknown>;
    VRLowGrayCompensation: t.Type<number, number, unknown>;
}>, t.PartialC<{}>]>;
export interface ChipSUM2032ExtendProperty extends t.TypeOf<typeof ChipSUM2032ExtendProperty> {
}
