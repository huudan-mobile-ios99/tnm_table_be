"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChipICN2038SExtendProperty = exports.ChipICN2038SExtendPropertyBase = void 0;
const t = __importStar(require("io-ts"));
const common = __importStar(require("../lib/common"));
const ChipBaseExtendPropey_1 = require("./ChipBaseExtendPropey");
exports.ChipICN2038SExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey_1.ChipBaseExtendPropey,
    t.type({
        RWhiteBalance: common.Int32_16,
        GWhiteBalance: common.Int32_16,
        BWhiteBalance: common.Int32_16,
        HandUpdata: common.Bool_true,
    }),
    t.partial({
        IsAdvancedMode: common.Bool,
        IsDeadPix: common.Bool,
        RGainPoint: common.Int32,
        GGainPoint: common.Int32,
        BGainPoint: common.Int32,
        RConstantCurrent: common.Int32,
        GConstantCurrent: common.Int32,
        BConstantCurrent: common.Int32,
        ROESignalSelect: common.Int32,
        GOESignalSelect: common.Int32,
        BOESignalSelect: common.Int32,
        REnableSignalSelect: common.Bool,
        GEnableSignalSelect: common.Bool,
        BEnableSignalSelect: common.Bool,
        RDelayTime: common.Int32,
        GDelayTime: common.Int32,
        BDelayTime: common.Int32,
        RBlankingSignalSelect: common.Int32,
        GBlankingSignalSelect: common.Int32,
        BBlankingSignalSelect: common.Int32,
        RFallingTimeSelect: common.Int32,
        GFallingTimeSelect: common.Int32,
        BFallingTimeSelect: common.Int32,
        RLATCHSelect: common.Int32,
        GLATCHSelect: common.Int32,
        BLATCHSelect: common.Int32,
        RAMSelect: common.Int32,
        GAMSelect: common.Int32,
        BAMSelect: common.Int32,
        RAMSignalSelect: common.Bool,
        GAMSignalSelect: common.Bool,
        BAMSignalSelect: common.Bool,
        RCurrentRangSelect: common.Int32,
        GCurrentRangSelect: common.Int32,
        BCurrentRangSelect: common.Int32,
        RCLKtoSDOSelect: common.Int32,
        GCLKtoSDOSelect: common.Int32,
        BCLKtoSDOSelect: common.Int32,
        ROEWidthSelect: common.Int32,
        GOEWidthSelect: common.Int32,
        BOEWidthSelect: common.Int32,
        RedRegValueConfigFirst: common.UInt16,
        GreenRegValueConfigFirst: common.UInt16,
        BlueRegValueConfigFirst: common.UInt16,
        VRedRegValueConfigFirst: common.UInt16,
        RedRegValueConfigSecond: common.UInt16,
        GreenRegValueConfigSecond: common.UInt16,
        BlueRegValueConfigSecond: common.UInt16,
        VRedRegValueConfigSecond: common.UInt16,
        BlankingMode: common.Int32,
    }),
], 'ChipICN2038SExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipICN2038SExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:29185
 */
exports.ChipICN2038SExtendProperty = t.intersection([
    exports.ChipICN2038SExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipICN2038SExtendProperty') }),
], 'ChipICN2038SExtendProperty');
//# sourceMappingURL=ChipICN2038SExtendProperty.js.map