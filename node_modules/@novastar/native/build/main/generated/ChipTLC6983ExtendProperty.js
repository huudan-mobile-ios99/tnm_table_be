"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChipTLC6983ExtendProperty = exports.ChipTLC6983ExtendPropertyBase = void 0;
const t = __importStar(require("io-ts"));
const common = __importStar(require("../lib/common"));
const ChipBaseExtendPropey_1 = require("./ChipBaseExtendPropey");
exports.ChipTLC6983ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey_1.ChipBaseExtendPropey,
    t.partial({
        RegisterArray: new common.BufferFromBase64('RegisterArray', 96),
        RegArrayUI: new common.BufferFromBase64('RegArrayUI', 96),
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
        IsPowerSavingMode1: common.Bool,
        PowerSavingMode2: common.UInt8,
        IsBadPoints: common.Bool,
        RLowGrayGradientAdj: common.UInt8,
        GLowGrayGradientAdj: common.UInt8,
        BLowGrayGradientAdj: common.UInt8,
        RLowGrayBrightCompensation: common.UInt8,
        GLowGrayBrightCompensation: common.UInt8,
        BLowGrayBrightCompensation: common.UInt8,
        BlackFieldRegulation: common.UInt8,
        RCouplingParameterAdj1: common.UInt8,
        GCouplingParameterAdj1: common.UInt8,
        BCouplingParameterAdj1: common.UInt8,
        RCouplingParameterAdj2: common.UInt8,
        GCouplingParameterAdj2: common.UInt8,
        BCouplingParameterAdj2: common.UInt8,
        IsRCouplingParameterAdj2: common.Bool,
        IsGCouplingParameterAdj2: common.Bool,
        IsBCouplingParameterAdj2: common.Bool,
        RLowAshColorCastCompensation: common.UInt8,
        GLowAshColorCastCompensation: common.UInt8,
        BLowAshColorCastCompensation: common.UInt8,
        Is256FrameRateMode: common.Bool,
        RGain: common.UInt8,
        GGain: common.UInt8,
        BGain: common.UInt8,
        GlobalGain: common.UInt8,
        ShortDetectionLevel: common.UInt8,
        MaxCurrentValue: common.UInt8,
        RSlowlyOpen: common.UInt8,
        GSlowlyOpen: common.UInt8,
        BSlowlyOpen: common.UInt8,
        RQuickTurnOff: common.UInt8,
        GQuickTurnOff: common.UInt8,
        BQuickTurnOff: common.UInt8,
        FirstLineDarkAdj: common.UInt8,
        IsCouplingParameterAdj3: common.Bool,
        CouplingParameterAdj4: common.UInt8,
        IsCouplingParameterAdj4: common.Bool,
    }),
], 'ChipTLC6983ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipTLC6983ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipTLC6983.decompiled.cs:4332
 */
exports.ChipTLC6983ExtendProperty = t.intersection([
    exports.ChipTLC6983ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipTLC6983ExtendProperty') }),
], 'ChipTLC6983ExtendProperty');
//# sourceMappingURL=ChipTLC6983ExtendProperty.js.map