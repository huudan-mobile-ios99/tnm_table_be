import * as t from 'io-ts';
import { ChipCNS7153ExtendProperty } from './ChipCNS7153ExtendProperty';
export declare const ChipCNS7153RGBVExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        RegFirst: t.Type<number, number, unknown>;
        RegSecond: t.Type<number, number, unknown>;
        RegThird: t.Type<number, number, unknown>;
        RegFourth: t.Type<number, number, unknown>;
    }>, t.PartialC<{}>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipCNS7153ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        RegFirst: t.Type<number, number, unknown>;
        RegSecond: t.Type<number, number, unknown>;
        RegThird: t.Type<number, number, unknown>;
        RegFourth: t.Type<number, number, unknown>;
    }>, t.PartialC<{}>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipCNS7153ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        RegFirst: t.Type<number, number, unknown>;
        RegSecond: t.Type<number, number, unknown>;
        RegThird: t.Type<number, number, unknown>;
        RegFourth: t.Type<number, number, unknown>;
    }>, t.PartialC<{}>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipCNS7153ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        RegFirst: t.Type<number, number, unknown>;
        RegSecond: t.Type<number, number, unknown>;
        RegThird: t.Type<number, number, unknown>;
        RegFourth: t.Type<number, number, unknown>;
    }>, t.PartialC<{}>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipCNS7153ExtendProperty">;
    }>]>;
    IsUseNewModule: t.Type<boolean, boolean, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipCNS7153RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipCNS7153.decompiled.cs:1972
 */
export declare const ChipCNS7153RGBVExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        RegFirst: t.Type<number, number, unknown>;
        RegSecond: t.Type<number, number, unknown>;
        RegThird: t.Type<number, number, unknown>;
        RegFourth: t.Type<number, number, unknown>;
    }>, t.PartialC<{}>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipCNS7153ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        RegFirst: t.Type<number, number, unknown>;
        RegSecond: t.Type<number, number, unknown>;
        RegThird: t.Type<number, number, unknown>;
        RegFourth: t.Type<number, number, unknown>;
    }>, t.PartialC<{}>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipCNS7153ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        RegFirst: t.Type<number, number, unknown>;
        RegSecond: t.Type<number, number, unknown>;
        RegThird: t.Type<number, number, unknown>;
        RegFourth: t.Type<number, number, unknown>;
    }>, t.PartialC<{}>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipCNS7153ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        RegFirst: t.Type<number, number, unknown>;
        RegSecond: t.Type<number, number, unknown>;
        RegThird: t.Type<number, number, unknown>;
        RegFourth: t.Type<number, number, unknown>;
    }>, t.PartialC<{}>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipCNS7153ExtendProperty">;
    }>]>;
    IsUseNewModule: t.Type<boolean, boolean, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipCNS7153RGBVExtendProperty">;
}>]>;
export interface ChipCNS7153RGBVExtendProperty extends t.TypeOf<typeof ChipCNS7153RGBVExtendProperty> {
    RedProperty?: ChipCNS7153ExtendProperty;
    GreenProperty?: ChipCNS7153ExtendProperty;
    BlueProperty?: ChipCNS7153ExtendProperty;
    VRedProperty?: ChipCNS7153ExtendProperty;
}
