import * as t from 'io-ts';
export declare const ChipSM16136ExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    BlankingEnable: t.Type<boolean, boolean, unknown>;
    BlankingVoltage: t.Type<number, number, unknown>;
    LowImproveValue: t.Type<number, number, unknown>;
    LowImproveEnable: t.Type<boolean, boolean, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16136ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:45435
 */
export declare const ChipSM16136ExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    BlankingEnable: t.Type<boolean, boolean, unknown>;
    BlankingVoltage: t.Type<number, number, unknown>;
    LowImproveValue: t.Type<number, number, unknown>;
    LowImproveEnable: t.Type<boolean, boolean, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipSM16136ExtendProperty">;
}>]>;
export interface ChipSM16136ExtendProperty extends t.TypeOf<typeof ChipSM16136ExtendProperty> {
}
