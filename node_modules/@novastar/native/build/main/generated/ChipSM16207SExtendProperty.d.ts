import * as t from 'io-ts';
export declare const ChipSM16207SExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    REliminateAfterLow1: t.Type<number, number, unknown>;
    GEliminateAfterLow1: t.Type<number, number, unknown>;
    BEliminateAfterLow1: t.Type<number, number, unknown>;
    RDimCompensation: t.Type<number, number, unknown>;
    GDimCompensation: t.Type<number, number, unknown>;
    BDimCompensation: t.Type<number, number, unknown>;
    REliminateAfterLow2: t.Type<number, number, unknown>;
    GEliminateAfterLow2: t.Type<number, number, unknown>;
    BEliminateAfterLow2: t.Type<number, number, unknown>;
}>, t.PartialC<{
    RLowAshImprovement: t.Type<number, number, unknown>;
    GLowAshImprovement: t.Type<number, number, unknown>;
    BLowAshImprovement: t.Type<number, number, unknown>;
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
    RedRegValueConfigFirst: t.Type<number, number, unknown>;
    GreenRegValueConfigFirst: t.Type<number, number, unknown>;
    BlueRegValueConfigFirst: t.Type<number, number, unknown>;
    VRedRegValueConfigFirst: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16207SExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:44711
 */
export declare const ChipSM16207SExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    REliminateAfterLow1: t.Type<number, number, unknown>;
    GEliminateAfterLow1: t.Type<number, number, unknown>;
    BEliminateAfterLow1: t.Type<number, number, unknown>;
    RDimCompensation: t.Type<number, number, unknown>;
    GDimCompensation: t.Type<number, number, unknown>;
    BDimCompensation: t.Type<number, number, unknown>;
    REliminateAfterLow2: t.Type<number, number, unknown>;
    GEliminateAfterLow2: t.Type<number, number, unknown>;
    BEliminateAfterLow2: t.Type<number, number, unknown>;
}>, t.PartialC<{
    RLowAshImprovement: t.Type<number, number, unknown>;
    GLowAshImprovement: t.Type<number, number, unknown>;
    BLowAshImprovement: t.Type<number, number, unknown>;
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
    RedRegValueConfigFirst: t.Type<number, number, unknown>;
    GreenRegValueConfigFirst: t.Type<number, number, unknown>;
    BlueRegValueConfigFirst: t.Type<number, number, unknown>;
    VRedRegValueConfigFirst: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipSM16207SExtendProperty">;
}>]>;
export interface ChipSM16207SExtendProperty extends t.TypeOf<typeof ChipSM16207SExtendProperty> {
}
