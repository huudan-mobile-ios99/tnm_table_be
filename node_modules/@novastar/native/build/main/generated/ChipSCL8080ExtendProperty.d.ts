import * as t from 'io-ts';
export declare const ChipSCL8080ExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RegValueConfigFirst: t.Type<number, number, unknown>;
    RegValueConfigSecond: t.Type<number, number, unknown>;
    RegValueConfigThird: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipSCL8080ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipSCL8080.decompiled.cs:332
 */
export declare const ChipSCL8080ExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RegValueConfigFirst: t.Type<number, number, unknown>;
    RegValueConfigSecond: t.Type<number, number, unknown>;
    RegValueConfigThird: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipSCL8080ExtendProperty">;
}>]>;
export interface ChipSCL8080ExtendProperty extends t.TypeOf<typeof ChipSCL8080ExtendProperty> {
}
