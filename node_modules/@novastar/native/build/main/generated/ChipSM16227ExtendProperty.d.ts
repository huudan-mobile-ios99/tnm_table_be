import * as t from 'io-ts';
export declare const ChipSM16227ExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RUnderEliminateGhostOne: t.Type<number, number, unknown>;
    GUnderEliminateGhostOne: t.Type<number, number, unknown>;
    BUnderEliminateGhostOne: t.Type<number, number, unknown>;
    RUnderEliminateGhostTwo: t.Type<number, number, unknown>;
    GUnderEliminateGhostTwo: t.Type<number, number, unknown>;
    BUnderEliminateGhostTwo: t.Type<number, number, unknown>;
    ROffsetCompsation: t.Type<number, number, unknown>;
    GOffsetCompsation: t.Type<number, number, unknown>;
    BOffsetCompsation: t.Type<number, number, unknown>;
    RFirstCompsation: t.Type<number, number, unknown>;
    GFirstCompsation: t.Type<number, number, unknown>;
    BFirstCompsation: t.Type<number, number, unknown>;
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
    RedRegValueConfigFirst: t.Type<number, number, unknown>;
    GreenRegValueConfigFirst: t.Type<number, number, unknown>;
    BlueRegValueConfigFirst: t.Type<number, number, unknown>;
    VRedRegValueConfigFirst: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16227ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:43987
 */
export declare const ChipSM16227ExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RUnderEliminateGhostOne: t.Type<number, number, unknown>;
    GUnderEliminateGhostOne: t.Type<number, number, unknown>;
    BUnderEliminateGhostOne: t.Type<number, number, unknown>;
    RUnderEliminateGhostTwo: t.Type<number, number, unknown>;
    GUnderEliminateGhostTwo: t.Type<number, number, unknown>;
    BUnderEliminateGhostTwo: t.Type<number, number, unknown>;
    ROffsetCompsation: t.Type<number, number, unknown>;
    GOffsetCompsation: t.Type<number, number, unknown>;
    BOffsetCompsation: t.Type<number, number, unknown>;
    RFirstCompsation: t.Type<number, number, unknown>;
    GFirstCompsation: t.Type<number, number, unknown>;
    BFirstCompsation: t.Type<number, number, unknown>;
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
    RedRegValueConfigFirst: t.Type<number, number, unknown>;
    GreenRegValueConfigFirst: t.Type<number, number, unknown>;
    BlueRegValueConfigFirst: t.Type<number, number, unknown>;
    VRedRegValueConfigFirst: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipSM16227ExtendProperty">;
}>]>;
export interface ChipSM16227ExtendProperty extends t.TypeOf<typeof ChipSM16227ExtendProperty> {
}
