"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScanBoardProperty = void 0;
const t = __importStar(require("io-ts"));
const io_ts_types_1 = require("io-ts-types");
const common = __importStar(require("../lib/common"));
const CabinetInfomation_1 = require("./CabinetInfomation");
const ChipCfgCurrentRange_1 = require("./ChipCfgCurrentRange");
const ChipCfgCurrentRisingTime_1 = require("./ChipCfgCurrentRisingTime");
const ChipOperatingMode_1 = require("./ChipOperatingMode");
const CoefType_1 = require("./CoefType");
const CoefficientSourceType_1 = require("./CoefficientSourceType");
const CommonIrCabinetType_1 = require("./CommonIrCabinetType");
const ConfigFileVersionInfo_1 = require("./ConfigFileVersionInfo");
const ControlModeType_1 = require("./ControlModeType");
const CorrectType_1 = require("./CorrectType");
const CustomGammaInfo_1 = require("./CustomGammaInfo");
const DataGroupOutPutMode_1 = require("./DataGroupOutPutMode");
const DecodeChipParamBase_1 = require("./DecodeChipParamBase");
const DriverCurrentSpeedType_1 = require("./DriverCurrentSpeedType");
const FlashTopology_1 = require("./FlashTopology");
const GhostRemoveModeType_1 = require("./GhostRemoveModeType");
const GrayModeType_1 = require("./GrayModeType");
const GrayRealizeType_1 = require("./GrayRealizeType");
const IrRegularCabinetProperty_1 = require("./IrRegularCabinetProperty");
const LEDModuleProperty_1 = require("./LEDModuleProperty");
const LS9918Data_1 = require("./LS9918Data");
const LS9926Data_1 = require("./LS9926Data");
const LS9929Data_1 = require("./LS9929Data");
const LS9930Data_1 = require("./LS9930Data");
const LS9935Data_1 = require("./LS9935Data");
const LS9960Data_1 = require("./LS9960Data");
const LowGrayQueryMode_1 = require("./LowGrayQueryMode");
const MaxValue_1 = __importDefault(require("./MaxValue"));
const ModuleCascadeDiretion_1 = require("./ModuleCascadeDiretion");
const PriorityMode_1 = require("./PriorityMode");
const RotateAngle_1 = require("./RotateAngle");
const ShowTypeWhenPortDisconnected_1 = require("./ShowTypeWhenPortDisconnected");
const SmartSetMode_1 = require("./SmartSetMode");
const SpecialFrameRateInfo_1 = require("./SpecialFrameRateInfo");
const VirtualModeType_1 = require("./VirtualModeType");
const unions_1 = require("./unions");
/**
 * @category Codecs
 * @desc Codec for interface {@link ScanBoardProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:24177
 */
exports.ScanBoardProperty = t.intersection([
    t.type({
        RCFGXVersion: common.withDefault(t.string, '\u672A\u77E5'),
        ProgramVersion: common.string_empty,
        GammaValue: common.UInt8_28,
        Brightness: common.Int32_255,
        RedBright: common.Int32_255,
        BlueBright: common.Int32_255,
        GreenBright: common.Int32_255,
        VRedBright: common.Int32_255,
        RedGain: common.Int32_255,
        BlueGain: common.Int32_255,
        GreenGain: common.Int32_255,
        VRedGain: common.Int32_255,
        IsChromaCorrentionLowGray: common.Bool_true,
        CoefTypeMode: common.withDefault(CoefType_1.CoefType, 'common'),
        Width: common.Int32_32,
        Height: common.Int32_16,
        ModuleCols: common.Int32_1,
        ModuleRows: common.Int32_1,
        PhysicalDataGroupNum: common.Int32_2,
        LogicalDataGroupNum: common.Int32_8,
        RefNumPerVs: common.Int32_4,
        GrayDepth: common.UInt8_12,
        GrayMode: common.withDefault(GrayModeType_1.GrayModeType, 'Normallight'),
        GrayRealize: common.withDefault(GrayRealizeType_1.GrayRealizeType, 'HGHR'),
        LineScanTime: common.Int32_5,
        GhostRemoveType: common.withDefault(GhostRemoveModeType_1.GhostRemoveModeType, 'Unknown'),
        BlankUnitNumPerScan: common.Int32_25,
        RowChangePoint: common.Int32_3,
        TinyLineFeedMoment: common.Int32_2,
        LightTimeRatio: common.Int32_100,
        LightTime: common.Int32_2650,
        LightTimeNum2: common.Int32_2650,
        ShiftUnitNum: common.Int32_32,
        PointNumberPerDriver: common.Int32_32,
        TotalUnitNum: common.withDefault(common.Int32, 267),
        DclkUnitCycle: common.UInt8_10,
        DclkPhase: common.UInt8_2,
        DclkHigh: common.UInt8_5,
        DclkHighRatio: common.withDefault(common.UInt8, 50),
        GCLKRate: common.UInt8_10,
        GCLKPhase: common.UInt8_5,
        GCLKDuty: common.UInt8_5,
        CtrlEndPoint: common.withDefault(common.Int32, 20),
        SubFields: common.Int32_4,
        TotalGclkUnitNumPerScan: common.UInt16_4096,
        AddrExtend: common.UInt8_5,
        TotalLightCdfResault: common.withDefault(common.Int32, 65535),
        LogicalShiftUnitNum: common.Int32_128,
        M1TranCntNum: common.Int32_3,
        M2TranCntNum: common.Int32_3,
        IsConnectSmartModule: common.Bool_true,
        ColorMatrix: common.XMLArray(common.Int32, 'int'),
        GclkNumPerScan: common.UInt16_4096,
        IsNoCorrectionThresholdEable: common.Bool_true,
        RedNoCorrectionAttenuation: common.UInt16_2048,
        GreenNoCorrectionAttenuation: common.UInt16_2048,
        BlueNoCorrectionAttenuation: common.UInt16_2048,
        VirRedNoCorrectionAttenuation: common.UInt16_2048,
        CabinetRotateAngle: common.withDefault(RotateAngle_1.RotateAngle, 'R_360'),
        IsClearGhost: common.Bool_true,
        SerialDecodeRepeatTimes: common.UInt8_1,
        LowAshCompensationOne5253: common.UInt8_100,
        LowAshCompensationTwo5253: common.UInt8_100,
        OperatingMode: common.withDefault(ChipOperatingMode_1.ChipOperatingMode, 'Unknown'),
        IsOpenSetGainValue: common.Bool_true,
        CurrentRisingTime: common.withDefault(ChipCfgCurrentRisingTime_1.ChipCfgCurrentRisingTime, 'CurrentRising2'),
        RedSpeedType: common.withDefault(DriverCurrentSpeedType_1.DriverCurrentSpeedType, 'Fast'),
        GreenSpeedType: common.withDefault(DriverCurrentSpeedType_1.DriverCurrentSpeedType, 'Fast'),
        BlueSpeedType: common.withDefault(DriverCurrentSpeedType_1.DriverCurrentSpeedType, 'Fast'),
        MBI515xDhT: common.UInt8_3,
        PreChargeTime: common.Int32_1,
        EliminatePotential: common.Int32_3,
        Max2053Gamma: common.withDefault(common.Numeric, 100),
        MaxGammaValue: common.withDefault(common.Int32, 4096),
        UnitIcCount: common.Int32_255,
        ICNumber: common.UInt8_5,
        BlankOptimizationLevel: common.UInt8_1,
        Support22BitModel: common.Bool_true,
        Auto5252ResetTime: common.withDefault(io_ts_types_1.DateFromISOString, new Date(2017, 0, 1, 0, 0, 59)),
        GclkFreqP: common.UInt8_12,
        GclkFreqM: common.UInt8_3,
        GclkFreqN: common.UInt8_2,
        DclkNumFor2055: common.Int32_1,
        GclkNumFor2055: common.Int32_128,
        GCLKRate2055: common.withDefault(common.Numeric, 10),
        DisplayMode: common.UInt8_255,
        RealPhysicalGroupNum: common.Int32_2,
        ShadowEliminationPotentialLevel: common.UInt8_5,
        LineBlankVoltage: common.UInt8_2,
        StartScan1: common.UInt8_15,
        StartScan2: common.UInt8_31,
        StartScan3: common.withDefault(common.UInt8, 47),
        StartScan4: common.withDefault(common.UInt8, 63),
        RealBrightnessOf2053: common.UInt8_255,
        BrightPriorityMode: common.withDefault(PriorityMode_1.PriorityMode, 'Contrast'),
    }),
    t.partial({
        ConfigFileVersion: ConfigFileVersionInfo_1.ConfigFileVersionInfo,
        LEDCtrlStatus: ControlModeType_1.ControlModeType,
        VirtualMode: VirtualModeType_1.VirtualModeType,
        IncAddrPerDrive: common.Int32,
        isSupportMulticolorGamma: common.Bool,
        RedGammaTable: common.buffer_GAMMAVALUE_COUNT,
        GreenGammaTable: common.buffer_GAMMAVALUE_COUNT,
        BlueGammaTable: common.buffer_GAMMAVALUE_COUNT,
        ExtendRedGammaTable: common.buffer_GAMMAVALUE_COUNT,
        ExtendGreenGammaTable: common.buffer_GAMMAVALUE_COUNT,
        ExtendBlueGammaTable: common.buffer_GAMMAVALUE_COUNT,
        IsEnableCalibration: common.Bool,
        CoefSourceType: CoefficientSourceType_1.CoefficientSourceType,
        CorrectionMode: CorrectType_1.CorrectType,
        ThreasholdOfPointDetect: common.Int32,
        IsIrRegular: common.Bool,
        StandardLedModuleProp: LEDModuleProperty_1.LEDModuleProperty,
        X: common.Int32,
        Y: common.Int32,
        ModCascadeType: ModuleCascadeDiretion_1.ModuleCascadeDiretion,
        PointTableData: common.Base64,
        IsLightFrom1stGray: common.Bool,
        IsSM5266Decode: common.Bool,
        LatDelay: common.Int32,
        TinyAfterglowMoment: common.Int32,
        SubFieldPart: new common.BufferFromBase64('SubFieldPart', MaxValue_1.default.MAX_SUBFIELDPART_COUNT),
        OEData: new common.BufferFromBase64('OEData', MaxValue_1.default.MAX_OETABLE_LENGHT),
        LowGrayCompensation: common.UInt8,
        LowGrayQuery: LowGrayQueryMode_1.LowGrayQueryMode,
        IsNewOERamEnable: common.Bool,
        IsLowGrayRamEnable: common.Bool,
        IsEnableTranCntNum: common.Bool,
        TempOEValue: common.Numeric,
        IsConnectHubMonitor: common.Bool,
        OfflineFrame: ShowTypeWhenPortDisconnected_1.ShowTypeWhenPortDisconnected,
        DriverFucntion: common.UInt8,
        ABCDRollOver: common.Bool,
        ScanSequenceAdjustEn: common.Bool,
        LightFlashClose: common.Bool,
        SmartSetMode: SmartSetMode_1.SmartSetMode,
        RamAData: common.buffer_MAX_MULTIPLE_CHIP_TABLELEN,
        RamBData: common.buffer_MAX_MULTIPLE_CHIP_TABLELEN,
        RamCData: common.buffer_MAX_MULTIPLE_CHIP_TABLELEN,
        RamDData: common.buffer_MAX_MULTIPLE_CHIP_TABLELEN,
        IsDExtendMode: common.Bool,
        IsSymmetricalOutputMode: common.Bool,
        RedNoCorrectionThreshold: common.UInt16,
        GreenNoCorrectionThreshold: common.UInt16,
        BlueNoCorrectionThreshold: common.UInt16,
        VirRedNoCorrectionThreshold: common.UInt16,
        TwentyDataGroupEnable: common.Bool,
        GroupSwapEnable: common.Bool,
        GroupSwapInfo: new common.BufferFromBase64('GroupSwapInfo', MaxValue_1.default.MAX_SCANNER_DATAGROUP),
        MonitorGroupSwapEnable: common.Bool,
        MonitorGroupSwapInfo: new common.BufferFromBase64('MonitorGroupSwapInfo', MaxValue_1.default.MAX_MONITOR_DATAGROUP),
        Mbi5042GrayEnhanced: common.Bool,
        My9262GrayEnhanced: common.Bool,
        Mbi5166GrayEnhanced: common.Bool,
        IsLowAshOptimization: common.Bool,
        IsEnableMonitorRGB: common.Bool,
        MonitorRGBCode: common.buffer_COLOR_COUNT,
        Is24DataGroup: common.Bool,
        Is28DataGroup: common.Bool,
        OtherRefreshNumParams: new common.BufferFromBase64('OtherRefreshNumParams', MaxValue_1.default.MAX_OTHER_REFRESH_NUM_PARAMS_COUNT),
        IsEnableOtherRefreshNumParams: common.Bool,
        CommonIrCabinetMode: CommonIrCabinetType_1.CommonIrCabinetType,
        IsSupportHighLoad: common.Bool,
        IsGhostSignalNegation: common.Bool,
        IsCloseGhostSignal: common.Bool,
        IsReverseScanOutput: common.Bool,
        DataGroupOutPutType: DataGroupOutPutMode_1.DataGroupOutPutMode,
        IsStarSwipPoint: common.Bool,
        IsOpenProtection: common.Bool,
        IsOpenClearBlankLine: common.Bool,
        IsOpenLowAshCompensation: common.Bool,
        LowAshCompensationOne: common.UInt8,
        LowAshCompensationTwo: common.UInt8,
        PowerOnBrightnessAdjustEn: common.Bool,
        OpenEMCFun: common.Bool,
        EnFrameTimeMgt: common.Bool,
        ReduceHighContrast: common.UInt8,
        IsChipSUM2117: common.Bool,
        IsStartDoubleLock: common.Bool,
        CurrentPosition: common.Int32,
        CurrentPhase: common.Int32,
        IsChipSUM2017TD: common.Bool,
        IsStartDoubleLock2017TD: common.Bool,
        CurrentPosition2017TD: common.Int32,
        CurrentPhase2017TD: common.Int32,
        RPositiveNegativeValue: common.Bool,
        GPositiveNegativeValue: common.Bool,
        BPositiveNegativeValue: common.Bool,
        CabinetInfo: CabinetInfomation_1.CabinetInfomation,
        CurrentRange: ChipCfgCurrentRange_1.ChipCfgCurrentRange,
        EnableEnhanceFirstScan: common.Bool,
        FirstScanCompensation: common.Int32,
        OtherScanCompenscation: common.Int32,
        ChipPropey: unions_1.ChipBaseExtendPropey,
        MBI515xDeltaT: common.UInt8,
        IsOpen5958Exchange: common.Bool,
        EliminateMode: common.Int32,
        IrCabinetProp: IrRegularCabinetProperty_1.IrRegularCabinetProperty,
        FlashPTopology: FlashTopology_1.FlashTopology,
        Exceed256DataIsValid: common.Bool,
        IsKillMode: common.Bool,
        SpecialFrameRate: SpecialFrameRateInfo_1.SpecialFrameRateInfo,
        LS9960Data: LS9960Data_1.LS9960Data,
        LS9918Data: LS9918Data_1.LS9918Data,
        LS9918orSC6618Flag: common.Int32,
        LS9929Data: LS9929Data_1.LS9929Data,
        LS9935Data: LS9935Data_1.LS9935Data,
        LS9930Data: LS9930Data_1.LS9930Data,
        LS9926Data: LS9926Data_1.LS9926Data,
        ScanShiftForImageData: common.UInt16,
        Enable18BitModel: common.Bool,
        Enable22BitModel: common.Bool,
        EnableDirectMode: common.Bool,
        ABCSignalDelayEnable: common.Bool,
        DESignalDelayEnable: common.Bool,
        ABCDESignalDelayTime: common.UInt8,
        AutoOrManual5252ResetSwitch: common.Bool,
        IntervalDate5252: common.UInt8,
        ShadowEliminationEnhancedEnable: common.Bool,
        ChipIs5124NewFlag: common.UInt8,
        DecodeChipParamExtendProp: DecodeChipParamBase_1.DecodeChipParamBase,
        ChipAutoAdjustRefreshRateParam: unions_1.ChipAutoAdjustRefreshRateParamBase,
        CustomGammaInfo: CustomGammaInfo_1.CustomGammaInfo,
        OddEvenScan: common.UInt8,
    }),
], 'ScanBoardProperty');
//# sourceMappingURL=ScanBoardProperty.js.map