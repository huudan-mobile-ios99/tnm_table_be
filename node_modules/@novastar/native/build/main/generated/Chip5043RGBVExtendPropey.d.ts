import * as t from 'io-ts';
import { ChipMBI5043ExtendProperty } from './ChipMBI5043ExtendProperty';
export declare const Chip5043RGBVExtendPropeyBase: t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        GCLKShift: t.Type<number, number, unknown>;
        SelectChargeMode: t.Type<number, number, unknown>;
        ColorShiftCompensation: t.Type<number, number, unknown>;
        GCLKRising: t.Type<boolean, boolean, unknown>;
        EnableCharge: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5043ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        GCLKShift: t.Type<number, number, unknown>;
        SelectChargeMode: t.Type<number, number, unknown>;
        ColorShiftCompensation: t.Type<number, number, unknown>;
        GCLKRising: t.Type<boolean, boolean, unknown>;
        EnableCharge: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5043ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        GCLKShift: t.Type<number, number, unknown>;
        SelectChargeMode: t.Type<number, number, unknown>;
        ColorShiftCompensation: t.Type<number, number, unknown>;
        GCLKRising: t.Type<boolean, boolean, unknown>;
        EnableCharge: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5043ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        GCLKShift: t.Type<number, number, unknown>;
        SelectChargeMode: t.Type<number, number, unknown>;
        ColorShiftCompensation: t.Type<number, number, unknown>;
        GCLKRising: t.Type<boolean, boolean, unknown>;
        EnableCharge: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5043ExtendProperty">;
    }>]>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link Chip5043RGBVExtendPropey}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:42235
 */
export declare const Chip5043RGBVExtendPropey: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        GCLKShift: t.Type<number, number, unknown>;
        SelectChargeMode: t.Type<number, number, unknown>;
        ColorShiftCompensation: t.Type<number, number, unknown>;
        GCLKRising: t.Type<boolean, boolean, unknown>;
        EnableCharge: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5043ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        GCLKShift: t.Type<number, number, unknown>;
        SelectChargeMode: t.Type<number, number, unknown>;
        ColorShiftCompensation: t.Type<number, number, unknown>;
        GCLKRising: t.Type<boolean, boolean, unknown>;
        EnableCharge: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5043ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        GCLKShift: t.Type<number, number, unknown>;
        SelectChargeMode: t.Type<number, number, unknown>;
        ColorShiftCompensation: t.Type<number, number, unknown>;
        GCLKRising: t.Type<boolean, boolean, unknown>;
        EnableCharge: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5043ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        GCLKShift: t.Type<number, number, unknown>;
        SelectChargeMode: t.Type<number, number, unknown>;
        ColorShiftCompensation: t.Type<number, number, unknown>;
        GCLKRising: t.Type<boolean, boolean, unknown>;
        EnableCharge: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5043ExtendProperty">;
    }>]>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"Chip5043RGBVExtendPropey">;
}>]>;
export interface Chip5043RGBVExtendPropey extends t.TypeOf<typeof Chip5043RGBVExtendPropey> {
    RedProperty?: ChipMBI5043ExtendProperty;
    GreenProperty?: ChipMBI5043ExtendProperty;
    BlueProperty?: ChipMBI5043ExtendProperty;
    VRedProperty?: ChipMBI5043ExtendProperty;
}
