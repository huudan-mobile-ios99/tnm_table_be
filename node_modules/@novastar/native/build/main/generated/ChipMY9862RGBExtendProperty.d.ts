import * as t from 'io-ts';
import { ChipMY9862ExtendProperty } from './ChipMY9862ExtendProperty';
export declare const ChipMY9862RGBExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        CompensationMode: t.Type<boolean, boolean, unknown>;
        LowAshImprovement: t.Type<number, number, unknown>;
        FirstSweepCompensation: t.Type<number, number, unknown>;
        EliminateGhostingSet: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMY9862ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        CompensationMode: t.Type<boolean, boolean, unknown>;
        LowAshImprovement: t.Type<number, number, unknown>;
        FirstSweepCompensation: t.Type<number, number, unknown>;
        EliminateGhostingSet: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMY9862ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        CompensationMode: t.Type<boolean, boolean, unknown>;
        LowAshImprovement: t.Type<number, number, unknown>;
        FirstSweepCompensation: t.Type<number, number, unknown>;
        EliminateGhostingSet: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMY9862ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        CompensationMode: t.Type<boolean, boolean, unknown>;
        LowAshImprovement: t.Type<number, number, unknown>;
        FirstSweepCompensation: t.Type<number, number, unknown>;
        EliminateGhostingSet: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMY9862ExtendProperty">;
    }>]>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipMY9862RGBExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:41886
 */
export declare const ChipMY9862RGBExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        CompensationMode: t.Type<boolean, boolean, unknown>;
        LowAshImprovement: t.Type<number, number, unknown>;
        FirstSweepCompensation: t.Type<number, number, unknown>;
        EliminateGhostingSet: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMY9862ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        CompensationMode: t.Type<boolean, boolean, unknown>;
        LowAshImprovement: t.Type<number, number, unknown>;
        FirstSweepCompensation: t.Type<number, number, unknown>;
        EliminateGhostingSet: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMY9862ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        CompensationMode: t.Type<boolean, boolean, unknown>;
        LowAshImprovement: t.Type<number, number, unknown>;
        FirstSweepCompensation: t.Type<number, number, unknown>;
        EliminateGhostingSet: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMY9862ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
        CompensationMode: t.Type<boolean, boolean, unknown>;
        LowAshImprovement: t.Type<number, number, unknown>;
        FirstSweepCompensation: t.Type<number, number, unknown>;
        EliminateGhostingSet: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMY9862ExtendProperty">;
    }>]>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipMY9862RGBExtendProperty">;
}>]>;
export interface ChipMY9862RGBExtendProperty extends t.TypeOf<typeof ChipMY9862RGBExtendProperty> {
    RedProperty?: ChipMY9862ExtendProperty;
    GreenProperty?: ChipMY9862ExtendProperty;
    BlueProperty?: ChipMY9862ExtendProperty;
    VRedProperty?: ChipMY9862ExtendProperty;
}
