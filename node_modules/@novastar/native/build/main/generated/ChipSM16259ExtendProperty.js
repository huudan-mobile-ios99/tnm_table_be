"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChipSM16259ExtendProperty = exports.ChipSM16259ExtendPropertyBase = void 0;
const t = __importStar(require("io-ts"));
const common = __importStar(require("../lib/common"));
const ChipBaseExtendPropey_1 = require("./ChipBaseExtendPropey");
const LowAshGrade_1 = require("./LowAshGrade");
const MultiplierGrade_1 = require("./MultiplierGrade");
const OpenTestVoltageGrade_1 = require("./OpenTestVoltageGrade");
const PWMModel_1 = require("./PWMModel");
exports.ChipSM16259ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey_1.ChipBaseExtendPropey,
    t.type({
        IsShadowsEnable: common.Bool_true,
        MultiplierGrade: common.withDefault(MultiplierGrade_1.MultiplierGrade, 'EightGrade'),
        ScanTypeUshort: common.UInt8_32,
        LowAshCompensationTwo: common.UInt8_0,
        Gain: common.withDefault(common.UInt8, 57),
        RegValueConfigFirst: common.UInt16_65337,
        LowAshCompensationOne: common.UInt8_0,
        IsOpenTest: common.Bool_false,
        OpenTestVoltageGrade: common.withDefault(OpenTestVoltageGrade_1.OpenTestVoltageGrade, 'OneVoltageGrade'),
        BlankingMode: common.UInt8_2,
        RegValueConfigSecond: common.UInt16_11,
        IsEnergySaving: common.Bool_false,
        ShadowVoltageOne: common.UInt8_0,
        ShadowVoltageTwo: common.UInt8_0,
        PWMModel: common.withDefault(PWMModel_1.PWMModel, 'OneModel'),
        RegValueConfigThird: common.UInt16_3072,
        RegValueConfigForth: common.UInt16_0,
    }),
    t.partial({
        LowAshGrade: LowAshGrade_1.LowAshGrade,
    }),
], 'ChipSM16259ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipSM16259ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipSM16259.decompiled.cs:110
 */
exports.ChipSM16259ExtendProperty = t.intersection([
    exports.ChipSM16259ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipSM16259ExtendProperty') }),
], 'ChipSM16259ExtendProperty');
//# sourceMappingURL=ChipSM16259ExtendProperty.js.map