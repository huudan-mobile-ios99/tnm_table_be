"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createReadVoltageOfMonitorCard(addr, portAddr, scanBoardAddr, readCountOfValtage, beginIdnexOfValtage) {
    const req = new codec_1.Request(AddressMapping_1.default.Scanner_VoltageOfMonitorCardOccupancy * readCountOfValtage, 'ReadVoltageOfMonitorCard');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address =
        AddressMapping_1.default.Scanner_VoltageOfMonitorCardAddr +
            AddressMapping_1.default.Scanner_VoltageOfMonitorCardOccupancy * beginIdnexOfValtage;
    return req;
}
exports.default = createReadVoltageOfMonitorCard;
codec_1.Session.prototype.ReadVoltageOfMonitorCard = async function ReadVoltageOfMonitorCard(addr, portAddr, scanBoardAddr, readCountOfValtage, beginIdnexOfValtage) {
    const req = createReadVoltageOfMonitorCard(addr, portAddr, scanBoardAddr, readCountOfValtage, beginIdnexOfValtage);
    return (await this.connection.send(req)).data;
};
codec_1.Session.prototype.tryReadVoltageOfMonitorCard = async function tryReadVoltageOfMonitorCard(addr, portAddr, scanBoardAddr, readCountOfValtage, beginIdnexOfValtage) {
    const req = createReadVoltageOfMonitorCard(addr, portAddr, scanBoardAddr, readCountOfValtage, beginIdnexOfValtage);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadVoltageOfMonitorCard.js.map