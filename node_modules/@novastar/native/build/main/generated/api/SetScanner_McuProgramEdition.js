"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetScanner_McuProgramEdition(addr, portAddr, scanBoardAddr, bBroadcast, scanner_McuProgramEdition) {
    const $data = (0, codec_1.encodeUIntLE)(scanner_McuProgramEdition, AddressMapping_1.default.Scanner_McuProgramEditionOccupancy);
    const req = new codec_1.Request($data, bBroadcast, 'SetScanner_McuProgramEdition');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping_1.default.Scanner_McuProgramEditionAddr;
    return req;
}
exports.default = createSetScanner_McuProgramEdition;
codec_1.Session.prototype.SetScanner_McuProgramEdition = async function SetScanner_McuProgramEdition(addr, portAddr, scanBoardAddr, bBroadcast, scanner_McuProgramEdition) {
    const req = createSetScanner_McuProgramEdition(addr, portAddr, scanBoardAddr, bBroadcast, scanner_McuProgramEdition);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetScanner_McuProgramEdition = async function trySetScanner_McuProgramEdition(addr, portAddr, scanBoardAddr, scanner_McuProgramEdition) {
    const req = createSetScanner_McuProgramEdition(addr, portAddr, scanBoardAddr, false, scanner_McuProgramEdition);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScanner_McuProgramEdition.js.map