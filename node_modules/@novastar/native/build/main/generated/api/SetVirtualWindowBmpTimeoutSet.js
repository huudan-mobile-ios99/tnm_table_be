"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetVirtualWindowBmpTimeoutSet(addr, bBroadcast, virtuaWindowBmpTimeoutSet) {
    const $data = (0, codec_1.encodeUIntLE)(virtuaWindowBmpTimeoutSet, AddressMapping_1.default.VirtualWindowBmpTimeoutSetOccupancy);
    const req = new codec_1.Request($data, bBroadcast, 'SetVirtualWindowBmpTimeoutSet');
    req.destination = addr;
    req.address = AddressMapping_1.default.VirtualWindowBmpTimeoutSetAddr;
    return req;
}
exports.default = createSetVirtualWindowBmpTimeoutSet;
codec_1.Session.prototype.SetVirtualWindowBmpTimeoutSet = async function SetVirtualWindowBmpTimeoutSet(addr, bBroadcast, virtuaWindowBmpTimeoutSet) {
    const req = createSetVirtualWindowBmpTimeoutSet(addr, bBroadcast, virtuaWindowBmpTimeoutSet);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetVirtualWindowBmpTimeoutSet =
    async function trySetVirtualWindowBmpTimeoutSet(addr, virtuaWindowBmpTimeoutSet) {
        const req = createSetVirtualWindowBmpTimeoutSet(addr, false, virtuaWindowBmpTimeoutSet);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetVirtualWindowBmpTimeoutSet.js.map