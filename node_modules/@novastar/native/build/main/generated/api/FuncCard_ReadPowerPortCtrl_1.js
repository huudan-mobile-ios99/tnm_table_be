"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createFuncCard_ReadPowerPortCtrl_1(addr, portAddr, funcCardAddr, powerIndex) {
    const req = new codec_1.Request(AddressMapping_1.default.FuncCard_PowerPortCtrlOccupancy, 'FuncCard_ReadPowerPortCtrl_1');
    req.destination = addr;
    req.deviceType = 2;
    req.port = portAddr;
    req.rcvIndex = funcCardAddr;
    req.address =
        AddressMapping_1.default.FuncCard_PowerPortCtrlAddr +
            powerIndex * AddressMapping_1.default.FuncCard_PowerPortCtrlOccupancy;
    return req;
}
exports.default = createFuncCard_ReadPowerPortCtrl_1;
codec_1.Session.prototype.FuncCard_ReadPowerPortCtrl_1 = async function FuncCard_ReadPowerPortCtrl_1(addr, portAddr, funcCardAddr, powerIndex) {
    const req = createFuncCard_ReadPowerPortCtrl_1(addr, portAddr, funcCardAddr, powerIndex);
    return (0, codec_1.decodeUIntLE)(await this.connection.send(req));
};
codec_1.Session.prototype.tryFuncCard_ReadPowerPortCtrl_1 = async function tryFuncCard_ReadPowerPortCtrl_1(addr, portAddr, funcCardAddr, powerIndex) {
    const req = createFuncCard_ReadPowerPortCtrl_1(addr, portAddr, funcCardAddr, powerIndex);
    return this.connection.trySend(req);
};
//# sourceMappingURL=FuncCard_ReadPowerPortCtrl_1.js.map