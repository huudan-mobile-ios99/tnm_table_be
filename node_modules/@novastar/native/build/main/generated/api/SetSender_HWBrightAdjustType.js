"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
const HWBrightAdjustType_1 = require("../HWBrightAdjustType");
function createSetSender_HWBrightAdjustType(addr, bBroadcast, enableAutoData) {
    const req = new codec_1.Request(enableAutoData === HWBrightAdjustType_1.HWBrightAdjustTypeEnum.HWAutoBright
        ? [125]
        : enableAutoData === HWBrightAdjustType_1.HWBrightAdjustTypeEnum.HWProgram
            ? [91]
            : [255], bBroadcast, 'SetSender_HWBrightAdjustType');
    req.destination = addr;
    req.address = AddressMapping_1.default.Sender_HWBrightAdjustTypeAddr;
    return req;
}
exports.default = createSetSender_HWBrightAdjustType;
codec_1.Session.prototype.SetSender_HWBrightAdjustType = async function SetSender_HWBrightAdjustType(addr, bBroadcast, enableAutoData) {
    const req = createSetSender_HWBrightAdjustType(addr, bBroadcast, enableAutoData);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetSender_HWBrightAdjustType = async function trySetSender_HWBrightAdjustType(addr, enableAutoData) {
    const req = createSetSender_HWBrightAdjustType(addr, false, enableAutoData);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_HWBrightAdjustType.js.map