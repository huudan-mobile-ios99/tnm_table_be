"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetDviOffsetX(addr, bBroadcast, dviOffsetX, index) {
    const $data = (0, codec_1.encodeUIntLE)(dviOffsetX, AddressMapping_1.default.DviOffsetXOccupancy);
    const req = new codec_1.Request($data, bBroadcast, 'SetDviOffsetX');
    req.destination = addr;
    req.address = AddressMapping_1.default.DviOffsetXAddr + AddressMapping_1.default.DviOccupancy * index;
    return req;
}
exports.default = createSetDviOffsetX;
codec_1.Session.prototype.SetDviOffsetX = async function SetDviOffsetX(addr, bBroadcast, dviOffsetX, index) {
    const req = createSetDviOffsetX(addr, bBroadcast, dviOffsetX, index);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetDviOffsetX = async function trySetDviOffsetX(addr, dviOffsetX, index) {
    const req = createSetDviOffsetX(addr, false, dviOffsetX, index);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetDviOffsetX.js.map