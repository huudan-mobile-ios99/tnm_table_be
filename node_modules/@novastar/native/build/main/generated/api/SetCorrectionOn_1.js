"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetCorrectionOn_1(addr, portAddr, scanBoardAddr, bBroadcast, isOpenCorrect, type, retainClrInfo) {
    const req = new codec_1.Request([0, 0 | (isOpenCorrect ? 1 : 0), 0 | (type << 1), 0 | (!retainClrInfo ? 4 : 0)], bBroadcast, 'SetCorrectionOn_1');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping_1.default.CorrectionOnAddr;
    return req;
}
exports.default = createSetCorrectionOn_1;
codec_1.Session.prototype.SetCorrectionOn_1 = async function SetCorrectionOn_1(addr, portAddr, scanBoardAddr, bBroadcast, isOpenCorrect, type, retainClrInfo) {
    const req = createSetCorrectionOn_1(addr, portAddr, scanBoardAddr, bBroadcast, isOpenCorrect, type, retainClrInfo);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetCorrectionOn_1 = async function trySetCorrectionOn_1(addr, portAddr, scanBoardAddr, isOpenCorrect, type, retainClrInfo) {
    const req = createSetCorrectionOn_1(addr, portAddr, scanBoardAddr, false, isOpenCorrect, type, retainClrInfo);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetCorrectionOn_1.js.map