"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSet9868ABlankOptimizationLevel2(addr, portAddr, scanBoardAddr, bBroadcast, blankLevelValue) {
    const req = new codec_1.Request([blankLevelValue], bBroadcast, 'Set9868ABlankOptimizationLevel2');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping_1.default.Scanner_9868ABlankOptimizationLevelAddr2;
    return req;
}
exports.default = createSet9868ABlankOptimizationLevel2;
codec_1.Session.prototype.Set9868ABlankOptimizationLevel2 = async function Set9868ABlankOptimizationLevel2(addr, portAddr, scanBoardAddr, bBroadcast, blankLevelValue) {
    const req = createSet9868ABlankOptimizationLevel2(addr, portAddr, scanBoardAddr, bBroadcast, blankLevelValue);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySet9868ABlankOptimizationLevel2 =
    async function trySet9868ABlankOptimizationLevel2(addr, portAddr, scanBoardAddr, blankLevelValue) {
        const req = createSet9868ABlankOptimizationLevel2(addr, portAddr, scanBoardAddr, false, blankLevelValue);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=Set9868ABlankOptimizationLevel2.js.map