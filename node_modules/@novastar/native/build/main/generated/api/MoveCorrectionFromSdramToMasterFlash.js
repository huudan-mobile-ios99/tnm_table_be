"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createMoveCorrectionFromSdramToMasterFlash(addr, portAddr, scanBoardAddr, bBroadcast) {
    const req = new codec_1.Request([5], bBroadcast, 'MoveCorrectionFromSdramToMasterFlash');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping_1.default.Correction_RestitutionAddr;
    return req;
}
exports.default = createMoveCorrectionFromSdramToMasterFlash;
codec_1.Session.prototype.MoveCorrectionFromSdramToMasterFlash =
    async function MoveCorrectionFromSdramToMasterFlash(addr, portAddr, scanBoardAddr, bBroadcast) {
        const req = createMoveCorrectionFromSdramToMasterFlash(addr, portAddr, scanBoardAddr, bBroadcast);
        await this.connection.send(req);
    };
codec_1.Session.prototype.tryMoveCorrectionFromSdramToMasterFlash =
    async function tryMoveCorrectionFromSdramToMasterFlash(addr, portAddr, scanBoardAddr) {
        const req = createMoveCorrectionFromSdramToMasterFlash(addr, portAddr, scanBoardAddr, false);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=MoveCorrectionFromSdramToMasterFlash.js.map