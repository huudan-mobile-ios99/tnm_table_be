"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createReadScannerIrCabientCfg(addr, portAddr, scanBoardAddr) {
    const req = new codec_1.Request(AddressMapping_1.default.ScannerIrCanbinetCfgOccupancy, 'ReadScannerIrCabientCfg');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping_1.default.ScannerIrCanbinetCfgAddr;
    return req;
}
exports.default = createReadScannerIrCabientCfg;
codec_1.Session.prototype.ReadScannerIrCabientCfg = async function ReadScannerIrCabientCfg(addr, portAddr, scanBoardAddr) {
    const req = createReadScannerIrCabientCfg(addr, portAddr, scanBoardAddr);
    return (await this.connection.send(req)).data;
};
codec_1.Session.prototype.tryReadScannerIrCabientCfg = async function tryReadScannerIrCabientCfg(addr, portAddr, scanBoardAddr) {
    const req = createReadScannerIrCabientCfg(addr, portAddr, scanBoardAddr);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadScannerIrCabientCfg.js.map