"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createFuncCard_SetPowerPortCtrl(addr, bBroadcast, powerCtrlMode, powerIndex) {
    const $data = (0, codec_1.encodeUIntLE)(powerCtrlMode, AddressMapping_1.default.FuncCard_PowerPortCtrlOccupancy);
    const req = new codec_1.Request($data, bBroadcast, 'FuncCard_SetPowerPortCtrl');
    req.destination = addr;
    req.address =
        AddressMapping_1.default.FuncCard_PowerPortCtrlAddr +
            powerIndex * AddressMapping_1.default.FuncCard_PowerPortCtrlOccupancy;
    return req;
}
exports.default = createFuncCard_SetPowerPortCtrl;
codec_1.Session.prototype.FuncCard_SetPowerPortCtrl = async function FuncCard_SetPowerPortCtrl(addr, bBroadcast, powerCtrlMode, powerIndex) {
    const req = createFuncCard_SetPowerPortCtrl(addr, bBroadcast, powerCtrlMode, powerIndex);
    await this.connection.send(req);
};
codec_1.Session.prototype.tryFuncCard_SetPowerPortCtrl = async function tryFuncCard_SetPowerPortCtrl(addr, powerCtrlMode, powerIndex) {
    const req = createFuncCard_SetPowerPortCtrl(addr, false, powerCtrlMode, powerIndex);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=FuncCard_SetPowerPortCtrl.js.map