"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
const DVIEncryptType_1 = require("../DVIEncryptType");
function createSetSender_EnableDVIEncrypt(addr, bBroadcast, encryptType) {
    const req = new codec_1.Request(encryptType === DVIEncryptType_1.DVIEncryptTypeEnum.EnableEncrypt
        ? [72]
        : encryptType === DVIEncryptType_1.DVIEncryptTypeEnum.DisableEncrypt
            ? [139]
            : encryptType === DVIEncryptType_1.DVIEncryptTypeEnum.None
                ? [255]
                : [0], bBroadcast, 'SetSender_EnableDVIEncrypt');
    req.destination = addr;
    req.address = AddressMapping_1.default.Sender_EnableDVIEncryptAddr;
    return req;
}
exports.default = createSetSender_EnableDVIEncrypt;
codec_1.Session.prototype.SetSender_EnableDVIEncrypt = async function SetSender_EnableDVIEncrypt(addr, bBroadcast, encryptType) {
    const req = createSetSender_EnableDVIEncrypt(addr, bBroadcast, encryptType);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetSender_EnableDVIEncrypt = async function trySetSender_EnableDVIEncrypt(addr, encryptType) {
    const req = createSetSender_EnableDVIEncrypt(addr, false, encryptType);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_EnableDVIEncrypt.js.map