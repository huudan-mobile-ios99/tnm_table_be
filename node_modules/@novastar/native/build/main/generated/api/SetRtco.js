"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetRtco(addr, bBroadcast, rtco) {
    if (rtco.length !== AddressMapping_1.default.RtcoOccupancy)
        throw new TypeError(`Invalid buffer size: ${rtco.length}`);
    const req = new codec_1.Request(rtco, bBroadcast, 'SetRtco');
    req.destination = addr;
    req.address = AddressMapping_1.default.RtcoAddr;
    return req;
}
exports.default = createSetRtco;
codec_1.Session.prototype.SetRtco = async function SetRtco(addr, bBroadcast, rtco) {
    const req = createSetRtco(addr, bBroadcast, rtco);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetRtco = async function trySetRtco(addr, rtco) {
    const req = createSetRtco(addr, false, rtco);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetRtco.js.map