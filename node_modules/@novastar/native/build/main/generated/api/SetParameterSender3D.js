"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetParameterSender3D(addr, portAddr, scanBoardAddr, bBroadcast, parameterSender3D) {
    const $data = (0, codec_1.encodeUIntLE)(parameterSender3D, AddressMapping_1.default.ParameterStore2SpiFlashOccupancy);
    const req = new codec_1.Request($data, bBroadcast, 'SetParameterSender3D');
    req.destination = addr;
    req.deviceType = 4;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping_1.default.ParameterStore2SpiFlashAddr;
    return req;
}
exports.default = createSetParameterSender3D;
codec_1.Session.prototype.SetParameterSender3D = async function SetParameterSender3D(addr, portAddr, scanBoardAddr, bBroadcast, parameterSender3D) {
    const req = createSetParameterSender3D(addr, portAddr, scanBoardAddr, bBroadcast, parameterSender3D);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetParameterSender3D = async function trySetParameterSender3D(addr, portAddr, scanBoardAddr, parameterSender3D) {
    const req = createSetParameterSender3D(addr, portAddr, scanBoardAddr, false, parameterSender3D);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetParameterSender3D.js.map