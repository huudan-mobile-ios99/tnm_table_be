"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetGrayMode(addr, portAddr, scanBoardAddr, bBroadcast, grayRealize, grayMode) {
    const $data = (0, codec_1.encodeUIntLE)((grayRealize << 4) + grayMode, AddressMapping_1.default.GrayModeOccupancy);
    const req = new codec_1.Request($data, bBroadcast, 'SetGrayMode');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping_1.default.GrayModeAddr;
    return req;
}
exports.default = createSetGrayMode;
codec_1.Session.prototype.SetGrayMode = async function SetGrayMode(addr, portAddr, scanBoardAddr, bBroadcast, grayRealize, grayMode) {
    const req = createSetGrayMode(addr, portAddr, scanBoardAddr, bBroadcast, grayRealize, grayMode);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetGrayMode = async function trySetGrayMode(addr, portAddr, scanBoardAddr, grayRealize, grayMode) {
    const req = createSetGrayMode(addr, portAddr, scanBoardAddr, false, grayRealize, grayMode);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetGrayMode.js.map