"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createDistribute_SetDistributeFPGALength(addr, portAddr, distributAddr, bBroadcast, fpgaLength) {
    const $data = (0, codec_1.encodeUIntLE)(fpgaLength, AddressMapping_1.default.Distribute_FPGALengthOccupancy);
    const req = new codec_1.Request($data, bBroadcast, 'Distribute_SetDistributeFPGALength');
    req.destination = addr;
    req.deviceType = 3;
    req.port = portAddr;
    req.rcvIndex = distributAddr;
    req.address = AddressMapping_1.default.Distribute_FPGALengthAddr;
    return req;
}
exports.default = createDistribute_SetDistributeFPGALength;
codec_1.Session.prototype.Distribute_SetDistributeFPGALength =
    async function Distribute_SetDistributeFPGALength(addr, portAddr, distributAddr, bBroadcast, fpgaLength) {
        const req = createDistribute_SetDistributeFPGALength(addr, portAddr, distributAddr, bBroadcast, fpgaLength);
        await this.connection.send(req);
    };
codec_1.Session.prototype.tryDistribute_SetDistributeFPGALength =
    async function tryDistribute_SetDistributeFPGALength(addr, portAddr, distributAddr, fpgaLength) {
        const req = createDistribute_SetDistributeFPGALength(addr, portAddr, distributAddr, false, fpgaLength);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=Distribute_SetDistributeFPGALength.js.map