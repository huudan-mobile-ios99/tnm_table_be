"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetEthernetPortScannerX(addr, bBroadcast, ethernetPortScannerX, portIndex, scannerIndex) {
    const $data = (0, codec_1.encodeUIntLE)(ethernetPortScannerX, AddressMapping_1.default.EthernetPortScannerXOccupancy);
    const req = new codec_1.Request($data, bBroadcast, 'SetEthernetPortScannerX');
    req.destination = addr;
    req.address =
        AddressMapping_1.default.EthernetPortOccupancy * portIndex +
            AddressMapping_1.default.EthernetPortScannerXAddr +
            (AddressMapping_1.default.EthernetPortScannerXOccupancy + AddressMapping_1.default.EthernetPortScannerYOccupancy) *
                scannerIndex +
            AddressMapping_1.default.EthernetPortScannerXOccupancy;
    return req;
}
exports.default = createSetEthernetPortScannerX;
codec_1.Session.prototype.SetEthernetPortScannerX = async function SetEthernetPortScannerX(addr, bBroadcast, ethernetPortScannerX, portIndex, scannerIndex) {
    const req = createSetEthernetPortScannerX(addr, bBroadcast, ethernetPortScannerX, portIndex, scannerIndex);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetEthernetPortScannerX = async function trySetEthernetPortScannerX(addr, ethernetPortScannerX, portIndex, scannerIndex) {
    const req = createSetEthernetPortScannerX(addr, false, ethernetPortScannerX, portIndex, scannerIndex);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetEthernetPortScannerX.js.map