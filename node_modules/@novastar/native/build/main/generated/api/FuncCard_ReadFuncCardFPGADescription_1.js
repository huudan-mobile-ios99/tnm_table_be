"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createFuncCard_ReadFuncCardFPGADescription_1(addr, portAddr, funcCardAddr) {
    const req = new codec_1.Request(AddressMapping_1.default.FuncCard_FPGADescriptionnOccupancy, 'FuncCard_ReadFuncCardFPGADescription_1');
    req.destination = addr;
    req.deviceType = 2;
    req.port = portAddr;
    req.rcvIndex = funcCardAddr;
    req.address = AddressMapping_1.default.FuncCard_FPGADescriptionAddr;
    return req;
}
exports.default = createFuncCard_ReadFuncCardFPGADescription_1;
codec_1.Session.prototype.FuncCard_ReadFuncCardFPGADescription_1 =
    async function FuncCard_ReadFuncCardFPGADescription_1(addr, portAddr, funcCardAddr) {
        const req = createFuncCard_ReadFuncCardFPGADescription_1(addr, portAddr, funcCardAddr);
        return (await this.connection.send(req)).data;
    };
codec_1.Session.prototype.tryFuncCard_ReadFuncCardFPGADescription_1 =
    async function tryFuncCard_ReadFuncCardFPGADescription_1(addr, portAddr, funcCardAddr) {
        const req = createFuncCard_ReadFuncCardFPGADescription_1(addr, portAddr, funcCardAddr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=FuncCard_ReadFuncCardFPGADescription_1.js.map