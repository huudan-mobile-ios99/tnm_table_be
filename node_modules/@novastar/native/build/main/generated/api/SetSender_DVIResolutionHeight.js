"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetSender_DVIResolutionHeight(addr, bBroadcast, dviHeight) {
    const $data = (0, codec_1.encodeUIntLE)(dviHeight, AddressMapping_1.default.Sender_DVIWidthOccupancy);
    const req = new codec_1.Request($data, bBroadcast, 'SetSender_DVIResolutionHeight');
    req.destination = addr;
    req.address = AddressMapping_1.default.Sender_DVIHeightAddr;
    return req;
}
exports.default = createSetSender_DVIResolutionHeight;
codec_1.Session.prototype.SetSender_DVIResolutionHeight = async function SetSender_DVIResolutionHeight(addr, bBroadcast, dviHeight) {
    const req = createSetSender_DVIResolutionHeight(addr, bBroadcast, dviHeight);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetSender_DVIResolutionHeight =
    async function trySetSender_DVIResolutionHeight(addr, dviHeight) {
        const req = createSetSender_DVIResolutionHeight(addr, false, dviHeight);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetSender_DVIResolutionHeight.js.map