"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createReadSingleChipMicyocoSpaceAuto(addr, portAddr, scanBoardAddr) {
    const req = new codec_1.Request(AddressMapping_1.default.SingleChipMicyocoSpaceAutoOccupancy, 'ReadSingleChipMicyocoSpaceAuto');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping_1.default.SingleChipMicyocoSpaceAutoAddr;
    return req;
}
exports.default = createReadSingleChipMicyocoSpaceAuto;
codec_1.Session.prototype.ReadSingleChipMicyocoSpaceAuto = async function ReadSingleChipMicyocoSpaceAuto(addr, portAddr, scanBoardAddr) {
    const req = createReadSingleChipMicyocoSpaceAuto(addr, portAddr, scanBoardAddr);
    return (await this.connection.send(req)).data;
};
codec_1.Session.prototype.tryReadSingleChipMicyocoSpaceAuto =
    async function tryReadSingleChipMicyocoSpaceAuto(addr, portAddr, scanBoardAddr) {
        const req = createReadSingleChipMicyocoSpaceAuto(addr, portAddr, scanBoardAddr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=ReadSingleChipMicyocoSpaceAuto.js.map