"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetSoftwareCoefficientAccelerateFlag(Sender, portAddr, scanBoardAddr, bBroadcast, Is3x3) {
    const req = new codec_1.Request(Is3x3 ? [2] : [0], bBroadcast, 'SetSoftwareCoefficientAccelerateFlag');
    req.destination = Sender;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping_1.default.SoftwareCoefficientAccelerateFlag;
    return req;
}
exports.default = createSetSoftwareCoefficientAccelerateFlag;
codec_1.Session.prototype.SetSoftwareCoefficientAccelerateFlag =
    async function SetSoftwareCoefficientAccelerateFlag(Sender, portAddr, scanBoardAddr, bBroadcast, Is3x3) {
        const req = createSetSoftwareCoefficientAccelerateFlag(Sender, portAddr, scanBoardAddr, bBroadcast, Is3x3);
        await this.connection.send(req);
    };
codec_1.Session.prototype.trySetSoftwareCoefficientAccelerateFlag =
    async function trySetSoftwareCoefficientAccelerateFlag(Sender, portAddr, scanBoardAddr, Is3x3) {
        const req = createSetSoftwareCoefficientAccelerateFlag(Sender, portAddr, scanBoardAddr, false, Is3x3);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetSoftwareCoefficientAccelerateFlag.js.map