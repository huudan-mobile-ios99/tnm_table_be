"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetVRedBrightness(addr, portAddr, scanBoardAddr, bBroadcast, vRedBrightness) {
    const $data = (0, codec_1.encodeUIntLE)(vRedBrightness, AddressMapping_1.default.VRedBrightnessOccupancy);
    const req = new codec_1.Request($data, bBroadcast, 'SetVRedBrightness');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping_1.default.VRedBrightnessAddr;
    return req;
}
exports.default = createSetVRedBrightness;
codec_1.Session.prototype.SetVRedBrightness = async function SetVRedBrightness(addr, portAddr, scanBoardAddr, bBroadcast, vRedBrightness) {
    const req = createSetVRedBrightness(addr, portAddr, scanBoardAddr, bBroadcast, vRedBrightness);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetVRedBrightness = async function trySetVRedBrightness(addr, portAddr, scanBoardAddr, vRedBrightness) {
    const req = createSetVRedBrightness(addr, portAddr, scanBoardAddr, false, vRedBrightness);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetVRedBrightness.js.map