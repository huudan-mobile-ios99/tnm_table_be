"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createReadEthernetPortScannerXY(addr, portIndex, scannerIndex) {
    const req = new codec_1.Request(AddressMapping_1.default.EthernetPortScannerXOccupancy + AddressMapping_1.default.EthernetPortScannerYOccupancy, 'ReadEthernetPortScannerXY');
    req.destination = addr;
    req.address =
        AddressMapping_1.default.EthernetPortOccupancy * portIndex +
            AddressMapping_1.default.EthernetPortScannerXAddr +
            (AddressMapping_1.default.EthernetPortScannerXOccupancy + AddressMapping_1.default.EthernetPortScannerYOccupancy) *
                scannerIndex;
    return req;
}
exports.default = createReadEthernetPortScannerXY;
codec_1.Session.prototype.ReadEthernetPortScannerXY = async function ReadEthernetPortScannerXY(addr, portIndex, scannerIndex) {
    const req = createReadEthernetPortScannerXY(addr, portIndex, scannerIndex);
    return (await this.connection.send(req)).data;
};
codec_1.Session.prototype.tryReadEthernetPortScannerXY = async function tryReadEthernetPortScannerXY(addr, portIndex, scannerIndex) {
    const req = createReadEthernetPortScannerXY(addr, portIndex, scannerIndex);
    return this.connection.trySend(req);
};
//# sourceMappingURL=ReadEthernetPortScannerXY.js.map