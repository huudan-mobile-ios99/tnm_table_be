"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetMirrorMode(addr, bBroadcast, mirrorModeData, isPreposition) {
    const req = new codec_1.Request([mirrorModeData], bBroadcast, 'SetMirrorMode');
    req.destination = addr;
    if (isPreposition) {
        req.address = AddressMapping_1.default.MirrorModeFirAddr;
    }
    else {
        req.address = AddressMapping_1.default.MirrorModeSecAddr;
    }
    return req;
}
exports.default = createSetMirrorMode;
codec_1.Session.prototype.SetMirrorMode = async function SetMirrorMode(addr, bBroadcast, mirrorModeData, isPreposition) {
    const req = createSetMirrorMode(addr, bBroadcast, mirrorModeData, isPreposition);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetMirrorMode = async function trySetMirrorMode(addr, mirrorModeData, isPreposition) {
    const req = createSetMirrorMode(addr, false, mirrorModeData, isPreposition);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetMirrorMode.js.map