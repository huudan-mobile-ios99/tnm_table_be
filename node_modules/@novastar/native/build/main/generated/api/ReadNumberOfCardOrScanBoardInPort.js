"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createReadNumberOfCardOrScanBoardInPort(addr, portIndex, cardType) {
    const req = new codec_1.Request(AddressMapping_1.default.NumberOfCardOrBoardInPortOccupancy, 'ReadNumberOfCardOrScanBoardInPort');
    req.destination = addr;
    req.address = 0;
    if (portIndex < AddressMapping_1.default.New16PortOccupancy) {
        req.address =
            AddressMapping_1.default.NumberOfCardOrBoardInPortAddr +
                portIndex * AddressMapping_1.default.NumOfCardAndBoardInPortOccupancy +
                cardType * AddressMapping_1.default.NumberOfCardOrBoardInPortOccupancy;
    }
    else {
        req.address =
            AddressMapping_1.default.NumberOfCardOrBoardInPort16Addr +
                portIndex * AddressMapping_1.default.NumOfCardAndBoardInPortOccupancy +
                cardType * AddressMapping_1.default.NumberOfCardOrBoardInPortOccupancy;
    }
    return req;
}
exports.default = createReadNumberOfCardOrScanBoardInPort;
codec_1.Session.prototype.ReadNumberOfCardOrScanBoardInPort =
    async function ReadNumberOfCardOrScanBoardInPort(addr, portIndex, cardType) {
        const req = createReadNumberOfCardOrScanBoardInPort(addr, portIndex, cardType);
        return (0, codec_1.decodeUIntLE)(await this.connection.send(req));
    };
codec_1.Session.prototype.tryReadNumberOfCardOrScanBoardInPort =
    async function tryReadNumberOfCardOrScanBoardInPort(addr, portIndex, cardType) {
        const req = createReadNumberOfCardOrScanBoardInPort(addr, portIndex, cardType);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=ReadNumberOfCardOrScanBoardInPort.js.map