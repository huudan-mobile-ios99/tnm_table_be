"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetSender_FPGAProgramEdition(addr, portAddr, scanBoardAddr, bBroadcast, sender_FPGAProgramEdition) {
    const $data = (0, codec_1.encodeUIntLE)(sender_FPGAProgramEdition, AddressMapping_1.default.Scanner_FPGAProgramEditionOccupancy);
    const req = new codec_1.Request($data, bBroadcast, 'SetSender_FPGAProgramEdition');
    req.destination = addr;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping_1.default.Sender_FPGAProgramEditionAddr;
    return req;
}
exports.default = createSetSender_FPGAProgramEdition;
codec_1.Session.prototype.SetSender_FPGAProgramEdition = async function SetSender_FPGAProgramEdition(addr, portAddr, scanBoardAddr, bBroadcast, sender_FPGAProgramEdition) {
    const req = createSetSender_FPGAProgramEdition(addr, portAddr, scanBoardAddr, bBroadcast, sender_FPGAProgramEdition);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetSender_FPGAProgramEdition = async function trySetSender_FPGAProgramEdition(addr, portAddr, scanBoardAddr, sender_FPGAProgramEdition) {
    const req = createSetSender_FPGAProgramEdition(addr, portAddr, scanBoardAddr, false, sender_FPGAProgramEdition);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetSender_FPGAProgramEdition.js.map