"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetScannerxBitEnable(addr, portAddr, scanBoardAddr, bBroadcast, da) {
    const req = new codec_1.Request([da], bBroadcast, 'SetScannerxBitEnable');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping_1.default.Scanner22bitEnableAddr;
    return req;
}
exports.default = createSetScannerxBitEnable;
codec_1.Session.prototype.SetScannerxBitEnable = async function SetScannerxBitEnable(addr, portAddr, scanBoardAddr, bBroadcast, da) {
    const req = createSetScannerxBitEnable(addr, portAddr, scanBoardAddr, bBroadcast, da);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetScannerxBitEnable = async function trySetScannerxBitEnable(addr, portAddr, scanBoardAddr, da) {
    const req = createSetScannerxBitEnable(addr, portAddr, scanBoardAddr, false, da);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetScannerxBitEnable.js.map