"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createDistribute_ReadGoldenFPGAVersion(addr, portAddr, distributeAddr) {
    const req = new codec_1.Request(AddressMapping_1.default.Distribute_GoldenFPGAVersionOccupancy, 'Distribute_ReadGoldenFPGAVersion');
    req.destination = addr;
    req.deviceType = 3;
    req.port = portAddr;
    req.rcvIndex = distributeAddr;
    req.address = AddressMapping_1.default.Distribute_GoldenFPGAVersionAddr;
    return req;
}
exports.default = createDistribute_ReadGoldenFPGAVersion;
codec_1.Session.prototype.Distribute_ReadGoldenFPGAVersion =
    async function Distribute_ReadGoldenFPGAVersion(addr, portAddr, distributeAddr) {
        const req = createDistribute_ReadGoldenFPGAVersion(addr, portAddr, distributeAddr);
        return (0, codec_1.decodeUIntLE)(await this.connection.send(req));
    };
codec_1.Session.prototype.tryDistribute_ReadGoldenFPGAVersion =
    async function tryDistribute_ReadGoldenFPGAVersion(addr, portAddr, distributeAddr) {
        const req = createDistribute_ReadGoldenFPGAVersion(addr, portAddr, distributeAddr);
        return this.connection.trySend(req);
    };
//# sourceMappingURL=Distribute_ReadGoldenFPGAVersion.js.map