"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetDclkHighRatio(addr, portAddr, scanBoardAddr, bBroadcast, dclkHighRatio) {
    const $data = (0, codec_1.encodeUIntLE)(dclkHighRatio, AddressMapping_1.default.DclkHighRatioOccupancy);
    const req = new codec_1.Request($data, bBroadcast, 'SetDclkHighRatio');
    req.destination = addr;
    req.deviceType = 1;
    req.port = portAddr;
    req.rcvIndex = scanBoardAddr;
    req.address = AddressMapping_1.default.DclkHighRatioAddr;
    return req;
}
exports.default = createSetDclkHighRatio;
codec_1.Session.prototype.SetDclkHighRatio = async function SetDclkHighRatio(addr, portAddr, scanBoardAddr, bBroadcast, dclkHighRatio) {
    const req = createSetDclkHighRatio(addr, portAddr, scanBoardAddr, bBroadcast, dclkHighRatio);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetDclkHighRatio = async function trySetDclkHighRatio(addr, portAddr, scanBoardAddr, dclkHighRatio) {
    const req = createSetDclkHighRatio(addr, portAddr, scanBoardAddr, false, dclkHighRatio);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetDclkHighRatio.js.map