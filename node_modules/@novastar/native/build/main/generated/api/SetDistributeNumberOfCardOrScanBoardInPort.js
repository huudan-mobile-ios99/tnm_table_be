"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetDistributeNumberOfCardOrScanBoardInPort(addr, portAddr, distributeAddr, bBroadcast, number, portIndex, cardType) {
    const $data = (0, codec_1.encodeUIntLE)(number, AddressMapping_1.default.DistributeNumberOfCardOrBoardInPortOccupancy);
    const req = new codec_1.Request($data, bBroadcast, 'SetDistributeNumberOfCardOrScanBoardInPort');
    req.destination = addr;
    req.deviceType = 3;
    req.port = portAddr;
    req.rcvIndex = distributeAddr;
    req.address = 0;
    if (portIndex > 3) {
        req.address =
            AddressMapping_1.default.DistributeNumberOfCardOrBoardInPortAddr +
                AddressMapping_1.default.DistributePortAddr +
                portIndex * AddressMapping_1.default.DistributeNumOfCardAndBoardInPortOccupancy +
                cardType * AddressMapping_1.default.DistributeNumberOfCardOrBoardInPortOccupancy;
    }
    else {
        req.address =
            AddressMapping_1.default.DistributeNumberOfCardOrBoardInPortAddr +
                portIndex * AddressMapping_1.default.DistributeNumOfCardAndBoardInPortOccupancy +
                cardType * AddressMapping_1.default.DistributeNumberOfCardOrBoardInPortOccupancy;
    }
    return req;
}
exports.default = createSetDistributeNumberOfCardOrScanBoardInPort;
codec_1.Session.prototype.SetDistributeNumberOfCardOrScanBoardInPort =
    async function SetDistributeNumberOfCardOrScanBoardInPort(addr, portAddr, distributeAddr, bBroadcast, number, portIndex, cardType) {
        const req = createSetDistributeNumberOfCardOrScanBoardInPort(addr, portAddr, distributeAddr, bBroadcast, number, portIndex, cardType);
        await this.connection.send(req);
    };
codec_1.Session.prototype.trySetDistributeNumberOfCardOrScanBoardInPort =
    async function trySetDistributeNumberOfCardOrScanBoardInPort(addr, portAddr, distributeAddr, number, portIndex, cardType) {
        const req = createSetDistributeNumberOfCardOrScanBoardInPort(addr, portAddr, distributeAddr, false, number, portIndex, cardType);
        return (await this.connection.trySend(req))?.ack ?? null;
    };
//# sourceMappingURL=SetDistributeNumberOfCardOrScanBoardInPort.js.map