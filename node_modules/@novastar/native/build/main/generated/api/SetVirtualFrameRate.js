"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const codec_1 = require("@novastar/codec");
const AddressMapping_1 = __importDefault(require("../AddressMapping"));
function createSetVirtualFrameRate(addr, bBroadcast, virtualFrameRate) {
    const $data = (0, codec_1.encodeUIntLE)(virtualFrameRate, AddressMapping_1.default.VirtualFrameRateOccupancy);
    const req = new codec_1.Request($data, bBroadcast, 'SetVirtualFrameRate');
    req.destination = addr;
    req.address = AddressMapping_1.default.VirtualFrameRateAddr;
    return req;
}
exports.default = createSetVirtualFrameRate;
codec_1.Session.prototype.SetVirtualFrameRate = async function SetVirtualFrameRate(addr, bBroadcast, virtualFrameRate) {
    const req = createSetVirtualFrameRate(addr, bBroadcast, virtualFrameRate);
    await this.connection.send(req);
};
codec_1.Session.prototype.trySetVirtualFrameRate = async function trySetVirtualFrameRate(addr, virtualFrameRate) {
    const req = createSetVirtualFrameRate(addr, false, virtualFrameRate);
    return (await this.connection.trySend(req))?.ack ?? null;
};
//# sourceMappingURL=SetVirtualFrameRate.js.map