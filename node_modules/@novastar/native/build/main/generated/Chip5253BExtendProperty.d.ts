import * as t from 'io-ts';
export declare const Chip5253BExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    FirstSweepElimination: t.Type<number, number, unknown>;
    UnderEliminateGhost: t.Type<number, number, unknown>;
    UnderEliminateGhostingEnhancedMode: t.Type<boolean, boolean, unknown>;
    LowAshEnhanceUniformity: t.Type<boolean, boolean, unknown>;
    AdvancedRLowAshColorCastCompensation1: t.Type<number, number, unknown>;
    AdvancedRLowAshColorCastCompensation3: t.Type<number, number, unknown>;
    DislodgeBadPointsGrade: t.Type<number, number, unknown>;
    TextGhostElimination: t.Type<number, number, unknown>;
    CrossCouplingOptimization: t.Type<number, number, unknown>;
    BrightBlockCouplingOptimization: t.Type<number, number, unknown>;
    FirstSweepBiasElimination: t.Type<number, number, unknown>;
}>, t.PartialC<{
    GrayHorizontalStripesEliminateLow: t.Type<boolean, boolean, unknown>;
    LowAshColorCastCompensation: t.Type<number, number, unknown>;
    AdvancedRLowAshColorCastCompensation2: t.Type<number, number, unknown>;
    GradientCompensation: t.Type<number, number, unknown>;
    GradientCompensationOne: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link Chip5253BExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:32405
 */
export declare const Chip5253BExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    FirstSweepElimination: t.Type<number, number, unknown>;
    UnderEliminateGhost: t.Type<number, number, unknown>;
    UnderEliminateGhostingEnhancedMode: t.Type<boolean, boolean, unknown>;
    LowAshEnhanceUniformity: t.Type<boolean, boolean, unknown>;
    AdvancedRLowAshColorCastCompensation1: t.Type<number, number, unknown>;
    AdvancedRLowAshColorCastCompensation3: t.Type<number, number, unknown>;
    DislodgeBadPointsGrade: t.Type<number, number, unknown>;
    TextGhostElimination: t.Type<number, number, unknown>;
    CrossCouplingOptimization: t.Type<number, number, unknown>;
    BrightBlockCouplingOptimization: t.Type<number, number, unknown>;
    FirstSweepBiasElimination: t.Type<number, number, unknown>;
}>, t.PartialC<{
    GrayHorizontalStripesEliminateLow: t.Type<boolean, boolean, unknown>;
    LowAshColorCastCompensation: t.Type<number, number, unknown>;
    AdvancedRLowAshColorCastCompensation2: t.Type<number, number, unknown>;
    GradientCompensation: t.Type<number, number, unknown>;
    GradientCompensationOne: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"Chip5253BExtendProperty">;
}>]>;
export interface Chip5253BExtendProperty extends t.TypeOf<typeof Chip5253BExtendProperty> {
}
