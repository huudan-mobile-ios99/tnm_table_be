import * as t from 'io-ts';
import { ChipMBI5038ExtendProperty } from './ChipMBI5038ExtendProperty';
export declare const ChipMBI5038RGBExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ThermalShutdown: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SwitchSpeed: t.Type<boolean, boolean, unknown>;
        CurrentSelection: t.Type<number, number, unknown>;
        PowerMode: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5038ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ThermalShutdown: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SwitchSpeed: t.Type<boolean, boolean, unknown>;
        CurrentSelection: t.Type<number, number, unknown>;
        PowerMode: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5038ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ThermalShutdown: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SwitchSpeed: t.Type<boolean, boolean, unknown>;
        CurrentSelection: t.Type<number, number, unknown>;
        PowerMode: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5038ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ThermalShutdown: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SwitchSpeed: t.Type<boolean, boolean, unknown>;
        CurrentSelection: t.Type<number, number, unknown>;
        PowerMode: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5038ExtendProperty">;
    }>]>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipMBI5038RGBExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:41940
 */
export declare const ChipMBI5038RGBExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ThermalShutdown: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SwitchSpeed: t.Type<boolean, boolean, unknown>;
        CurrentSelection: t.Type<number, number, unknown>;
        PowerMode: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5038ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ThermalShutdown: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SwitchSpeed: t.Type<boolean, boolean, unknown>;
        CurrentSelection: t.Type<number, number, unknown>;
        PowerMode: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5038ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ThermalShutdown: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SwitchSpeed: t.Type<boolean, boolean, unknown>;
        CurrentSelection: t.Type<number, number, unknown>;
        PowerMode: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5038ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ThermalShutdown: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SwitchSpeed: t.Type<boolean, boolean, unknown>;
        CurrentSelection: t.Type<number, number, unknown>;
        PowerMode: t.Type<boolean, boolean, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI5038ExtendProperty">;
    }>]>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipMBI5038RGBExtendProperty">;
}>]>;
export interface ChipMBI5038RGBExtendProperty extends t.TypeOf<typeof ChipMBI5038RGBExtendProperty> {
    RedProperty?: ChipMBI5038ExtendProperty;
    GreenProperty?: ChipMBI5038ExtendProperty;
    BlueProperty?: ChipMBI5038ExtendProperty;
    VRedProperty?: ChipMBI5038ExtendProperty;
}
