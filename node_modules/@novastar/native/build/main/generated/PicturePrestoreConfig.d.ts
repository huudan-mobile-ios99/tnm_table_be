import * as t from 'io-ts';
import { CabinetStoreEffectEnum } from './CabinetStoreEffect';
import { NoSignalModeEnum } from './NoSignalMode';
import { PictureShowModeEnum } from './PictureShowMode';
/**
 * @category Codecs
 * @desc Codec for interface {@link PicturePrestoreConfig}
 * @see Automatically generated from ../decompiled/Nova.GigabitController.ProgramInnerData.decompiled.cs:739
 */
export declare const PicturePrestoreConfig: t.IntersectionC<[t.TypeC<{
    PictureName: t.StringC;
    StoreEffect: t.Type<CabinetStoreEffectEnum, "FullScreen" | "SingleCabinet", unknown>;
    FullScreenShowMode: t.Type<PictureShowModeEnum, "Tile" | "Stretch" | "Center", unknown>;
    OneCabinetShowMode: t.Type<PictureShowModeEnum, "Tile" | "Stretch" | "Center", unknown>;
    IsUseStartPicture: t.Type<boolean, boolean, unknown>;
    StartPictureTime: t.Type<number, number, unknown>;
    OfflineMode: t.Type<NoSignalModeEnum, "BlackScreen" | "LastFrame" | "PrestorePicture", unknown>;
    NoDviMode: t.Type<NoSignalModeEnum, "BlackScreen" | "LastFrame" | "PrestorePicture", unknown>;
}>, t.PartialC<{}>]>;
export interface PicturePrestoreConfig extends t.TypeOf<typeof PicturePrestoreConfig> {
    StoreEffect: CabinetStoreEffectEnum;
    FullScreenShowMode: PictureShowModeEnum;
    OneCabinetShowMode: PictureShowModeEnum;
    OfflineMode: NoSignalModeEnum;
    NoDviMode: NoSignalModeEnum;
}
