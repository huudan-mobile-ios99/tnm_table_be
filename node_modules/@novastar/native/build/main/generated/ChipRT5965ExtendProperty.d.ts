import * as t from 'io-ts';
export declare const ChipRT5965ExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    FirstReg: t.Type<number, number, unknown>;
    SecondReg: t.Type<number, number, unknown>;
    ThirdReg: t.Type<number, number, unknown>;
    CurrentGain: t.Type<number, number, unknown>;
    CouplingEliminationLevel: t.Type<number, number, unknown>;
    CouplingEliminationEn: t.Type<boolean, boolean, unknown>;
    FirstScanDarkEliminationLevel: t.Type<number, number, unknown>;
    LowCompsentionOne: t.Type<number, number, unknown>;
    LowCompsentionTwo: t.Type<number, number, unknown>;
    GhostEliminationLevel: t.Type<number, number, unknown>;
    ShadowEhancedModeEn: t.Type<boolean, boolean, unknown>;
    SlowOpen: t.Type<boolean, boolean, unknown>;
    OpenCircuitDetectionLevel: t.Type<number, number, unknown>;
    PowerSavingModeEn: t.Type<boolean, boolean, unknown>;
    ChannelPowerSavingModeEn: t.Type<boolean, boolean, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipRT5965ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipRT5965.decompiled.cs:1017
 */
export declare const ChipRT5965ExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    FirstReg: t.Type<number, number, unknown>;
    SecondReg: t.Type<number, number, unknown>;
    ThirdReg: t.Type<number, number, unknown>;
    CurrentGain: t.Type<number, number, unknown>;
    CouplingEliminationLevel: t.Type<number, number, unknown>;
    CouplingEliminationEn: t.Type<boolean, boolean, unknown>;
    FirstScanDarkEliminationLevel: t.Type<number, number, unknown>;
    LowCompsentionOne: t.Type<number, number, unknown>;
    LowCompsentionTwo: t.Type<number, number, unknown>;
    GhostEliminationLevel: t.Type<number, number, unknown>;
    ShadowEhancedModeEn: t.Type<boolean, boolean, unknown>;
    SlowOpen: t.Type<boolean, boolean, unknown>;
    OpenCircuitDetectionLevel: t.Type<number, number, unknown>;
    PowerSavingModeEn: t.Type<boolean, boolean, unknown>;
    ChannelPowerSavingModeEn: t.Type<boolean, boolean, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipRT5965ExtendProperty">;
}>]>;
export interface ChipRT5965ExtendProperty extends t.TypeOf<typeof ChipRT5965ExtendProperty> {
}
