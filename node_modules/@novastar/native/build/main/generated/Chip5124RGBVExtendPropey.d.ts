import * as t from 'io-ts';
import { ChipMBI524ExtendProperty } from './ChipMBI524ExtendProperty';
export declare const Chip5124RGBVExtendPropeyBase: t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
        LowAshImproveEnable: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
        IsAdvancedMode: t.Type<boolean, boolean, unknown>;
        RedRegValueConfigFirst: t.Type<number, number, unknown>;
        GreenRegValueConfigFirst: t.Type<number, number, unknown>;
        BlueRegValueConfigFirst: t.Type<number, number, unknown>;
        VRedRegValueConfigFirst: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI524ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
        LowAshImproveEnable: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
        IsAdvancedMode: t.Type<boolean, boolean, unknown>;
        RedRegValueConfigFirst: t.Type<number, number, unknown>;
        GreenRegValueConfigFirst: t.Type<number, number, unknown>;
        BlueRegValueConfigFirst: t.Type<number, number, unknown>;
        VRedRegValueConfigFirst: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI524ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
        LowAshImproveEnable: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
        IsAdvancedMode: t.Type<boolean, boolean, unknown>;
        RedRegValueConfigFirst: t.Type<number, number, unknown>;
        GreenRegValueConfigFirst: t.Type<number, number, unknown>;
        BlueRegValueConfigFirst: t.Type<number, number, unknown>;
        VRedRegValueConfigFirst: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI524ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
        LowAshImproveEnable: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
        IsAdvancedMode: t.Type<boolean, boolean, unknown>;
        RedRegValueConfigFirst: t.Type<number, number, unknown>;
        GreenRegValueConfigFirst: t.Type<number, number, unknown>;
        BlueRegValueConfigFirst: t.Type<number, number, unknown>;
        VRedRegValueConfigFirst: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI524ExtendProperty">;
    }>]>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link Chip5124RGBVExtendPropey}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:43103
 */
export declare const Chip5124RGBVExtendPropey: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.PartialC<{
    RedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
        LowAshImproveEnable: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
        IsAdvancedMode: t.Type<boolean, boolean, unknown>;
        RedRegValueConfigFirst: t.Type<number, number, unknown>;
        GreenRegValueConfigFirst: t.Type<number, number, unknown>;
        BlueRegValueConfigFirst: t.Type<number, number, unknown>;
        VRedRegValueConfigFirst: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI524ExtendProperty">;
    }>]>;
    GreenProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
        LowAshImproveEnable: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
        IsAdvancedMode: t.Type<boolean, boolean, unknown>;
        RedRegValueConfigFirst: t.Type<number, number, unknown>;
        GreenRegValueConfigFirst: t.Type<number, number, unknown>;
        BlueRegValueConfigFirst: t.Type<number, number, unknown>;
        VRedRegValueConfigFirst: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI524ExtendProperty">;
    }>]>;
    BlueProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
        LowAshImproveEnable: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
        IsAdvancedMode: t.Type<boolean, boolean, unknown>;
        RedRegValueConfigFirst: t.Type<number, number, unknown>;
        GreenRegValueConfigFirst: t.Type<number, number, unknown>;
        BlueRegValueConfigFirst: t.Type<number, number, unknown>;
        VRedRegValueConfigFirst: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI524ExtendProperty">;
    }>]>;
    VRedProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
        ColorCompensate: t.Type<number, number, unknown>;
        LowAshImproveEnable: t.Type<boolean, boolean, unknown>;
    }>, t.PartialC<{
        SetBlanking: t.Type<number, number, unknown>;
        IsAdvancedMode: t.Type<boolean, boolean, unknown>;
        RedRegValueConfigFirst: t.Type<number, number, unknown>;
        GreenRegValueConfigFirst: t.Type<number, number, unknown>;
        BlueRegValueConfigFirst: t.Type<number, number, unknown>;
        VRedRegValueConfigFirst: t.Type<number, number, unknown>;
    }>]>, t.PartialC<{
        '@_xsi:type': t.LiteralC<"ChipMBI524ExtendProperty">;
    }>]>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"Chip5124RGBVExtendPropey">;
}>]>;
export interface Chip5124RGBVExtendPropey extends t.TypeOf<typeof Chip5124RGBVExtendPropey> {
    RedProperty?: ChipMBI524ExtendProperty;
    GreenProperty?: ChipMBI524ExtendProperty;
    BlueProperty?: ChipMBI524ExtendProperty;
    VRedProperty?: ChipMBI524ExtendProperty;
}
