import * as t from 'io-ts';
export declare const ChipSUM2117ExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    SetDataInput: t.Type<number, number, unknown>;
}>, t.PartialC<{
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
    RSetVanishingCompensation: t.Type<number, number, unknown>;
    GSetVanishingCompensation: t.Type<number, number, unknown>;
    BSetVanishingCompensation: t.Type<number, number, unknown>;
    RSetVanishing: t.Type<number, number, unknown>;
    GSetVanishing: t.Type<number, number, unknown>;
    BSetVanishing: t.Type<number, number, unknown>;
    InflectionCurrent: t.Type<number, number, unknown>;
    SetCurrentPosition: t.Type<number, number, unknown>;
    RedRegValueConfigFirst: t.Type<number, number, unknown>;
    GreenRegValueConfigFirst: t.Type<number, number, unknown>;
    BlueRegValueConfigFirst: t.Type<number, number, unknown>;
    VRedRegValueConfigFirst: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipSUM2117ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:50039
 */
export declare const ChipSUM2117ExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    SetDataInput: t.Type<number, number, unknown>;
}>, t.PartialC<{
    IsAdvancedMode: t.Type<boolean, boolean, unknown>;
    RSetVanishingCompensation: t.Type<number, number, unknown>;
    GSetVanishingCompensation: t.Type<number, number, unknown>;
    BSetVanishingCompensation: t.Type<number, number, unknown>;
    RSetVanishing: t.Type<number, number, unknown>;
    GSetVanishing: t.Type<number, number, unknown>;
    BSetVanishing: t.Type<number, number, unknown>;
    InflectionCurrent: t.Type<number, number, unknown>;
    SetCurrentPosition: t.Type<number, number, unknown>;
    RedRegValueConfigFirst: t.Type<number, number, unknown>;
    GreenRegValueConfigFirst: t.Type<number, number, unknown>;
    BlueRegValueConfigFirst: t.Type<number, number, unknown>;
    VRedRegValueConfigFirst: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipSUM2117ExtendProperty">;
}>]>;
export interface ChipSUM2117ExtendProperty extends t.TypeOf<typeof ChipSUM2117ExtendProperty> {
}
