"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChipFM6565RGBVExtendProperty = exports.ChipFM6565RGBVExtendPropertyBase = void 0;
const t = __importStar(require("io-ts"));
const common = __importStar(require("../lib/common"));
const ChipBaseExtendPropey_1 = require("./ChipBaseExtendPropey");
const ChipFM6565ExtendProperty_1 = require("./ChipFM6565ExtendProperty");
exports.ChipFM6565RGBVExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey_1.ChipBaseExtendPropey,
    t.type({
        REG_LENGTH: common.Int32_48,
    }),
    t.partial({
        RedProperty: ChipFM6565ExtendProperty_1.ChipFM6565ExtendProperty,
        GreenProperty: ChipFM6565ExtendProperty_1.ChipFM6565ExtendProperty,
        BlueProperty: ChipFM6565ExtendProperty_1.ChipFM6565ExtendProperty,
        VRedProperty: ChipFM6565ExtendProperty_1.ChipFM6565ExtendProperty,
        IsAdvancedMode: common.Bool,
        IsUseNewModule: common.Bool,
        ChipLibVersion: common.UInt8,
        SpecialDataLen: common.Int32,
        SpecialRegisterAddr: common.UInt32,
    }),
], 'ChipFM6565RGBVExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipFM6565RGBVExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipFM6565.decompiled.cs:1329
 */
exports.ChipFM6565RGBVExtendProperty = t.intersection([
    exports.ChipFM6565RGBVExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipFM6565RGBVExtendProperty') }),
], 'ChipFM6565RGBVExtendProperty');
//# sourceMappingURL=ChipFM6565RGBVExtendProperty.js.map