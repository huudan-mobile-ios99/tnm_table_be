import * as t from 'io-ts';
import { AutoAdjustFreqConfigModeEnum } from './AutoAdjustFreqConfigMode';
/**
 * @category Codecs
 * @desc Codec for interface {@link ChipAutoAdjustRefreshRateParamBase}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:16954
 */
export declare const ChipAutoAdjustRefreshRateParamBase: t.IntersectionC<[t.TypeC<{
    ChipAutoRefreshRateParamList: t.ArrayC<t.PartialC<{
        AutoAdjustFreqType: t.Type<import("./AutoAdjustFreqType").AutoAdjustFreqTypeEnum, "Freq_50HZ" | "Freq_60HZ" | "Freq_75HZ" | "Freq_120HZ" | "Freq_48HZ" | "Freq_30HZ" | "Freq_85HZ" | "Freq_100HZ" | "Freq_24HZ" | "Freq_72HZ" | "Freq_25HZ" | "Freq_240HZ", unknown>;
        RefreshRateParam: t.PartialC<{}>;
        IsConfigCurrentField: t.Type<boolean, boolean, unknown>;
    }>>;
}>, t.PartialC<{
    ScanCount: t.Type<number, number, unknown>;
    ConfigMode: t.Type<AutoAdjustFreqConfigModeEnum, "Addr_1B00" | "Addr_0200" | "Addr_1B00And0200" | "UnKnow", unknown>;
}>]>;
export interface ChipAutoAdjustRefreshRateParamBase extends t.TypeOf<typeof ChipAutoAdjustRefreshRateParamBase> {
    ConfigMode?: AutoAdjustFreqConfigModeEnum;
}
