"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Chip9373ExtendPropety = exports.Chip9373ExtendPropetyBase = void 0;
const t = __importStar(require("io-ts"));
const common = __importStar(require("../lib/common"));
const ChipBaseExtendPropey_1 = require("./ChipBaseExtendPropey");
exports.Chip9373ExtendPropetyBase = t.intersection([
    ChipBaseExtendPropey_1.ChipBaseExtendPropey,
    t.type({
        BFirstScancompensation: common.UInt8_2,
        BlueVanishingRating: common.UInt8_1,
        CrossEn: common.Bool_true,
        GCurrentCompensationThird: common.UInt8_1,
        GFirstScancompensation: common.UInt8_1,
        GrayDepth: common.UInt8_2,
        GreenVanishingRating: common.UInt8_2,
        RCurrentCompensationThird: common.UInt8_2,
        RedVanishingRating: common.UInt8_3,
        VRCurrentCompensationThird: common.UInt8_2,
        VRedVanishingRating: common.UInt8_3,
    }),
    t.partial({
        BCompensationMode: common.UInt8,
        BCurrentCompensationFirst: common.UInt8,
        BCurrentCompensationSec: common.UInt8,
        BCurrentCompensationThird: common.UInt8,
        BLowGrayValue: common.UInt8,
        GclkMutiRate: common.Bool,
        GCompensationMode: common.UInt8,
        GCurrentCompensationFirst: common.UInt8,
        GCurrentCompensationSec: common.UInt8,
        GLowGrayValue: common.UInt8,
        RCompensationMode: common.UInt8,
        RCurrentCompensationFirst: common.UInt8,
        RCurrentCompensationSec: common.UInt8,
        RCurrentCompensationFo: common.UInt8,
        GCurrentCompensationFo: common.UInt8,
        BCurrentCompensationFo: common.UInt8,
        RFirstScancompensation: common.UInt8,
        RLowGrayValue: common.UInt8,
        VRCurrentCompensationFirst: common.UInt8,
        VRCurrentCompensationSec: common.UInt8,
        VRFirstScancompensation: common.UInt8,
        VRLowGrayValue: common.UInt8,
    }),
], 'Chip9373ExtendPropetyBase');
/**
 * @category Codecs
 * @desc Codec for {@link Chip9373ExtendPropety}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:28631
 */
exports.Chip9373ExtendPropety = t.intersection([exports.Chip9373ExtendPropetyBase, t.partial({ '@_xsi:type': t.literal('Chip9373ExtendPropety') })], 'Chip9373ExtendPropety');
//# sourceMappingURL=Chip9373ExtendPropety.js.map