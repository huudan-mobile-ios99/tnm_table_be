import * as t from 'io-ts';
/**
 * @category Codecs
 * @desc Codec for interface {@link ChipMBI5850ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.ChipMBI5850.decompiled.cs:702
 */
export declare const ChipMBI5850ExtendProperty: t.IntersectionC<[t.TypeC<{
    REG_NUMBER: t.Type<number, number, unknown>;
    MBI5850REG: t.ArrayC<t.Type<number, number, unknown>>;
}>, t.PartialC<{
    GrayScale: t.Type<number, number, unknown>;
    EnDoubleRefresh: t.Type<boolean, boolean, unknown>;
    BlankUnitNumPerScan: t.Type<number, number, unknown>;
    ExcessiveTime: t.Type<number, number, unknown>;
    RowChangePoint: t.Type<number, number, unknown>;
    M: t.Type<number, number, unknown>;
    N: t.Type<number, number, unknown>;
    DVI: t.Type<number, number, unknown>;
    ShowsTheGhostGear_R: t.Type<number, number, unknown>;
    ShowsTheGhostGear_G: t.Type<number, number, unknown>;
    ShowsTheGhostGear_B: t.Type<number, number, unknown>;
    ShowsTheGeargradualGhost_R: t.Type<number, number, unknown>;
    ShowsTheGeargradualGhost_G: t.Type<number, number, unknown>;
    ShowsTheGeargradualGhost_B: t.Type<number, number, unknown>;
    HiddenGhostGear_1_R: t.Type<number, number, unknown>;
    HiddenGhostGear_1_G: t.Type<number, number, unknown>;
    HiddenGhostGear_1_B: t.Type<number, number, unknown>;
    HiddenGhostGear_2_R: t.Type<number, number, unknown>;
    HiddenGhostGear_2_G: t.Type<number, number, unknown>;
    HiddenGhostGear_2_B: t.Type<number, number, unknown>;
    HiddenGhostGear_3_R: t.Type<number, number, unknown>;
    HiddenGhostGear_3_G: t.Type<number, number, unknown>;
    HiddenGhostGear_3_B: t.Type<number, number, unknown>;
    LowAshCompensation_R: t.Type<number, number, unknown>;
    LowAshCompensation_G: t.Type<number, number, unknown>;
    LowAshCompensation_B: t.Type<number, number, unknown>;
    FailureLEDElimination: t.Type<boolean, boolean, unknown>;
    DislodgeBadPointsGrade_R: t.Type<number, number, unknown>;
    DislodgeBadPointsGrade_G: t.Type<number, number, unknown>;
    DislodgeBadPointsGrade_B: t.Type<number, number, unknown>;
    Gain_R: t.Type<number, number, unknown>;
    Gain_G: t.Type<number, number, unknown>;
    Gain_B: t.Type<number, number, unknown>;
}>]>;
export interface ChipMBI5850ExtendProperty extends t.TypeOf<typeof ChipMBI5850ExtendProperty> {
}
