"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChipGW6808ExtendProperty = exports.ChipGW6808ExtendPropertyBase = void 0;
const t = __importStar(require("io-ts"));
const common = __importStar(require("../lib/common"));
const ChipBaseExtendPropey_1 = require("./ChipBaseExtendPropey");
exports.ChipGW6808ExtendPropertyBase = t.intersection([
    ChipBaseExtendPropey_1.ChipBaseExtendPropey,
    t.type({
        ConfigValue7: common.withDefault(common.Int32, 67),
        ConfigValue8: common.Int32_3,
        ConfigValue9: common.Int32_1,
        ConfigValue17: common.Int32_10,
        ConfigValue18: common.Int32_13,
        ConfigValue19: common.withDefault(common.Int32, 18),
        ConfigValue20: common.Int32_25,
        ConfigValue21: common.Int32_32,
        ConfigValue22: common.withDefault(common.Int32, 72),
        ConfigValue23: common.Int32_137,
        ConfigValue24: common.Int32_137,
        ConfigValue25: common.Int32_137,
        ConfigValue26: common.Int32_137,
        ConfigValue27: common.Int32_137,
        ConfigValue28: common.Int32_137,
        ConfigValue29: common.Int32_140,
        ConfigValue30: common.Int32_140,
        ConfigValue31: common.Int32_140,
        ConfigValue32: common.withDefault(common.Int32, 156),
        RedResistanceValue: common.withDefault(common.Int32, 2200),
        GreenResistanceValue: common.Int32_3300,
        BlueResistanceValue: common.Int32_3300,
    }),
    t.partial({
        IsAdvancedMode: common.Bool,
        ConfigArray: common.Base64,
        ConfigValue1: common.Int32,
        ConfigValue2: common.Int32,
        ConfigValue3: common.Int32,
        ConfigValue4: common.Int32,
        ConfigValue5: common.Int32,
        ConfigValue6: common.Int32,
        ConfigValue10: common.Int32,
        ConfigValue11: common.Int32,
        ConfigValue12: common.Int32,
        ConfigValue13: common.Int32,
        ConfigValue14: common.Int32,
        ConfigValue15: common.Int32,
        ConfigValue16: common.Int32,
    }),
], 'ChipGW6808ExtendPropertyBase');
/**
 * @category Codecs
 * @desc Codec for {@link ChipGW6808ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:46890
 */
exports.ChipGW6808ExtendProperty = t.intersection([
    exports.ChipGW6808ExtendPropertyBase,
    t.partial({ '@_xsi:type': t.literal('ChipGW6808ExtendProperty') }),
], 'ChipGW6808ExtendProperty');
//# sourceMappingURL=ChipGW6808ExtendProperty.js.map