import * as t from 'io-ts';
export declare const ChipRT5924ExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    RLowAshRange: t.Type<number, number, unknown>;
    GLowAshRange: t.Type<number, number, unknown>;
    BLowAshRange: t.Type<number, number, unknown>;
    VRLowAshRange: t.Type<number, number, unknown>;
    RPrechargeFun: t.Type<boolean, boolean, unknown>;
    GPrechargeFun: t.Type<boolean, boolean, unknown>;
    BPrechargeFun: t.Type<boolean, boolean, unknown>;
    VRPrechargeFun: t.Type<boolean, boolean, unknown>;
}>, t.PartialC<{}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipRT5924ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:48706
 */
export declare const ChipRT5924ExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    RLowAshRange: t.Type<number, number, unknown>;
    GLowAshRange: t.Type<number, number, unknown>;
    BLowAshRange: t.Type<number, number, unknown>;
    VRLowAshRange: t.Type<number, number, unknown>;
    RPrechargeFun: t.Type<boolean, boolean, unknown>;
    GPrechargeFun: t.Type<boolean, boolean, unknown>;
    BPrechargeFun: t.Type<boolean, boolean, unknown>;
    VRPrechargeFun: t.Type<boolean, boolean, unknown>;
}>, t.PartialC<{}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipRT5924ExtendProperty">;
}>]>;
export interface ChipRT5924ExtendProperty extends t.TypeOf<typeof ChipRT5924ExtendProperty> {
}
