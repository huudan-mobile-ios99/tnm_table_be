import * as t from 'io-ts';
export declare const ChipSUM2028ExtendPropertyBase: t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    ColorCompensate: t.Type<number, number, unknown>;
    UpdataType: t.Type<boolean, boolean, unknown>;
    OEType: t.Type<boolean, boolean, unknown>;
    SetDisapparate: t.Type<number, number, unknown>;
}>, t.PartialC<{
    SetFrequency: t.Type<number, number, unknown>;
    SetConstantCurrent: t.Type<number, number, unknown>;
}>]>;
/**
 * @category Codecs
 * @desc Codec for {@link ChipSUM2028ExtendProperty}
 * @see Automatically generated from ../decompiled/Nova.LCT.GigabitSystem.DataClass.decompiled.cs:47737
 */
export declare const ChipSUM2028ExtendProperty: t.IntersectionC<[t.IntersectionC<[t.PartialC<{}>, t.TypeC<{
    ColorCompensate: t.Type<number, number, unknown>;
    UpdataType: t.Type<boolean, boolean, unknown>;
    OEType: t.Type<boolean, boolean, unknown>;
    SetDisapparate: t.Type<number, number, unknown>;
}>, t.PartialC<{
    SetFrequency: t.Type<number, number, unknown>;
    SetConstantCurrent: t.Type<number, number, unknown>;
}>]>, t.PartialC<{
    '@_xsi:type': t.LiteralC<"ChipSUM2028ExtendProperty">;
}>]>;
export interface ChipSUM2028ExtendProperty extends t.TypeOf<typeof ChipSUM2028ExtendProperty> {
}
